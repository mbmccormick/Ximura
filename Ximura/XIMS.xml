<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ximura</name>
    </assembly>
    <members>
        <member name="T:Ximura.Command.JobContext`6">
            <summary>
            This context is used by finite state machines that require application support.
            </summary>
        </member>
        <member name="T:Ximura.Command.Context`4">
            <summary>
            Context is the base object for the Finite State Machine.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraFSMContext">
            <summary>
            This interface is implemented by all contexts in the FSM architecture.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMContext.UserName">
            <summary>
            This property contains the session username.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMContext.Domain">
            <summary>
            This property contains the session domain.
            </summary>
        </member>
        <member name="F:Ximura.Command.Context`4.mContextSession">
            <summary>
            This is the internal session which can be used to make requests to the rest of the 
            Ximura application.
            </summary>
        </member>
        <member name="F:Ximura.Command.Context`4.mContextPool">
            <summary>
            The context pool.
            </summary>
        </member>
        <member name="F:Ximura.Command.Context`4.mState">
            <summary>
            This is the current state.
            </summary>
        </member>
        <member name="F:Ximura.Command.Context`4.mContextSettings">
            <summary>
            This is the Finite State Machine.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.Reset">
            <summary>
            This is the default reset method as implemented by the IXimuraPoolableObject interface.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.Reset(Ximura.IXimuraFSMSettingsBase,Ximura.IXimuraSessionRQ,Ximura.Command.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the context to the default start state..
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="contextSession">This is the context session.</param>
        </member>
        <member name="M:Ximura.Command.Context`4.ContextSessionInitialize(System.String)">
            <summary>
            This method creates a context session if one doesn't exist already.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.ContextSessionInitialize(System.String,System.String)">
            <summary>
            This method creates a context session if one doesn't exist already.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.CheckChangeState(System.String)">
            <summary>
            This method checks and then changes the state. If the state is not valid an exception is thrown.
            </summary>
            <param name="stateName">The state name to check.</param>
            <exception cref="!:Ximura.Helper.InvalidStateNameFSMException">This exception is thrown if the stateName cannot be resolved.</exception>
        </member>
        <member name="M:Ximura.Command.Context`4.ChangeState">
            <summary>
            This method changes the states to the initial state.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.ChangeState(System.String)">
            <summary>
            This method changes the state.
            </summary>
            <param name="stateName">The state. If this is set to null the initial state will be set.</param>
        </member>
        <member name="M:Ximura.Command.Context`4.CheckState(System.String)">
            <summary>
            This method returns true if the state exists in the FSM.
            </summary>
            <param name="stateName">The state.</param>
        </member>
        <member name="M:Ximura.Command.Context`4.StateCollection">
            <summary>
            This method returs a collection of states.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.Context`4.ObjectPoolReturn">
            <summary>
            This method returns the object ot the pool.
            </summary>
        </member>
        <member name="M:Ximura.Command.Context`4.SenderIdentityConfirm(Ximura.CommandRSEventArgs)">
            <summary>
            This method is used to validate that a callback is actually for this current instance.
            We need to do this as we recycle the contexts and it is possible that the callback is for a
            previous session.
            </summary>
            <param name="args">The callback arguments.</param>
            <returns>Returns true if the callback is for this specific instance.</returns>
        </member>
        <member name="M:Ximura.Command.Context`4.SenderIdentitySet(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            This method sets the context sender identity in the Envelope.
            </summary>
            <param name="Env">The envelope to set the identity.</param>
        </member>
        <member name="M:Ximura.Command.Context`4.GetObjectPool(System.Type)">
            <summary>
            This method retrieves the object pool for the particular object type.
            </summary>
            <param name="objectType">The object type.</param>
            <returns>Returns the object pool.</returns>
        </member>
        <member name="M:Ximura.Command.Context`4.GetObjectPool``1">
            <summary>
            This generic method retrieves a pool manager for the type specified.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <returns>Returns the pool manager.</returns>
        </member>
        <member name="M:Ximura.Command.Context`4.GetObject``1">
            <summary>
            This generic method retrieves an object from the pool manager for the type specified.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <returns>Returns the pool manager object.</returns>
        </member>
        <member name="M:Ximura.Command.Context`4.GetObject``1(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This generic method retrieves an object from the pool and deserializes the data in the info object in to the 
            new pool object.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
            <returns>An object of the type defined in the pool definition, with the serialization data.</returns>
        </member>
        <member name="P:Ximura.Command.Context`4.UserName">
            <summary>
            This property contains the session username.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.Domain">
            <summary>
            This property contains the session domain.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ContextSession">
            <summary>
            This is the context session.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ContextSessionNegotiate">
            <summary>
            This protected property is used for authentication services within the context.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CurrentState">
            <summary>
            This is the current purchase state.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CanPool">
            <summary>
            This method returns true if the object can be pooled.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.TrackID">
            <summary>
            This is the object pool tracking ID.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ObjectPool">
            <summary>
            This property sets a reference to the object pool on the object
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ObjectPoolCanReturn">
            <summary>
            This boolean property determines whether the object can return to the pool.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.SignatureID">
            <summary>
            This is the unique id for the context. 
            This will change each time the object is reset.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CDSHelper">
            <summary>
            This is the CDS Helper, that simplifies access to the Content Data Store
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ContextSettings">
            <summary>
            This is the connection to the FSM settings and services.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ContextPoolAccessGranted">
            <summary>
            This propery determines whether the context can get other contexts.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ApplicationName">
            <summary>
            The application name.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ApplicationID">
            <summary>
            The application ID.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ApplicationDescription">
            <summary>
            The application description.
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CommandID">
            <summary>
            The command ID
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CommandName">
            <summary>
            Te command name
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.CommandDescription">
            <summary>
            The command description
            </summary>
        </member>
        <member name="P:Ximura.Command.Context`4.ContextPoolAccess">
            <summary>
            This method allows access the context pool
            </summary>
        </member>
        <member name="F:Ximura.Command.JobContext`6.mJob">
            <summary>
            The job for the request.
            </summary>
        </member>
        <member name="M:Ximura.Command.JobContext`6.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Command.JobContext`6.Reset">
            <summary>
            This method rests the context
            </summary>
        </member>
        <member name="M:Ximura.Command.JobContext`6.Reset(Ximura.IXimuraFSMSettingsBase,Ximura.Server.SecurityManagerJob,Ximura.Command.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the connection state to ClosedRBPState.
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="job">The job request.</param>
        </member>
        <member name="M:Ximura.Command.JobContext`6.Reset(Ximura.IXimuraFSMSettingsBase,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3},Ximura.Command.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the connection state to ClosedRBPState.
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="job">The job request.</param>
        </member>
        <member name="P:Ximura.Command.JobContext`6.Job">
            <summary>
            The job.
            </summary>
        </member>
        <member name="P:Ximura.Command.JobContext`6.Destination">
            <summary>
            The envelope data destination.
            </summary>
        </member>
        <member name="P:Ximura.Command.JobContext`6.Data">
            <summary>
            This is the job envelope.
            </summary>
        </member>
        <member name="P:Ximura.Command.JobContext`6.Request">
            <summary>
            This is the job request.
            </summary>
        </member>
        <member name="P:Ximura.Command.JobContext`6.Response">
            <summary>
            This is the job response.
            </summary>
        </member>
        <member name="P:Ximura.Command.JobContext`6.ChildJobPriority">
            <summary>
            This property determines the child job priorities
            </summary>
        </member>
        <member name="T:Ximura.IXimuraConnectionToFSM`5">
            <summary>
            This interface is a bridge between the command and the context.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraConnectionToFSM`5.GetState(System.String)">
            <summary>
            This method returns the initial state.
            </summary>
            <param name="State">The type parameter for the state required.</param>
            <returns>The state.</returns>
        </member>
        <member name="M:Ximura.IXimuraConnectionToFSM`5.GetInitialState">
            <summary>
            This is the initial state.
            </summary>
            <returns>The initial state. If there is no initial state set 
            this will return null;</returns>
        </member>
        <member name="M:Ximura.IXimuraConnectionToFSM`5.GetStateName(`1)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.IXimuraConnectionToFSM`5.SignalCompletion(`0)">
            <summary>
            This method allows a context to signal to the FSM that it has completed its tasks.
            </summary>
            <param name="signaller">The context object which is signalling that it is now in a completed state.</param>
        </member>
        <member name="M:Ximura.IXimuraConnectionToFSM`5.GetFSMCompletionJob(`0)">
            <summary>
            This method is used to create a FSM callback for the context.
            </summary>
            <param name="context">The context to process.</param>
            <returns>Returns a new completion job.</returns>
        </member>
        <member name="T:Ximura.XimuraComponentPermissionAttribute">
            <summary>
            XimuraComponentPermissionAttribute is used to specify the security permissions for the 
            component.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionAttribute.#ctor(System.Int64,System.String)">
            <summary>
            The controller permission attribute.
            </summary>
            <param name="PermissionBitmap">The controller permission type.</param>
            <param name="description">The controller description.</param>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionAttribute.#ctor(System.Int64,System.String,System.String)">
            <summary>
            The controller permission attribute.
            </summary>
            <param name="PermissionBitmap">The controller permission type.</param>
            <param name="description">The controller description.</param>
            <param name="localizationID">The controller localization reference ID.</param>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionAttribute.#ctor(System.Int64,System.String,System.Boolean)">
            <summary>
            The controller permission attribute.
            </summary>
            <param name="PermissionBitmap">The controller permission type.</param>
            <param name="description">The controller description.</param>
            <param name="supported">This property defines whether the permission is supported.
            For situations where classes inherit permissions, 
            you may want to actually turn off support for a a permission.</param>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionAttribute.#ctor(System.Int64,System.String,System.String,System.Boolean)">
            <summary>
            The controller permission attribute.
            </summary>
            <param name="PermissionBitmap">The controller permission type.</param>
            <param name="description">The controller description.</param>
            <param name="localizationID">The controller localization reference ID.</param>
            <param name="supported">This property defines whether the permission is supported.
            For situations where classes inherit permissions, 
            you may want to actually turn off support for a a permission.</param>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionAttribute.PermissionBitmap">
            <summary>
            The permission type.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionAttribute.Description">
            <summary>
            The controller description.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionAttribute.LocalizationID">
            <summary>
            The controller localization reference ID.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionAttribute.PermissionIsSupported">
            <summary>
            This property specifies whether the permission has been set.
            </summary>
        </member>
        <member name="T:Ximura.Command.CommandPerformance">
            <summary>
            This method holds the standard performance indicators the a command.
            </summary>
        </member>
        <member name="T:Ximura.PerformanceCounterCollection">
            <summary>
            The PerformanceCounterCollection class provides group functionality
            for related performance counters.
            </summary>
        </member>
        <member name="T:Ximura.PerformanceBase">
            <summary>
            This is the base class for the performance counter architecture.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceBase.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceBase.PCID">
            <summary>
            The performance counter id.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceBase.AppID">
            <summary>
            The command id.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceBase.ID">
            <summary>
            The command id.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceBase.Name">
            <summary>
            The counter name.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceBase.Category">
            <summary>
            The category name.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounterCollection.mPerformanceCounters">
            <summary>
            This is the base performance counter collection.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounterCollection.syncObject">
            <summary>
            This is the base synchronization object.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.PerformanceCountersCreate">
            <summary>
            This method creates the performance counters for the collection. You should override this method to add your own counters.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.Add(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method adds a counter to the collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.Clear">
            <summary>
            This method clears the collection.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.Contains(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method returns true if the item in in the collection.
            </summary>
            <param name="item">The item to check.</param>
            <returns>Returns true if the item is in the collection.</returns>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.CopyTo(Ximura.IXimuraPerformanceCounter[],System.Int32)">
            <summary>
            This method copies the collection to the array passed.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">The position in the index to begin copying.</param>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.Remove(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>Return true if the item is successfully removed.</returns>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.GetEnumerator">
            <summary>
            This is the generic enumerator for the collection.
            </summary>
            <returns>Returns an lock-free enumerator for the collection.</returns>
        </member>
        <member name="M:Ximura.PerformanceCounterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            This is the standard enumerator.
            </summary>
            <returns>Returns an lock-free enumerator for the collection.</returns>
        </member>
        <member name="P:Ximura.PerformanceCounterCollection.Count">
            <summary>
            This is the collection length.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceCounterCollection.IsReadOnly">
            <summary>
            This method returns false as the performance counter collection is not locked.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSStatePerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Command.CommandConfiguration">
            <summary>
            This is the base class that holds the command configuration.
            </summary>
        </member>
        <member name="T:Ximura.ConfigurationBase">
            <summary>
            This class is the base class for the configuration functionality.
            </summary>
        </member>
        <member name="M:Ximura.ConfigurationBase.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.ConfigurationBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.ConfigurationBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="F:Ximura.Command.CommandConfiguration.mPollJobs">
            <summary>
            This list contains the TimerPoll jobs for the configuration.
            </summary>
        </member>
        <member name="F:Ximura.Command.CommandConfiguration.syncTimerPollJobs">
            <summary>
            This object is used to syncronize access to the mPollJobs collection.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.Reset">
            <summary>
            This override resets cached and calculated values.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.NamespaceManagerAdd(System.Xml.XmlNamespaceManager)">
            <summary>
            This override adds the ximura namespace to the default Namespace manager.
            </summary>
            <param name="nsm">The system default namespace manager.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.ProcessSessionHash(System.Byte[])">
            <summary>
            This method returns the process session hash.
            </summary>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.TimerPollJobsCreate(System.Collections.Generic.List{Ximura.Command.TimerPollJob}@)">
            <summary>
            This method creates the Poll job collection. This method will only be called once and will be wrapped around the 
            lock(syncTimerPollJobs) statement. If you wish to remove this lock, you should override the TimerPollJobs property.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Command.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.ValidateStartTime(System.DateTime)">
            <summary>
            This method validates the start time.
            </summary>
            <param name="nextTime">The time to check.</param>
            <returns>Returns true if the time is valid.</returns>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.ValidateEndTime(System.DateTime)">
            <summary>
            This method validates the end time.
            </summary>
            <param name="nextTime">The time to check.</param>
            <returns>Returns true if the time is valid.</returns>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.TimerNotSet">
            <summary>
            This method sets the timer to a not set state.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.TimerRecalculate">
            <summary>
            This method recalculates the timer next call.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.SettingGet(System.String)">
            <summary>
            This method gets the specific setting.
            </summary>
            <param name="id">The setting id.</param>
            <returns>Returns the setting value, or null if the setting cannot be found or is undefined.</returns>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.SettingSet(System.String,System.String)">
            <summary>
            This protected method sets the specific setting.
            </summary>
            <param name="id">The setting id.</param>
            <param name="value">The value for the setting. Set this to null if you want the setting to be undefined.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration.Load(Ximura.IXimuraApplicationDefinition,Ximura.IXimuraCommand,System.IO.Stream,Ximura.IXimuraConfigSH)">
            <summary>
            This method loads the confiuration data from the command.
            </summary>
            <param name="appDef"></param>
            <param name="commDef"></param>
            <param name="data"></param>
            <param name="sh"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.NamespaceDefaultShortName">
            <summary>
            This is the short name used in the namespace manager to refer to the root namespace.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.CommandEnabled">
            <summary>
            Returns true if the command is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.CommandPriority">
            <summary>
            The command thread priority.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionRequired">
            <summary>
            This property specifies whether a process session is required.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionUseSystemCredentials">
            <summary>
            This property specifies whether a process session is required.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionUserName">
            <summary>
            This property returns the process session username.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionRealmDomain">
            <summary>
            This method returns the process session realm and domain.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionAuthType">
            <summary>
            This property returns the process session authentication type.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionSecurityData">
            <summary>
            this property is the session security data.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.ProcessSessionUserRealm">
            <summary>
            This method returns the user session realm.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerEnabled">
            <summary>
            Returns true if the timer function is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerAutoStart">
            <summary>
            Returns true if the timer should call the OnTimerEvent on initialization.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollEnabled">
            <summary>
            Returns true if the timer is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollValue">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollValueType">
            <summary>
            This is the timer type for the timer value, i.e. hours(h), minutes(m), days(d) etc.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollInterval">
            <summary>
            This is the time span interval between timer polls.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollJobs">
            <summary>
            This is the collection of timer poll jobs. You should override this method and provide a collection
            of jobs if you wish to use the self-poll functionality.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollStartTime">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerPollEndTime">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerFirstCall">
            <summary>
            This is the timer first call.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerNextCall">
            <summary>
            This is the next time the timer should run.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.TimerDueTime">
            <summary>
            This is the due time in milliseconds to the next timer call.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandConfiguration.SupportsConfigInitialization">
            <summary>
            This property determines whether the configuration class supports config section handler initiialization.
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration`1.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Server.StorageManagerConfiguration`1.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Command.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSRQRSFolderBase">
            <summary>
            This is the folder base for the CDS Request and Response.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSRQRSFolderBase.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSRQRSFolderBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSRQRSFolderBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Persistence.CDSRQRSFolderBase.Reset">
            <summary>
            This method resets the object.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRQRSFolderBase.Data">
            <summary>
            This is the Data for the request.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSResponseFolder.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSResponseFolder.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSResponseFolder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Persistence.CDSResponseFolder.Reset">
            <summary>
            This method resets the object.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSResponseFolder.NewVersionID">
            <summary>
            This is the new version ID property.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSResponseFolder.CurrentVersionID">
            <summary>
            This property is used by the CDS Version check operation.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSResponseFolder.CurrentContentID">
            <summary>
            This property is used by the CDS Version check operation.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSStateException">
            <summary>
            ContentDataStoreException is used to signal an exception in the CDS or its related components.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ContentDataStoreException">
            <summary>
            ContentDataStoreException is used to signal an exception in the CDS or its related components.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStoreException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStoreException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStoreException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStoreException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreException.ResponseCode">
            <summary>
            This is the HTTP Response code.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSStateException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSStateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSStateException.ResponseCode">
            <summary>
            This is the HTTP Response code.
            </summary>
        </member>
        <member name="T:Ximura.MetadataExtender`2">
            <summary>
            MetadataExtender is the base class for all extenders.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentService">
            <summary>
            XimuraComponentService is the base object for all Ximura components 
            that can be started and stopped.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentBase">
            <summary>
            XimuraComponentBase is the base component for all components in the Ximura system.
            </summary>
        </member>
        <member name="F:Ximura.XimuraComponentBase.mParentContainer">
            <summary>
            This is the parent container that the component was added to during the constructor.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.#ctor">
            <summary>
            This is the default constructor for the XimuraComponentService.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by the .Net component model when adding it to a container
            </summary>
            <param name="container">The container to add the component to.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.Dispose(System.Boolean)">
            <summary> 
            This is an override of the IDisposable method which cleans up any resources being used.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.GetAttributeForTypeID(System.Type)">
            <summary>
            This protected method will return the relevant attribute for the 
            type specified.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.InternalHelperConnectSite(System.ComponentModel.ISite)">
            <summary>
            This protected method is used to connect internal helper objects to the component site.
            </summary>
            <param name="value">The new site.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.SiteBeforeChange(System.ComponentModel.ISite,System.ComponentModel.ISite)">
            <summary>
            This method is called before the site changes.
            </summary>
            <param name="newSite">The new site value.</param>
            <param name="oldSite">The old site value.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.SiteChanged(System.ComponentModel.ISite,System.ComponentModel.ISite)">
            <summary>
            You should override this method if you require specific actions to occur
            if the component site changes.
            </summary>
            <param name="oldSite">The old site.</param>
            <param name="newSite">The new site.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.RemoveService(System.Type)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <param name="serviceType">The type of service to remove.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.RemoveService``1">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
        </member>
        <member name="M:Ximura.XimuraComponentBase.RemoveService``1(System.Boolean)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="promote">Should be set to true if this service should be removed 
            from any parent service containers.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.RemoveService(System.Type,System.Boolean)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <param name="serviceType">The type of service to remove.</param>
            <param name="promote">Should be set to true if this service should be removed 
            from any parent service containers.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>
            Adds the service to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="callback">A callback delegate the create the service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService(System.Type,System.Object)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService``1(``0)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="serviceInstance">The service instance.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService``1(``0,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="serviceInstance">The service instance.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService``1(``0,System.Boolean,System.Int32)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="serviceInstance">The service instance.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
            <param name="depth">The depth the service should be promoted. Set this value to -1 if you require it to be unlimited.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="callback">A callback delegate the create the service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService(System.Type,System.Object,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AddService(System.Type,System.Object,System.Boolean,System.Int32)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
            <param name="depth">The depth the service should be promoted. Set this value to -1 if you require it to be unlimited.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.System#IServiceProvider#GetService(System.Type)">
            <summary>
            This method returns the requested service.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>Returns the service requested, or null if the service cannot be found.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBase.GetService(System.Type,System.Int32)">
            <summary>
            This method returns the requested service.
            </summary>
            <param name="serviceType">The service type.</param>
            <param name="depth">The service depth. If this is set to -1 the depth is unlimited.</param>
            <returns>Returns the service requested, or null if the service cannot be found.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBase.GetService(System.Type)">
            <summary>
            This overriden method ensures that any services pass through
            the component and are not bypassed to the component site.
            </summary>
            <param name="service">The service.</param>
            <returns>An object that provides the service, 
            or null if the service type cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBase.GetService``1">
            <summary>
            This overriden method ensures that any services pass through
            the component and are not bypassed to the component site.
            </summary>
            <typeparam name="T">The service.</typeparam>
            <returns>An object that provides the service, 
            or null if the service type cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ServicesProvide">
            <summary>
            This protected method should register any services with the component
            container.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ServicesRemove">
            <summary>
            This protected method should remove any services that the component
            has registered with the component containers.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ConnectComponents">
            <summary>
            This method will connect the components held in the 
            containers in to the Ximura messaging architecture.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ProcessContainer(System.Collections.ICollection)">
            <summary>
            This method sets each Ximura based component site property to point to this component
            and adds the component to the ServiceComponents list.
            </summary>
            <param name="componentList">The components to add.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ProcessContainer(System.Collections.ICollection,System.Collections.IList)">
            <summary>
            This method sets each Ximura based component site property to point to this component
            and adds the component to the new list passed.
            </summary>
            <param name="componentList">The components to add.</param>
            <param name="newList">The new list to which the parameter will be added to.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.AttachComponent(System.ComponentModel.IComponent,System.Collections.IList)">
            <summary>
            This method attaches a component to the system service messaging architecture.
            </summary>
            <param name="xCom"></param>
            <param name="newList"></param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.ProcessComponent(System.ComponentModel.IComponent)">
            <summary>
            This method can be overriden to provide specific functionality after a component is connected
            to the Ximura messaging architecture.
            </summary>
            <param name="xCom">The component.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBase.RegisterContainer(System.ComponentModel.IContainer)">
            <summary>
            This method is used to register the containers for the inherited classes that wish to participate
            is the Ximura messaging infrastructure.
            </summary>
            <param name="components">The component collection to add.</param>
        </member>
        <member name="P:Ximura.XimuraComponentBase.ActiveMode">
            <summary>
            This property returns true when the component is active in execution mode.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentBase.SiteExtended">
            <summary>
            This is an extended site which allows easy access to the extended app site methods.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentBase.Site">
            <summary>
            This override property calls the SiteChanged method when the site changes
            for the component.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentBase.ServiceComponents">
            <summary>
            This is the list containing the service components. This list will be only be
            populated after ConnectComponents has been called. 
            </summary>
        </member>
        <member name="T:Ximura.Server.IXimuraSecurityDescriptor">
            <summary>
            This interface is used to provide security access information for
            specific access points around the system.
            </summary>
        </member>
        <member name="P:Ximura.Server.IXimuraSecurityDescriptor.PermissionsBitmap">
            <summary>
            This is the permissions bitmap for the module that implements this interface.
            </summary>
        </member>
        <member name="P:Ximura.Server.IXimuraSecurityDescriptor.Permissions">
            <summary>
            This method returns the permission attribute collection for the class.
            </summary>
        </member>
        <member name="F:Ximura.XimuraComponentService.permissionAttrs">
            <summary>
            This collection holds the specific attribute that determines the permissions for 
            the particular bit.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.#ctor">
            <summary>
            This is the default constructor for the XimuraComponentService.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by the .Net component model when adding it to a container
            </summary>
            <param name="container">The container to add the component to.</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.InternalStart">
            <summary>
            This is the method to override which should start your service.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.InternalStop">
            <summary>
            This is the method to override which should stop your service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.InternalPause">
            <summary>
            This is the method to override which should pause your service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.InternalContinue">
            <summary>
            This is the method to override which should continue your service 
            if it has been paused
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.Start">
            <summary>
            This method starts the service based on the default async settings
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.Pause">
            <summary>
            This method pauses the service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.Continue">
            <summary>
            This method continues a paused service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.Stop">
            <summary>
            This method stops a running service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.ProcessEvent(Ximura.Helper.ServiceEvent)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ProcessEvent(Ximura.Helper.ServiceEvent,Ximura.ServiceEventArgs)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
            <param name="e">The ServiceEventArgs object to pass</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ProcessEvent(Ximura.Helper.ServiceEvent,System.Object,Ximura.ServiceEventArgs)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
            <param name="sender">The sended object to pass</param>
            <param name="e">The ServiceEventArgs object to pass</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.InternalHelperConnectSite(System.ComponentModel.ISite)">
            <summary>
            This protected method is used to connect internal helper objects to the component site.
            </summary>
            <param name="value">The new site.</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ComponentsStatusChange(Ximura.XimuraServiceStatusAction,System.Collections.ICollection)">
            <summary>
            This method can start, stop, resume or pause a group of components.
            </summary>
            <param name="action">The action required</param>
            <param name="components">The components to which the action should be provided</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ComponentsStatusChange(Ximura.XimuraServiceStatusAction,System.Collections.ICollection,System.Type)">
            <summary>
            This method can start, stop, resume or pause a group of components of the specified type.
            </summary>
            <param name="action">The action required</param>
            <param name="components">The components to which the action should be provided</param>
            <param name="componentType">The component type.</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ComponentsStatusBeforeChange(Ximura.XimuraServiceStatusAction,Ximura.IXimuraService)">
            <summary>
            This method is called before the status of a component is changed. You may override 
            this method to make additional checks before the component status is changed.
            </summary>
            <param name="action">The action, i.e. start, stop, etc.</param>
            <param name="service">The component service to change.</param>
            <returns>This method should return true if you want the status to change. 
            If this method returns false the status of the service will not change.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentService.ComponentsStatusAfterChange(Ximura.XimuraServiceStatusAction,Ximura.IXimuraService)">
            <summary>
            This method is called after the status of the service has been changed.
            </summary>
            <param name="action">The action, i.e. start, stop, etc.</param>
            <param name="service">The component service to change.</param>
        </member>
        <member name="M:Ximura.XimuraComponentService.ServicesReference">
            <summary>
            This protected method retrieves the base services for the container. 
            You should override this method if you wish to set references to
            base services from the container.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.ServicesDereference">
            <summary>
            This protected method should remove any references
            to other services in the conatiner. 
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.BuildPermissions">
            <summary>
            This method builds the permission bitmap from the permission attributes.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentService.BitShift(System.Int64)">
            <summary>
            This method returns a collection of integers for the bits present in the collection.
            </summary>
            <param name="bitMap">The 64 bit map.</param>
            <returns>An integer collection or and empty collection if the bitmap is 0.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.XimuraComponentService.ServiceParentSettingsSet(Ximura.IXimuraServiceParentSettings)" -->
        <member name="P:Ximura.XimuraComponentService.ServiceStatus">
            <summary>
            This method will return the current service status
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentService.ServiceEnabled">
            <summary>
            This property determines whether the service component can be started.
            </summary>
        </member>
        <member name="E:Ximura.XimuraComponentService.ServiceStarted">
            <summary>
            This event will be fired when the service starts
            </summary>
        </member>
        <member name="E:Ximura.XimuraComponentService.ServicePaused">
            <summary>
            This event will be fired when the service pauses
            </summary>
        </member>
        <member name="E:Ximura.XimuraComponentService.ServiceResumed">
            <summary>
            This event will be fired when the service is resumed from a paused state
            </summary>
        </member>
        <member name="E:Ximura.XimuraComponentService.ServiceStopped">
            <summary>
            This event will be fired when the service is stopped
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentService.PermissionsBitmap">
            <summary>
            This is the permission bitmap.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentService.Permissions">
            <summary>
            This method returns the permission attribute collection for the class.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentService.PermissionsType">
            <summary>
            This is the type of the object that we require the permission bitmap for.
            </summary>
        </member>
        <member name="F:Ximura.MetadataExtender`2.mLocked">
            <summary>
            This property indicates whether the collection is locked. A locked
            collection will not create data record automatically.
            </summary>
        </member>
        <member name="F:Ximura.MetadataExtender`2.mMetaData">
            <summary>
            This is the hashtable for the extended properties.
            </summary>
        </member>
        <member name="F:Ximura.MetadataExtender`2.mInitializationCount">
            <summary>
            This is the initialization counter.
            </summary>
        </member>
        <member name="M:Ximura.MetadataExtender`2.#ctor">
            <summary>
            This is the empty constructor.
            </summary>
        </member>
        <member name="M:Ximura.MetadataExtender`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.MetadataExtender`2.CanExtend(System.Object)">
            <summary>
            This method is used to check whether the object can be extended.
            </summary>
            <param name="extendee">The object to extend</param>
            <returns>returns true if the object can be extended.</returns>
        </member>
        <member name="M:Ximura.MetadataExtender`2.BeginInit">
            <summary>
            This method is called at the beginning of the initialization phase.
            </summary>
        </member>
        <member name="M:Ximura.MetadataExtender`2.EndInit">
            <summary>
            This method is called at the end of the initialization phase.
            </summary>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ContentCollection">
            <summary>
            This is the content collections.
            </summary>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ItemAdd(`0)">
            <summary>
            This methods adds an item to the collection.
            </summary>
            <param name="key">The item to add.</param>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ItemRemove(`0)">
            <summary>
            This method removes an item from the collection.
            </summary>
            <param name="key">The object.</param>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ItemGet(`0)">
            <summary>
            This method gets an object from the collection.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ItemGetNew(`0)">
            <summary>
            This method creates a new object based on the type specified in the 
            MetadataExtenderItem type attribute.
            </summary>
            <param name="key">The object to create the meta data container for, or null if 
            called by getNewItem().</param>
            <returns>The new item.</returns>
            <remarks>You should override this method if you wish to pass the creation
            object in to the meta data container.</remarks>
        </member>
        <member name="M:Ximura.MetadataExtender`2.ItemGetNew">
            <summary>
            This method creates a new object based on the type specified in the 
            MetadataExtenderItem type attribute.
            </summary>
            <returns>The new item.</returns>
        </member>
        <member name="P:Ximura.MetadataExtender`2.Locked">
            <summary>
            This property identifies whether the meta data container is locked.
            </summary>
        </member>
        <member name="T:Ximura.Command.FSMExtenderStateMetadataContainer">
            <summary>
            This is the Protocol state meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Command.FSMExtenderStateMetadataContainer.Enabled">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderStateMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderStateMetadataContainer.#ctor(Ximura.IXimuraFSMState)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theState">The state object.</param>
        </member>
        <member name="P:Ximura.Command.FSMExtenderStateMetadataContainer.StateID">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Command.FSMExtenderStateMetadataContainer.State">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Command.FSMExtenderStateMetadataContainer.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServerProcessBase`2">
            <summary>
            AppServerProcess is the base class for AppServer processes such as Session managers and security managers.
            </summary>
            <typeparam name="CONF">The configuration class.</typeparam>
            <typeparam name="PERF">The performance class.</typeparam>
        </member>
        <member name="T:Ximura.AppBase`2">
            <summary>
            This is the base class for both command and application objects.
            </summary>
            <typeparam name="CONF">The configuration class.</typeparam>
            <typeparam name="PERF">The performance class.</typeparam>
            <typeparam name="PERF">The configuration class.</typeparam>
        </member>
        <member name="T:Ximura.AppBase`3">
            <summary>
            This is the base class for both command and application objects.
            </summary>
            <typeparam name="CONF">The configuration class.</typeparam>
            <typeparam name="PERF">The performance class.</typeparam>
            <typeparam name="EXTCONF">The external configuration class.</typeparam>
        </member>
        <member name="F:Ximura.AppBase`3.mPerformanceManager">
            <summary>
            This is the performance manager.
            </summary>
        </member>
        <member name="F:Ximura.AppBase`3.mConfigurationManager">
            <summary>
            This is the configuration manager.
            </summary>
        </member>
        <member name="F:Ximura.AppBase`3.mApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="F:Ximura.AppBase`3.CommandExtender">
            <summary>
            This is the AppServerCommandDataExtender used to set the command start priority.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.AppBase`3.CommandExtenderInitialize">
            <summary>
            This method initializes the 
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.InternalStart">
            <summary>
            This method starts the AppServerProcess and registers any services
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.InternalStop">
            <summary>
            The method stops the AppServerProcess and unregisters and services
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.ConfigurationStart">
            <summary>
            This method creates and registers the configuration data object.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.ConfigurationLoad(`0)">
            <summary>
            This method loads the command configuration.
            </summary>
            <param name="commandConfiguration"></param>
        </member>
        <member name="M:Ximura.AppBase`3.ConfigurationStop">
            <summary>
            This method unregisters and destpys the configuration data object.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.PerformanceStart">
            <summary>
            This method starts the performance counters.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.PerformanceStop">
            <summary>
            This method stops the performance counters.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.PoolManagerStart">
            <summary>
            This protected method creates the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.PoolManagerStop">
            <summary>
            This protected method disposes of the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.CommandsStart">
            <summary>
            This protected method initializes the commands
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.CommandsStop">
            <summary>
            This protected method initializes the commands
            </summary>
        </member>
        <member name="M:Ximura.AppBase`3.ComponentsStatusBeforeChange(Ximura.XimuraServiceStatusAction,Ximura.IXimuraService)">
            <summary>
            This overriden method checks on start whether the command has a priority set, 
            if it does has a priority set, the command is not started.
            </summary>
            <param name="action">The service action.</param>
            <param name="service">The service.</param>
            <returns>Returns true if the service can start.</returns>
        </member>
        <member name="P:Ximura.AppBase`3.Configuration">
            <summary>
            This is the command configuration.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.ConfigurationExternal">
            <summary>
            This is the external configuration that contains the settings for the main configuration.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.ConfigurationManager">
            <summary>
            This is the application configuration manager for the command.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.Performance">
            <summary>
            This is the performance counter for the command.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.PerformanceManager">
            <summary>
            This is the application performance manager for the command.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.PoolManager">
            <summary>
            This is the pool manager.
            </summary>
        </member>
        <member name="P:Ximura.AppBase`3.ApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="M:Ximura.AppBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.AppBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="F:Ximura.Server.AppServerProcessBase`2.SCMRSAProvider">
            <summary>
            This is the server process key pair
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerProcessBase`2.SCMRSAPublicKey">
            <summary>
            This is the public key
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerProcessBase`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerProcessBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The Ximura Application component model constructor
            </summary>
            <param name="container">The container that the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.AppServerProcessBase`2.CreateSecurityKeys">
            <summary>
            This method will contain the security keys for the component lifetime.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServerProcessBase`2.ConfigurationManager">
            <summary>
            This override gets the ConfigurationManager from the IXimuraConfigurationManager service.
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManagerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManagerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.GatewayManagerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Persistence.SQLDBPersistenceManager`2">
            <summary>
            This is the base persistence manager for SQL based storage for the Aegea system.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.PersistenceManagerCDSState`3">
            <summary>
            This is the base state for persistence managers.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSState`2">
            <summary>
            This class is the base state for the Content Data Store. Persistence Managers, 
            Cache Managers and Custom Commands are derived from this base state.
            </summary>
        </member>
        <member name="T:Ximura.Command.AppCommandBase`2">
            <summary>
            AppCommandBase is the base object for an Application command.
            </summary>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="T:Ximura.Command.AppCommandBase`3">
            <summary>
            AppCommandBase is the base object for an Application command.
            </summary>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external command object that contains a set of user configurable settings.</typeparam>
        </member>
        <member name="F:Ximura.Command.AppCommandBase`3.mCommandBridge">
            <summary>
            The dispatcherCollection is the command gateway to the dispatcher. 
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandBase`3.mDebugName">
            <summary>
            The debug name is used to accurately identify the command within the application.
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandBase`3.mName">
            <summary>
            This is the command name
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandBase`3.mDescription">
            <summary>
            This is the command description
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandBase`3.settingsProvider">
            <summary>
            The settings provider for the base command container.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.Dispose(System.Boolean)">
            <summary>
            This overriden Dispose method removes any services or service references
            </summary>
            <param name="disposing">True is the method is disposing</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.GetSettings(System.String)">
            <summary>
            This protected member returns the settings for the command
            </summary>
            <param name="key">The key that specifies the specific settings object</param>
            <returns>The settings object</returns>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.GetSettingsProvider">
            <summary>
            This method gets the settings for the command.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.ConfigurationLoad(`0)">
            <summary>
            This method loads the command configuration.
            </summary>
            <param name="commandConfiguration"></param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.PerformanceStart">
            <summary>
            This method creates and registers the command performance object.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.PerformanceStop">
            <summary>
            This method unregisters the command performance object.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.PoolManagerStart">
            <summary>
            This override gets a reference to the pool manager.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.Notify(System.Type,System.Object)">
            <summary>
            This method is called when there is a system notification.
            </summary>
            <param name="notificationType">The notification object type.</param>
            <param name="notification">The notification object.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.CommandBridgeStart">
            <summary>
            This method gets a reference to the command bridge and registers the command.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.CommandBridgeRegister(System.Boolean)">
            <summary>
            This method determines whether the command is registered or unregistered with the command bridge.
            </summary>
            <param name="register">A boolean value indicating whether this command should be registered or unregistered.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`3.CommandBridgeStop">
            <summary>
            This method unregisters the command and removes the reference to the command bridge.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.AppCommandAttribute">
            <summary>
            This property is the XimuraAppCommandAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.AppConfigurationAttribute">
            <summary>
            This property is the XimuraAppCommandAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.CommandID">
            <summary>
            This is the command ID.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.CommandName">
            <summary>
            This is command name used to route requests to it in an application.
            </summary>
            		
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.CommandDescription">
            <summary>
            This is the command friendly description
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.ConfigClass">
            <summary>
            This property contains the prefered config class type. If this property is set
            the config class must inherit from this class.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.ConfigClassForce">
            <summary>
            This property determines whether the config class should be forced to a specific type.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.BaseSettings">
            <summary>
            This is the base settings class. It is primarily used when loading the configuration in hybrid mode. 
            This default method returns null;
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.ConfigurationManager">
            <summary>
            This override gets the ConfigurationManager from the IXimuraConfigurationManager service.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.PerformanceManager">
            <summary>
            This override gets the performance manager object form the IXimuraPerformanceManager service
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.ApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.CommandDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.DebugName">
            <summary>
            The debug name can be used to accurately determine the unique name for the 
            application and the command.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.ParentCommandName">
            <summary>
            This method is used by nested commands to get their command settings.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.SupportsNotifications">
            <summary>
            This base method always returns false, as notifications are not supported. Override this method and return true if you wish 
            to support notifications.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandBase`3.CommandBridge">
            <summary>
            The command bridge is the bridge to the security manager and the dispatcher.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandBase`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Persistence.ICDSState">
            <summary>
            This interface is implemented by CDS States
            </summary>
        </member>
        <member name="T:Ximura.IXimuraFSMState">
            <summary>
            This interface should be implemented by components that can be hosted as a state in a finite 
            state machine.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMState.Identifier">
            <summary>
            This is the state identifier string.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ICDSState.Initialize(Ximura.Persistence.CDSContext)">
            <summary>
            This method can be used to initialize the request.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.ICDSState.ProcessAction(Ximura.Persistence.CDSStateAction,Ximura.Persistence.CDSContext)">
            <summary>
            This method is used to process the specific REST actions for the CDS State/
            </summary>
            <param name="action">The request action, i.e. Read, Create etc</param>
            <param name="context">The current context.</param>
            <returns>
            The boolean return value indicates whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
            <exception cref="T:Ximura.Persistence.CDSStateException">
            A CDSStateException will be thrown if a request is made that this persistence manager does not support.
            </exception>
        </member>
        <member name="M:Ximura.Persistence.ICDSState.Finish(Ximura.Persistence.CDSContext)">
            <summary>
            This method can be used to modify a response before it is sent back to a user.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.ICDSState.SupportsEntityAction(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method should return true when the action and entity are supported. This method is used by the CDS to build
            the Execution plan for specific Entity types and actions.
            </summary>
            <returns>Returns -1 is the action is not supported, otherwise the combined order is returned.</returns>
        </member>
        <member name="P:Ximura.Persistence.ICDSState.PriorityGroup">
            <summary>
            This is the priority group for the CDSState. This property determines the grouping order in which 
            states will be polled for incoming requests.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ICDSState.PriorityGroupID">
            <summary>
            This property determines the polling order for CDSStates within the specific group.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Initialize(Ximura.Persistence.CDSContext)">
            <summary>
            This method can be used to initialize the request.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.ProcessAction(Ximura.Persistence.CDSStateAction,Ximura.Persistence.CDSContext)">
            <summary>
            This method is used to process the specific REST actions for the CDS State/
            </summary>
            <param name="action">The request action, i.e. Read, Create etc</param>
            <param name="context">The current context.</param>
            <returns>
            The boolean return value indicates whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
            <exception cref="T:Ximura.Persistence.CDSStateException">
            A CDSStateException will be thrown if a request is made that this persistence manager does not support.
            </exception>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Finish(Ximura.Persistence.CDSContext)">
            <summary>
            This method can be used to modify a response before it is sent back to a user.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.SupportsEntityAction(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method should return true when the action and entity are supported. This method is used by the CDS to build
            the Execution plan for specific Entity types and actions.
            </summary>
            <returns>Returns -1 is the action is not supported, otherwise the combined order is returned.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Create(Ximura.Persistence.CDSContext)">
            <summary>
            This is the Create method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Read(Ximura.Persistence.CDSContext)">
            <summary>
            This is the read method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Update(Ximura.Persistence.CDSContext)">
            <summary>
            This is the update method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Delete(Ximura.Persistence.CDSContext)">
            <summary>
            This is the delete method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This method checks the data store to see whether the references to the entity are current.
            </summary>
            <param name="context">The current CDS context.</param>
            <remarks>
            The status codes for the response are as follows:
                200 = OK, the contentID and versionID are correct.
                400 = missing parameter, either the contentID or versionID is null
                404 = the content ID was not found
                412 = the version ID is not the current version.
                500 = there has been an internal system error. check the SubStatus parameter for the exception description.
            </remarks>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Browse(Ximura.Persistence.CDSContext)">
            <summary>
            This is the browse method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Restore(Ximura.Persistence.CDSContext)">
            <summary>
            This is the restore method that reactivates a previously deleted entity or restores a previous version.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Custom(Ximura.Persistence.CDSContext)">
            <summary>
            This is the custom command method.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.ResolveReference(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves reference parameters for the current request.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.Cache(Ximura.Persistence.CDSContext)">
            <summary>
            This is the cache method, and is called after the primary action has been processed.
            </summary>
            <param name="context">The job context.</param>
            <returns>
            The boolean return value should indicate whether the request was successfully resolved. A true response indicates
            that the request was resolved by this Persistence Manager and that execution is complete. A false response indicates that this
            Persistence Manager could not resolve the request and that the Content Data Store should continue with the execution plan.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.CDSState`2.ToString">
            <summary>
            This override is primarily used in debugging to make the CDSState easy to identify.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Persistence.CDSState`2.PriorityGroup">
            <summary>
            This is the priority group for the CDSState. This property determines the grouping order in which 
            states will be polled for incoming requests.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSState`2.PriorityGroupID">
            <summary>
            This property determines the polling order for CDSStates within the specific group.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSState`2.PriorityCombined">
            <summary>
            This protected method returns the combined priority of the PriorityGroup and the PriorityGroupID.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSState`2.Identifier">
            <summary>
            This is the Content Data Store state identifier string.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.PersistenceManagerCDSState`3.mPool">
            <summary>
            This is the specific pool for the data content.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.SetAttributes">
            <summary>
            This method is used to set the attributes for the state. This method is called during the 
            base constructor. You can override this method to add additional attributes.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.SupportsEntityAction(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method should return true when the action and entity are supported. This method is used by the CDS to build
            the Execution plan for specific Entity types and actions.
            </summary>
            <returns>Returns -1 is the action is not supported, otherwise the combined order is returned.</returns>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.PermitAction(Ximura.Persistence.CDSStateAction)">
            <summary>
            This method scans the CDSStateActionPermit attributes and pull out the permit settings.
            </summary>
            <param name="action">The action to scan for.</param>
        </member>
        <member name="M:Ximura.Persistence.PersistenceManagerCDSState`3.PermitType(System.Type)">
            <summary>
            This method determines whether the type specified is permitted for this
            </summary>
            <param name="objectType"></param>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This method checks the data store to see whether the references to the entity are current.
            </summary>
            <param name="context">The current CDS context.</param>
            <returns>
            The status codes for the response are as follows:
                400 = missing parameter, either the contentID or versionID is null
                404 = the content ID was not found
                412 = the version ID is not the current version.
                200 = OK, the contentID and versionID are correct.
                500 = there has been an internal system error. check the SubStatus parameter for the exception description.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.Create(Ximura.Persistence.CDSContext)">
            <summary>
            This method creates a new entity.
            </summary>
            <param name="context"></param>
            <returns>Returns true if the process is complete.</returns>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.#ctor">
            <summary>
            This is the empty constructor for the persistence manager
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor for the persistence manager.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.ServicesReference">
            <summary>
            This override gets the reference to the SQL server connectivity service.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.ServicesDereference">
            <summary>
            This override removes the reference to the SQL server connectivity service.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPersistenceManager`2.Browse(Ximura.Persistence.CDSContext)">
            <summary>
            This method parses the expression and returns a list of entites.
            </summary>
            <param name="context">The current CDS request context.</param>
            <returns>Returns false.</returns>
        </member>
        <member name="T:Ximura.Persistence.SQLDBPersistenceManager`2.RQType">
            <summary>
            This structure holds the identifier data for a request.
            </summary>
        </member>
        <member name="T:Ximura.Server.SCMPermissionException">
            <summary>
            Summary description for SCMAuthenticationException.
            </summary>
        </member>
        <member name="T:Ximura.Server.SCMBaseException">
            <summary>
            This is the abstract Security Manager Base Exception.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMBaseException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMBaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMBaseException.ResponseCode">
            <summary>
            This is the HTTP Response code.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMPermissionException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMPermissionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMPermissionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMPermissionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMPermissionException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Server.CommandMetadataExtender">
            <summary>
            AppServerCommandExtender is used to start commands in the order specified within a command container.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.GetPriority(Ximura.IXimuraCommandBase)">
            <summary>
            This property is used to return the start priority.
            </summary>
            <param name="item">The command object.</param>
            <returns>The command start priority.</returns>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.SetPriority(Ximura.IXimuraCommandBase,System.Int32)">
            <summary>
            This property is used to set the command start priority.
            </summary>
            <param name="item">The command object.</param>
            <param name="value">The command start priority.</param>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.CommandHasPriority(System.Object)">
            <summary>
            This method determines whether the command has a priority set.
            </summary>
            <param name="service">The command service</param>
            <returns>returns true if the command has a priority set.</returns>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.InternalStart">
            <summary>
            This override does not implement any logic.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.InternalStop">
            <summary>
            This override does not implement any logic.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.StartCommandsInOrder">
            <summary>
            This method starts the commands in the order specified.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.StopCommandsInReverseOrder">
            <summary>
            This method starts the commands in the order specified.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.CommandsNotify(System.Type,System.Object)">
            <summary>
            This method notifies commands of specific system events in the same order that they were started.
            </summary>
            <param name="notificationType">The notification type.</param>
            <param name="notification">The notification object.</param>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.ItemGetNew(Ximura.IXimuraCommandBase)">
            <summary>
            This overriden method creates the new meta data container.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Server.CommandMetadataExtender.CommandPriorityExtender">
            <summary>
            This class is used to set the command priority.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.CommandPriorityExtender.#ctor">
            <summary>
            This is the default constructor. Objects without a priority will go top. 
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.CommandPriorityExtender.#ctor(System.Boolean)">
            <summary>
            This is the comparer.
            </summary>
            <param name="nullGoesBottom">Set this to true if you wish objects 
            without a priority to be started last.</param>
        </member>
        <member name="M:Ximura.Server.CommandMetadataExtender.CommandPriorityExtender.Compare(Ximura.Server.CommandMetadataContainer,Ximura.Server.CommandMetadataContainer)">
            <summary>
            This object compares two AppServerCommandMetadataContainer objects. The highest
            priority will bubble to the top of the sorted list.
            Null objects will also be set to the highest priority.
            </summary>
            <param name="aX">The first object.</param>
            <param name="aY">The second object.</param>
            <returns>Returns a positive integer if the first object is greater than the second.</returns>
        </member>
        <member name="T:Ximura.Server.CommandMetadataContainer">
            <summary>
            This is the command meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Server.CommandMetadataContainer.Priority">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.CommandMetadataContainer.#ctor(Ximura.IXimuraCommandBase)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theCommand">The command object.</param>
        </member>
        <member name="P:Ximura.Server.CommandMetadataContainer.Command">
            <summary>
            This is the internal command stored in the metadata container.
            </summary>
        </member>
        <member name="P:Ximura.Server.CommandMetadataContainer.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServerAgentManager`3">
            <summary>
            This class provides common functionality for agent based process services.
            </summary>
            <typeparam name="AGENT">The agent type.</typeparam>
            <typeparam name="CONF">The agent manager configuration.</typeparam>
            <typeparam name="PERF">The performance counter type.</typeparam>
        </member>
        <member name="F:Ximura.Server.AppServerAgentManager`3.mAgents">
            <summary>
            This is the agent collection.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The Ximura Application component model constructor
            </summary>
            <param name="container">The container that the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.AgentAdd(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This method creates an agent based on the type passed in the holder and adds it to the agent collection.
            </summary>
            <param name="holder">The agent metadata holder.</param>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.AgentAdd(`0,System.String)">
            <summary>
            This method adds an agent to the collection.
            </summary>
            <param name="agent">The system agent.</param>
            <param name="id">The agent id.</param>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.AgentRemove(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This method removes the agent from the service.
            </summary>
            <param name="holder">The agent metadata holder.</param>
        </member>
        <member name="M:Ximura.Server.AppServerAgentManager`3.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This abstract method creates the specific agent.
            </summary>
            <param name="holder">THe agent holder information.</param>
            <returns>Returns an agent class.</returns>
        </member>
        <member name="T:Ximura.Helper.IXimuraConfigurationSystemExtended">
            <summary>
            This interface adds addition fucntionality to the configuration system to allow
            types to be specified for specific configuration sections.
            </summary>
        </member>
        <member name="M:Ximura.Helper.IXimuraConfigurationSystemExtended.GetConfigExtended(System.String,System.Type)">
            <summary>
            Gets the specified configuration.
            </summary>
            <param name="configKey">The configuration key.</param>
            <param name="settingsType">The settings type. 
            The settings object must inherit from this type.</param>
            <returns>The object representing the configuration.</returns>
        </member>
        <member name="M:Ximura.Helper.IXimuraConfigurationSystemExtended.GetConfigExtended(System.String,System.Type,System.Boolean)">
            <summary>
            Gets the specified configuration.
            </summary>
            <param name="configKey">The configuration key.</param>
            <param name="settingsType">The settings type. 
            The settings object must inherit from this type.</param>
            <param name="force">When this object is set to true, the settings object type 
            specified in the config file is ignored.</param>
            <returns>The object representing the configuration.</returns>
        </member>
        <member name="T:Ximura.Server.DispatcherException">
            <summary>
            This exception is used by the Dispatcher process.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherException.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherException.#ctor(System.String)">
            <summary>
            The default constructor.
            </summary>
            <param name="message">The error message</param>
        </member>
        <member name="M:Ximura.Server.DispatcherException.#ctor(System.String,System.Exception)">
            <summary>
            The DispatcherException.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Server.DispatcherException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes the exception with serialized information.</summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Ximura.Server.AppServer">
            <summary>
            The AppServerBase class is the class that all server applications derive from.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServer`3">
            <summary>
            The AppServerBase class is the class that all server applications derive from.
            </summary>
            <typeparam name="CONFSYS">The server system configuration.</typeparam>
            <typeparam name="CONFCOM">The server command configuration.</typeparam>
            <typeparam name="PERF">The performance settings for the server.</typeparam>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mAppServerAttribute">
            <summary>
            This method holds the appserver attribute settings.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.#ctor">
            <summary>
            This is the default constructor for the service.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by the .Net component model when adding it to a container
            </summary>
            <param name="container">The container to add the component to.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Dispose(System.Boolean)">
            <summary> 
            This is an override of the IDisposable method which cleans up any resources being used.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.InitializeControlContainer">
            <summary>
            This method initializes the base components container 
            and the Application control container
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SiteBeforeChange(System.ComponentModel.ISite,System.ComponentModel.ISite)">
            <summary>
            This overriden method does nothing. AppServer does not care about the site property.
            </summary>
            <param name="newSite">The new site value.</param>
            <param name="oldSite">The old site value.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SiteChanged(System.ComponentModel.ISite,System.ComponentModel.ISite)">
            <summary>
            This overriden method does nothing. AppServer does not care about the site property.
            </summary>
            <param name="oldSite">The old site.</param>
            <param name="newSite">The new site.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.AgentsAdd``1(System.Collections.Generic.IEnumerable{Ximura.Server.XimuraServerAgentHolder},Ximura.Server.IXimuraAppServerAgentService)">
            <summary>
            This method is used to add a collection of agent holders with a particular service.
            </summary>
            <typeparam name="A">The agent attribute type.</typeparam>
            <param name="AgentsDefault">The default agent collection.</param>
            <param name="Service">The service to add the agent holder to.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.AgentsRemove``1(System.Collections.Generic.IEnumerable{Ximura.Server.XimuraServerAgentHolder},Ximura.Server.IXimuraAppServerAgentService)">
            <summary>
            This method is used to remove a collection of agent holders from a particular service.
            </summary>
            <typeparam name="A">The agent attribute type.</typeparam>
            <param name="AgentsDefault">The default agent collection.</param>
            <param name="Service">The service to remove the agent holder from.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ApplicationServicesStart">
            <summary>
            This method registers specific application information.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ApplicationServicesStop">
            <summary>
            This method removes specific application information.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PoolManagerStart">
            <summary>
            This protected method creates the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PoolManagerStop">
            <summary>
            This protected method disposes of the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.AgentServicesStart">
            <summary>
            This method starts the storage and session managers. You can override this method to add additional service managers.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.AgentServicesStop">
            <summary>
            This method stops the storage and session managers. You can override this method to add additional service managers.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.syncThreadPool">
            <summary>
            List of all worker threads at the disposal of the thread pool.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mWaitingJobs">
            <summary>
            Queue of all the callbacks waiting to be executed.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mWorkerThreadNeeded">
            <summary>
            Used to signal that a worker thread is needed for processing.  Note that multiple
            threads may be needed simultaneously and as such we use a semaphore instead of
            an auto reset event.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ThreadPoolStart">
            <summary>
            This method initializes the thread pool
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ThreadPoolStop">
            <summary>
            This method shuts down the thread pool.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PerformanceUpdateCounters">
            <summary>
            This method is used to update the performance counter
            after the status has changed.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ThreadRemove">
            <summary>
            This method aborts a thread pool thread. We use abort because this method 
            will only be called by a thread that is not executing.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.QueuedItemsClear">
            <summary>
            This method empties the work queue of any queued work items.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.QueuedItemsProcess">
            <summary>
            A thread worker function that processes items from the work queue.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobPriorityQueueCreate">
            <summary>
            This method returns a new job priority queue class.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.GatewayStart">
            <summary>
            This method starts the Gateway Manager
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.GatewayStop">
            <summary>
            This method stops the Gateway Manager.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mAttrConfigCommand">
            <summary>
            This attribute contains the command configuration settings.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mAttrConfigSystem">
            <summary>
            This attribute contains the system configuration settings.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationAttributesGet">
            <summary>
            This method gets the app server configuration attributes.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationStart">
            <summary>
            This protected method checks whether the configuration service is active, 
            and if not creates a default one.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationStop">
            <summary>
            This method stops the configuration manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationLoadGeneric(Ximura.ConfigurationBase,Ximura.Server.XimuraAppServerConfigurationAttribute,System.Func{System.IO.Stream})">
            <summary>
            This method loads the configuration based on the attribute settings.
            </summary>
            <param name="config">The configuration to load.</param>
            <param name="configAttr">The attribute settings.</param>
            <param name="delDefaultStream">The delegate to the default stream.</param>
            <returns>Returns true if the configuration was loaded successfully.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationLoad(`1)">
            <summary>
            This override loads the server command configuration.
            </summary>
            <param name="commandConfiguration">The command configuration.</param>
            <returns>Returns true if the configuration was loaded successfully.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationDefault">
            <summary>
            This method returns the default command configuration as a stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationSystemLoad(`0)">
            <summary>
            This method loads the system configuration.
            </summary>
            <param name="systemConfiguration">The system configuration.</param>
            <returns>Returns true if the configuration was loaded successfully.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ConfigurationSystemDefault">
            <summary>
            This method returns the default system configuration as a stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoadConfigFile(Ximura.Server.XimuraAppServerConfigurationAttribute,System.Func{System.IO.Stream})">
            <summary>
            This method loads and verifies the application settings for the 
            application. This method can be overriden by derived classes.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoadConfigFromAssembly(System.String)">
            <summary>
            This method loads a config file from a Assembly
            </summary>
            <param name="resourceFileName">The file name of the config file.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoadConfigFromAssembly(System.String,System.Boolean)">
            <summary>
            This method loads a config file from a Assembly
            </summary>
            <param name="resourceFileName">The file name of the config file.</param>
            <param name="SearchLoadedAssemblies">A boolean value indicating whether the server 
            should search loaded assemblies should be searched if the resource cannot be found
            in the current assembly.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoadConfigFromFile(System.String,System.Boolean)">
            <summary>
            This method loads a config file from known application paths
            </summary>
            <param name="fileName">The file name of the config file.</param>
            <param name="verifySignature">A boolean value indicating whether the system should 
            verify the file content using a digital signature</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.ResolveFileLocationPath(System.String)">
            <summary>
            This method check the relevant location paths for a valid configuration file.
            </summary>
            <param name="fileName">The file to search for.</param>
            <returns>The full file path.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.CommandBridgeStart">
            <summary>
            This method register the command bridge with the command collection.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.CommandBridgeStop">
            <summary>
            This method removes the command bridge services
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.CommandBridgeServiceAdd(System.Type,System.Object)">
            <summary>
            This method adds a service to the command bridge
            </summary>
            <param name="service">The service type</param>
            <param name="serviceobj">The service object.</param>
            <returns>Returns true is the service was added successfully.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.CommandBridgeServiceGet(System.Type)">
            <summary>
            This method returns a command bridge service.
            </summary>
            <param name="service">The service type.</param>
            <returns>The service object, or null is the service is not present.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.CommandBridgeServiceRemove(System.Type)">
            <summary>
            This method removes a service from the command bridge.
            </summary>
            <param name="service">The service type to remove.</param>
            <returns>Returns true if the service was removed successfully.</returns>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mJobActiveCollection">
            <summary>
            The active job collection.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mPoolJob">
            <summary>
            The job pool.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobProcessStart">
            <summary>
            This method creates the job pools for the security manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobProcessStop">
            <summary>
            This method clears and disposes of the job pools for the security manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobProcess(Ximura.Server.JobBase,System.Boolean)">
            <summary>
            This method is used to submit jobs to the security manager.
            </summary>
            <param name="jobRQ">The job.</param>
            <param name="async">If this is set the true, the job will be processed using
            the thread pool; otherwise the job will be processed using the current thread.</param>
            <returns>The job Guid.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobCancel(System.Guid)">
            <summary>
            This method cancels a pending request.
            </summary>
            <param name="jobID">The job ID to cancel.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobProcessCommand(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method calls the command directly to process the job.
            </summary>
            <param name="scmJob">The security manager job.</param>
            <returns>Returns the job id.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobProcessDispatcher(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method queues the job for processing by the dispatcher
            </summary>
            <param name="scmJob"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobComplete(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method signals to the calling session that the job is complete.
            </summary>
            <param name="jobRS">The dispatcher job that is complete.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobComplete(Ximura.Server.SecurityManagerJob,System.Boolean)">
            <summary>
            This method signals to the calling session that the job is complete.
            </summary>
            <param name="jobRS">The dispatcher job that is complete.</param>
            <param name="signal">Set this to true to manually complete a job.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobException(Ximura.Server.SecurityManagerJob,System.Exception,System.Threading.Thread)">
            <summary>
            This method is used to signal an unexpected exception on an executing 
            thread in the job pool.
            </summary>
            <param name="job">The job that has caused the errors.</param>
            <param name="ex">The exception.</param>
            <param name="thread">The thread.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobValidate(Ximura.Server.JobBase)">
            <summary>
            This method validate the job request and checks that it is valid.
            </summary>
            <param name="jobRQ">The job request.</param>
            <returns>The SessionToken object for the request.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.JobPermissionsVerify(Ximura.Server.SecurityManagerJob,Ximura.Server.SessionToken)">
            <summary>
            This method verifies a job's permissions.
            </summary>
            <param name="scmJob">The job.</param>
            <param name="token">The session token.</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PurgeExistingJobs(Ximura.Server.SessionToken)">
            <summary>
            This method should purge any existing jobs for a session.
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.StorageStart">
            <summary>
            This private method checks whether a Logging and Performance manager is active
            in the application, and if not creates a default one.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.StorageStop">
            <summary>
            This method is used to cleanup and stop logging.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.mSessionTokens">
            <summary>
            This dictionary holds the session tokens.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionManagerStart">
            <summary>
            This method starts the session managers, and related services.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionManagerStop">
            <summary>
            This method stops the session managers and related services.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionManagerAction(Ximura.Server.SessionActionType,Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSessionSCM,System.Object)">
            <summary>
            This method is used to process actions from the session manager.
            </summary>
            <param name="actionType"></param>
            <param name="sessionManager"></param>
            <param name="session"></param>
            <param name="data"></param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionRegister(Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSessionSCM)">
            <summary>
            This method registers a new session with the Security Manager
            </summary>
            <param name="theSession">The session</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionRelease(Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSessionSCM)">
            <summary>
            This method releases a session from the Session Manager
            </summary>
            <param name="theSession">The session</param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionProfileChanged(Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSessionSCM,Ximura.Server.SessionProfileLevel)">
            <summary>
            
            </summary>
            <param name="theSession"></param>
            <param name="theLevel"></param>
        </member>
        <member name="M:Ximura.Server.AppServer`3.SessionCreateRemote(System.String,System.String)">
            <summary>
            This command is called by the Command bridge delegate initiated by 
            commands that wish to create a session object.
            </summary>
            <param name="domain">The domain for the session or null for the default domain.</param>
            <param name="username">The username for the session or null.</param>
            <returns>A session object, or null if the session manager cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PerformanceStart">
            <summary>
            This protected method checks whether a Logging and Performance manager is active
            in the application, and if not creates a default one.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.PerformanceStop">
            <summary>
            This method stops and performance related logging.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.InternalStart">
            <summary>
            This method is called by the ServiceProcess parent object.
            </summary>
            <exception cref="T:Ximura.Server.AppServerException">An exception is thrown detailing 
            the error encountered when starting the application.</exception>
        </member>
        <member name="M:Ximura.Server.AppServer`3.InternalStop">
            <summary>
            This method stops the AppServer
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.InternalPause">
            <summary>
            This method pauses the AppServer
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.InternalContinue">
            <summary>
            This method continues the AppServer after it has been paused
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoggingStart">
            <summary>
            This private method checks whether a Logging and Performance manager is active
            in the application, and if not creates a default one.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.LoggingStop">
            <summary>
            This method is used to cleanup and stop logging.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ControlServiceContainer">
            <summary>
            This is the control service container.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ControlContainer">
            <summary>
            This is the control container.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ApplicationID">
            <summary>
            This property returns the internal application ID
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.AppServerAttribute">
            <summary>
            This property is the XimuraAppServerAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ApplicationIDAttribute">
            <summary>
            This property is the XimuraApplicationIDAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ThreadNeedNew">
            <summary>
            This property returns true if the number of active threads reaches
            the total number of threads in the pool.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.GatewayService">
            <summary>
            This is the gateway manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.GatewayDefault">
            <summary>
            This property returns default agents for the gateway manager. 
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.ConfigurationSystem">
            <summary>
            The system configuration object.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.CommandBridge">
            <summary>
            The is the command bridge which links the security manager with the command collection.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.StorageService">
            <summary>
            This is the storage manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.StorageDefault">
            <summary>
            This property returns default loggers for the application. 
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.SessionService">
            <summary>
            This is the session manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.SessionAgentsDefault">
            <summary>
            This property returns a collection of default session managers for the system. Typically this collection only
            contains the SessionManagerSystem. You should override this method if you require additional session managers.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.PerformanceService">
            <summary>
            This is the performance manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.PerformanceManager">
            <summary>
            This is the performance manager for the application which commands and services can register their performance counters with,
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.PerformanceAgentsDefault">
            <summary>
            This property returns default performance agents for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.LoggingService">
            <summary>
            This is the logging manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.LoggersDefault">
            <summary>
            This property returns default loggers for the application. 
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServer`3.AppServerDefinition">
            <summary>
            This class copies application specific data from the application and makes it available 
            to any requesting parties without any security risk of having the base object directly accessible.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.AppServerDefinition.#ctor(Ximura.Server.XimuraApplicationIDAttribute,Ximura.Server.XimuraAppServerAttribute)">
            <summary>
            This is the public constructor that copies the required values from the application.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.AppServerDefinition.ApplicationName">
            <summary>
            This is the application name.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.AppServerDefinition.ApplicationDescription">
            <summary>
            This is the application description.
            </summary>
        </member>
        <member name="P:Ximura.Server.AppServer`3.AppServerDefinition.ApplicationID">
            <summary>
            This is the application ID.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServer`3.Semaphore">
            <summary>
            Implementation of Dijkstra's PV Semaphore based on the Monitor class.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServer`3.Semaphore.m_count">
            <summary>
            The number of units alloted by this semaphore.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Semaphore.#ctor">
            <overloads>
            Initializes the semaphore.
            </overloads>
            <summary>
            Initialize the semaphore as a binary semaphore.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Semaphore.#ctor(System.Int32)">
            <summary>
            Initialize the semaphore as a counting semaphore.
            </summary>
            <param name="count">Initial number of threads that can take out units from this semaphore.</param>
            <exception cref="T:System.ArgumentException">Throws if the count argument is less than 1.</exception>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Semaphore.WaitOne">
            <summary>
            P the semaphore (take out 1 unit from it).
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Semaphore.AddOne">
            <summary>
            V the semaphore (add 1 unit to it).
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer`3.Semaphore.Reset(System.Int32)">
            <summary>
            Resets the semaphore to the specified count. Should be used cautiously.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer.#ctor">
            <summary>
            This is the default constructor for the service.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by the .Net component model when adding it to a container
            </summary>
            <param name="container">The container to add the component to.</param>
        </member>
        <member name="T:Ximura.Server.IXimuraSecurityManagerConfigSH">
            <summary>
            This interface is the base interface all security manager config 
            section handlers must implement.
            </summary>	
        </member>
        <member name="M:Ximura.Server.IXimuraSecurityManagerConfigSH.GetPermission(System.String)">
            <summary>
            Get Permission of specific User with cid/level pairs of permission
            </summary>
            <param name="UserID">user id</param>
            <returns>hashtable of cid/level pairs</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraSecurityManagerConfigSH.GetPermissionLevel(System.String,System.String)">
            <summary>
            Get User Setting of specific User and Type
            </summary>
            <param name="UserID">user name</param>
            <param name="cid">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraSecurityManagerConfigSH.VerifyJobPermissions(Ximura.Server.SecurityManagerJob,System.String)">
            <summary>
            This method is used to verify the job permission.
            </summary>
            <param name="scmJob">The job to verify.</param>
            <param name="userID">The user id.</param>
        </member>
        <member name="T:Ximura.Server.DispatcherJobPriorityQueueList">
            <summary>
            The job priority queue holds the job list.
            </summary>
        </member>
        <member name="T:Ximura.Server.IXimuraJobPriorityQueueList">
            <summary>
            This interface is implemented by classes that implements a specific job queue algorithm class.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueueList.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueueList.#ctor(System.Int32,System.Collections.IComparer,System.Int32)">
            <summary>
            This is the main constructor for the JobPriorityQueue.
            </summary>
            <param name="Capacity">The initial capacity.</param>
            <param name="comparer">The comparer or null if the default is required.</param>
            <param name="GrowthFactor">The growth factor.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.Server.DispatcherJobPriorityQueueList.Push(System.Guid,Ximura.JobPriority,System.TimeSpan)" -->
        <!-- Badly formed XML comment ignored for member "M:Ximura.Server.DispatcherJobPriorityQueueList.Push(Ximura.Server.JobPriorityRecord)" -->
        <member name="M:Ximura.Server.DispatcherJobPriorityQueueList.GetExpiredJobs(System.Boolean)">
            <summary>
            This method returns the Guids of the expired jobs
            </summary>
            <param name="purge">Pass true if they require the jobs to be deleted</param>
            <returns>An array of Guids containing the expired jobs.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueueList.Clear">
            <summary>
            This method clears the queue.
            </summary>
        </member>
        <member name="P:Ximura.Server.DispatcherJobPriorityQueueList.Count">
            <summary>
            This is the size of the current collection.
            </summary>
        </member>
        <member name="P:Ximura.Server.DispatcherJobPriorityQueueList.Capacity">
            <summary>
            This property changes the capacity of the Queue.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.BaseCDSState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.BaseCDSState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.StartCDSState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.StartCDSState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.StartCDSState.Initialize(Ximura.Persistence.CDSContext)">
            <summary>
            This is the Create method.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="T:Ximura.Persistence.ConverterPMCDSState`3">
            <summary>
            This Persistence manager can be used to convert an entity to another type.
            </summary>
            <typeparam name="CONT">The base entity for the Persistence Manager.</typeparam>
            <typeparam name="CNVR">The entity that is being converted.</typeparam>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.Read(Ximura.Persistence.CDSContext)">
            <summary>
            Reads and converts a ListItem in to an EntryList object.
            </summary>
            <param name="context">The current context.</param>
            <returns>Always returns true</returns>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.ResolveReference(Ximura.Persistence.CDSContext)">
            <summary>
            This is a passthru method to the ListItem ResolveReference method.
            </summary>
            <param name="context">The current context.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This is a passthru method to the ListItem VersionCheck method.
            </summary>
            <param name="context">The current context.</param>
            <returns>Always returns true.</returns>
        </member>
        <member name="M:Ximura.Persistence.ConverterPMCDSState`3.ReadConvert(Ximura.Persistence.CDSContext,`0,`1)">
            <summary>
            This method loads the newContent with the original content.
            To throw a custom error with a status code and description, throw a CDSStateException.
            </summary>
            <param name="context">The current request context.</param>
            <param name="newContent">The new content to load.</param>
            <param name="original">The original content to read from.</param>
            <exception cref="T:System.NotImplementedException">This method throws a NotImplementedException exception. 
            Override this method with your conversion logic.</exception>
        </member>
        <member name="T:Ximura.Persistence.CollectionBasePersistenceManager`3">
            <summary>
            This base Persistence Manager class is used for PMs that require a collection of resources to be stored in the PM.
            </summary>
            <typeparam name="CONT">The entity type.</typeparam>
            <typeparam name="DCONT">The entity scan type.</typeparam>
        </member>
        <member name="F:Ximura.Persistence.CollectionBasePersistenceManager`3.mDataCache">
            <summary>
            This collection holds the content collection for the persistence manager.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CollectionBasePersistenceManager`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CollectionBasePersistenceManager`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.CollectionBasePersistenceManager`3.ProcessIdentifier(Ximura.Persistence.CDSContext,System.Nullable{Ximura.Persistence.ContentIdentifier}@)">
            <summary>
            This method extracts the ids from the context.
            </summary>
            <param name="context">The context</param>
            <param name="identifier">The output identifier.</param>
            <returns>Returns true if the identifier can be extracted.</returns>
        </member>
        <member name="T:Ximura.Persistence.CDSStateActionPermitAttribute">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSStateActionPermitAttribute.#ctor(Ximura.Persistence.CDSStateAction)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateActionPermitAttribute.#ctor(Ximura.Persistence.CDSStateAction,System.Boolean)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
            <param name="deny">
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. By default this value is set to false.
            </param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateActionPermitAttribute.#ctor(Ximura.Persistence.CDSStateAction,System.Boolean,System.Int32)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
            <param name="deny">
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. By default this value is set to false.
            </param>
            <param name="priority">
            This is the priority of the attribute. Higher value attributes will override lower value attributes.
            By default this value will be 0.
            </param>
        </member>
        <member name="P:Ximura.Persistence.CDSStateActionPermitAttribute.Action">
            <summary>
            This is the CDSStateAction that the attribute is specifying.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSStateActionPermitAttribute.Deny">
            <summary>
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. 
            By default this value is set to false.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSStateActionPermitAttribute.Priority">
            <summary>
            This is the priority of the attribute. Higher value attributes will override lower value attributes.
            By default this value will be 0.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSStateAction">
            <summary>
            This enum contains a list of actions that each CDSState can execute. This enumeration is used to build up
            an execution plan.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Create">
            <summary>
            The Persistence Manager supports the create action.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Read">
            <summary>
            The Persistence Manager supports the read action.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Update">
            <summary>
            The Persistence Manager supports the updating of entities.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Delete">
            <summary>
            The Persistence Manager supports the deletion of entities.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.VersionCheck">
            <summary>
            The Persistence Manager supports the version checking of entities.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.ResolveReference">
            <summary>
            The Persistence Manager will resolve references for entities.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Cache">
            <summary>
            The Persistence Manager supports caching.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Browse">
            <summary>
            The Persistence Manager supports browsing for entity collection.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Publish">
            <summary>
            The Persistence Manager supports publishing for entities. This is reserved for future use.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Restore">
            <summary>
            The Persistence Manager supports restore for previously deleted entities.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStateAction.Custom">
            <summary>
            The Persistence Manager supports custom actions. This is reserved for future use.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.InvalidCommandCDSException">
            <summary>
            ContentDataStoreException is used to signal an exception in the CDS or its related components.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.InvalidCommandCDSException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.InvalidCommandCDSException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Persistence.InvalidCommandCDSException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Persistence.InvalidCommandCDSException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:Ximura.Persistence.InvalidCommandCDSException.ResponseCode">
            <summary>
            This is the HTTP Response code.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandProcess">
            <summary>
            This interface is used by a command process and is not currently used.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandRQ">
            <summary>
            This is the default command processing interface.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraCommandRQ.ProcessRequestSCM(Ximura.Server.SecurityManagerJob)">
            <summary>
            This is the default entry point for the job request.
            </summary>
            <param name="job">The security manager job.</param>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.SupportsCallbacks">
            <summary>
            This boolean property identifies whether the command will support callback.s
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.RequestType">
            <summary>
            This is the command request type.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.ResponseType">
            <summary>
            This is the command response type.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.CallbackRequestType">
            <summary>
            This is the callback request type.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.CallbackResponseType">
            <summary>
            This is the callback request type.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.EnvelopeContractType">
            <summary>
            This is the envelope contract type. 
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandRQ.EnvelopeCallbackContractType">
            <summary>
            This is the envelope callback contract type.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServerException">
            <summary>
            AppServerException is used by the AppServer to raise generic exceptions.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerException.#ctor">
            <summary>
            Initializes a new instance of the AppServerException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the AppServerException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.AppServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the AppServerException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.AppServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerPerformanceAgentAttribute">
            <summary>
            The agent is used to set the performance agents for the application.
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerAgentAttributeBase">
            <summary>
            This attribute class is used to identify specific agents for the application.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerAgentAttributeBase.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerAgentAttributeBase.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerAgentAttributeBase.Agent">
            <summary>
            The agent holder.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerPerformanceAgentAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerPerformanceAgentAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="T:Ximura.Server.GatewayManagerPerformance">
            <summary>
            This class records the gateway manager performance.
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManagerPerformance.#ctor">
            <summary>
            This is the default constructor for the Performance object.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ResourceBasePersistenceManager`3">
            <summary>
            The resource persistence manager is used to extract resources embedded in the application assemblies.
            </summary>
            <typeparam name="CONT">The content type to handle.</typeparam>
            <typeparam name="DCONT">The base content type to scan.</typeparam>
        </member>
        <member name="F:Ximura.Persistence.ResourceBasePersistenceManager`3.mReferenceLookUp">
            <summary>
            This collection holds the lookup table for the refType and refValue parameters.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.Read(Ximura.Persistence.CDSContext)">
            <summary>
            This is the read method which is used by cache managers to return the relevant content.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves the version ID of the entity. This ID will be regenerated each time the persistence manager is started.
            </summary>
            <param name="context">The current request context.</param>
            <returns>Returns true, as this is the definitive authority for the specified resource type.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.ResolveReference(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves the reference parameters against the resources stored in the assembly, and loads them in to the collection.
            </summary>
            <param name="context">the request context.</param>
            <returns>Returns true, as this is the definitive authority for the specified resource type.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.ResolveResourceReference(Ximura.Persistence.CDSContext,System.Guid,System.Collections.Generic.KeyValuePair{System.String,System.String},System.Nullable{System.Guid}@,System.Nullable{System.Guid}@)">
            <summary>
            This method resolves the request in the assembly, and loads the entity.
            </summary>
            <param name="context">The request context.</param>
            <param name="tid">The content type ID/</param>
            <param name="key">The refType/refValue key value pair.</param>
            <param name="cid">The content ID value.</param>
            <param name="vid">The version ID value.</param>
            <returns>Returns true if the request has been resolved and the entity has been loaded successfully.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.ContentCreate(Ximura.Persistence.CDSContext,System.Guid,System.Byte[],System.Collections.Generic.KeyValuePair{System.String,System.String},System.Uri)">
            <summary>
            This method creates the default content type as specified by the generic CONT parameter.
            You may override this method to provide more finegrained support when the Persistence Manager supports multiple content types.
            </summary>
            <param name="context">The current request context.</param>
            <param name="tid">the request content type id/</param>
            <returns>Returns a new object from the object pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.PrepareData(Ximura.Persistence.CDSContext,System.Collections.Generic.KeyValuePair{System.String,System.String},System.Uri,`0)">
            <summary>
            This method prepares the content and sets any necessary parameters
            before it is returned. This method is useful when the data embedded in the assembly is a native type such as an image, and 
            you need to set the entity paramters such as ID and Version before it is returned to the requestor.
            By default this method does not alter the data passed.
            </summary>
            <param name="context">the current context.</param>
            <param name="key">The request refType/refValue key pair.</param>
            <param name="resourceUri">The request resource Uri.</param>
            <param name="data">The entity to adjust.</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceBasePersistenceManager`3.BaseResourceLocationResolve(System.Type,System.Guid,System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            This method resolves the resource loacation for the requested content type. This method can be overriden to give
            more finegrained support when the Persistence Manager supports multiple content types.
            </summary>
            <param name="type">The request content type.</param>
            <param name="tid">The request content type id.</param>
            <param name="key">The reftype/refValue key value pair.</param>
            <returns>Returns the resource Uri the resolves the location of the content.</returns>
        </member>
        <member name="P:Ximura.Persistence.ResourceBasePersistenceManager`3.BaseResourceString">
            <summary>
            This string returns the path to the base folder in the assembly. This Uri should use the xmrres scheme. Any other scheme will be rejected.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentPermissionCollection">
            <summary>
            The XimuraComponentPermissionCollection class contains a list of 
            security permissions for the class. Permissions are binary, i.e. a user
            can have a yes/no right to the permission set.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionCollection.PermissionsAreSupported(System.Int64)">
            <summary>
            This method returns true if the permission is supported.
            </summary>
            <param name="permissionBitmap"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionCollection.CalculatePermissions">
            <summary>
            This method is called to calculate the permissions.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentPermissionCollection.SetPermission(Ximura.XimuraComponentPermissionAttribute)">
            <summary>
            This method sets the permissions
            </summary>
            <param name="attr">The permission attribute to process.</param>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionCollection.SupportedPermissionBitmap">
            <summary>
            This property contains the supported permissions for the bitmap.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentPermissionCollection.UnsupportedPermissionBitmap">
            <summary>
            These are the unsupported permissions. Denied permissions cannot be overriden.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentBaseHelper">
            <summary>
            This helper provides service based functionality for the components that require it.
            </summary>
        </member>
        <member name="F:Ximura.XimuraComponentBaseHelper.mServices">
            <summary>
            The service collection.
            </summary>
        </member>
        <member name="F:Ximura.XimuraComponentBaseHelper.currentType">
            <summary>
            currentType is used to identify the parent during debegging time.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.#ctor(System.Type)">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.RemoveService``1">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <typeparam name="T">The type of service to remove.</typeparam>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.RemoveService``1(System.Boolean)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <typeparam name="T">The type of service to remove.</typeparam>
            <param name="promote">Should be set to true if this service should be removed 
            from any parent service containers.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.RemoveService(System.Type)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <param name="serviceType">The type of service to remove.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.RemoveService(System.Type,System.Boolean)">
            <summary>
            Removes the specified service type from the service container.
            </summary>
            <param name="serviceType">The type of service to remove.</param>
            <param name="promote">Should be set to true if this service should be removed 
            from any parent service containers.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService``1(System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>
            Adds the service to the service container.
            </summary>
            <typeparam name="T">The type of service to add.</typeparam>
            <param name="callback">A callback delegate the create the service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
            <summary>
            Adds the service to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="callback">A callback delegate the create the service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService``1(``0)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The type of service to add.</typeparam>
            <param name="serviceInstance">The service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.Object)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService``1(System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The type of service to add.</typeparam>
            <param name="callback">A callback delegate the create the service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="callback">A callback delegate the create the service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService``1(System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean,System.Int32)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <typeparam name="T">The type of service to add.</typeparam>
            <param name="callback">A callback delegate the create the service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
            <param name="depth">The depth to promote the service. If this is set to -1 the depth in unlimited.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean,System.Int32)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="callback">A callback delegate the create the service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
            <param name="depth">The depth to promote the service. If this is set to -1 the depth in unlimited.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.XimuraComponentBaseHelper.AddService``1(``0,System.Boolean)" -->
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.Object,System.Boolean)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.XimuraComponentBaseHelper.AddService``1(``0,System.Boolean,System.Int32)" -->
        <member name="M:Ximura.XimuraComponentBaseHelper.AddService(System.Type,System.Object,System.Boolean,System.Int32)">
            <summary>
            Adds the service specified to the service container.
            </summary>
            <param name="serviceType">The type of service to add.</param>
            <param name="serviceInstance">The service.</param>
            <param name="promote">True promotes this service to the parent service container.</param>
            <param name="depth">The depth the service should be promoted. Set this value to -1 if you require it to be unlimited.</param>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.GetService``1">
            <summary>
            This method returns the requested service.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.GetService``1(System.Int32)">
            <summary>
            This method returns the requested service.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="depth">The service depth. If this is set to -1 the depth is unlimited.</param>
            <returns>Returns the service requested, or null if the service cannot be found.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.System#IServiceProvider#GetService(System.Type)">
            <summary>
            This method returns the requested service.
            </summary>
            <param name="serviceType">The service type.</param>
            <returns>Returns the service requested, or null if the service cannot be found.</returns>
        </member>
        <member name="M:Ximura.XimuraComponentBaseHelper.GetService(System.Type,System.Int32)">
            <summary>
            This method returns the requested service.
            </summary>
            <param name="serviceType">The service type.</param>
            <param name="depth">The service depth. If this is set to -1 the depth is unlimited.</param>
            <returns>Returns the service requested, or null if the service cannot be found.</returns>
        </member>
        <member name="P:Ximura.XimuraComponentBaseHelper.Services">
            <summary>
            This hashtable contains the locally registered services.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentBaseHelper.Site">
            <summary>
            This override property calls the SiteChanged method when the site changes
            for the component.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentBaseHelper.ServiceScope">
            <summary>
            The service scope structure holds a record of all the services
            registered to the component.
            </summary>
        </member>
        <member name="T:Ximura.Server.SessionBase">
            <summary>
            A session is created for each is used to user connection. 
            The session object tracks the actions that a user has requested 
            and monitor time outs and other session housekeeping functions.  
            </summary>
            <summary>
            This class is the base.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionBase.PasswordChangeSupported">
            <summary>
            This method identifies whether the user is able to change their password.
            </summary>
            <returns>Returns true if they can change their password.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.Logout">
            <summary>
            This method closes the session
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionBase.Close">
            <summary>
            This method closes the session
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionBase.CalcSig(System.Guid,Ximura.IXimuraRQRSEnvelope)">
            <summary>
            This method caclculates the job signature.
            </summary>
            <param name="jobid">The job id.</param>
            <param name="data">The request data.</param>
            <returns>Returns the job signature or null if the signature is not supported.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.#ctor(Ximura.Server.SessionAccessToken)">
            <summary>
            This base session constructor that points to the parent session manager.
            </summary>
            <param name="sesMan">The Session Manager</param>
            <param name="secMan">The Security Manager</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequest(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            This method processes a system request synchronously.
            </summary>
            <param name="Data">The Envelope containing the system request.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority)">
            <summary>
            This method processes a system request synchronously.
            </summary>
            <param name="Data">The Envelope containing the system request.</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="Data">The data.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="Data">The data.</param>
            <param name="priority">The request priority.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobid">The job id.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.SessionBase.ProcessRQAsyncInternal(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This private method is used to process an asynchronous request.
            </summary>
            <param name="jobid">The job ID</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate.</param>
            <returns>The Session job object.</returns>
            <exception cref="T:Ximura.Server.SCMBaseException">
            This method will throw a security exception on the calling thread
            you should be prepared to catch such an exception.</exception>
        </member>
        <member name="M:Ximura.Server.SessionBase.OnJobComplete(System.Guid)">
            <summary>
            This internal method is called when a job has completed.
            </summary>
            <param name="jobID">The job ID of the completed job.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.CancelRequest(System.Guid)">
            <summary>
            This method cancels a pending request.
            </summary>
            <param name="jobID">The job ID to cancel.</param>
        </member>
        <member name="M:Ximura.Server.SessionBase.OnCommandProgress(System.Guid,Ximura.CommandProgressEventArgs)">
            <summary>
            This method will be called when there is a progress update from 
            the command.
            </summary>
            <param name="jobID">The job id to notify progress update.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="P:Ximura.Server.SessionBase.SessionCulture">
            <summary>
            The session culture
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionBase.SessionID">
            <summary>
            This is the current session ID
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionBase.State">
            <summary>
            This is the current session state.
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionBase.UserID">
            <summary>
            This is the user ID for the session. This may return null is a user has not been set.
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionBase.Realm">
            <summary>
            The session realm.
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionBase.AuthenticationTypes">
            <summary>
            This method returns the authentication interfaces implemented by this session. You should override this
            method if your session supports authentication methods.
            </summary>
        </member>
        <member name="T:Ximura.Server.SSMConfiguration">
            <summary>
            This configuration class holds the settings for the system session manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.SSMConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SSMConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.SSMConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Server.CommandRequestCallback">
            <summary>
            This delegate is used to call back commands with specific jobs.
            </summary>
        </member>
        <member name="T:Ximura.Server.PerformanceManager">
            <summary>
            The performance manager manages the interaction between the performance system and the commands.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The default Ximura Application constructor
            </summary>
            <param name="container">The container the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.ServicesProvide">
            <summary>
            This override adds the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.ServicesRemove">
            <summary>
            This override removes the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.InternalStart">
            <summary>
            This override creates the performance counter collection.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.InternalStop">
            <summary>
            This override removes the performance collection.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceManager.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This method creates the performance agent.
            </summary>
            <param name="holder">The agent holder.</param>
            <returns>The performance agent.</returns>
            <exception cref="T:Ximura.Server.AgentInvalidTypeException">This exception is thrown if the agent type does not implement the IXimuraPerformanceAgent interface.</exception>
        </member>
        <member name="P:Ximura.Server.PerformanceManager.ManagerInternal">
            <summary>
            This is the performance counter collection.
            </summary>
        </member>
        <member name="P:Ximura.Server.PerformanceManager.Manager">
            <summary>
            This is the performance manager used to register performance services.
            </summary>
        </member>
        <member name="T:Ximura.Server.CommandBridge">
            <summary>
            The CommandBridge is used by the application server to isolate itself from the
            command control collection, and to manage the command collection.
            </summary>
        </member>
        <member name="T:Ximura.Server.IXimuraCommandBridge">
            <summary>
            This interface is registered as a service and is used by application 
            commands to communicate with the Application Dispatcher
            </summary>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridge.Register(Ximura.IXimuraCommandRQ)">
            <summary>
            This method is used to register a command in the command collection.
            </summary>
            <param name="command">The command to register.</param>
            <returns>Returns true if the command is registered successfully.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridge.Unregister(Ximura.IXimuraCommandRQ)">
            <summary>
            This method is used to unregister a command.
            </summary>
            <param name="command">The commands to remove.</param>
            <returns>Returns true if the command is successfully removed
            from the collection. Returns false if the command was not a member
            of the collection.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.#ctor(Ximura.Server.SessionCreateRemote,Ximura.Server.IXimuraConfigurationManager,Ximura.IXimuraPerformanceManager,Ximura.IXimuraPoolManager)">
            <summary>
            This is the default constructor for the command bridge.
            </summary>
            <param name="sessionInvoke">This is callback to the session manager that
            allows a command to create a session.</param>
            <param name="performanceManager"></param>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Dispose(System.Boolean)">
            <summary>
            This override stops the envelope pooling.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Register(Ximura.IXimuraCommandRQ)">
            <summary>
            This method is used to register a command in the command collection.
            </summary>
            <param name="command">The command to register.</param>
            <returns>Returns true if the command is registered successfully.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Unregister(Ximura.IXimuraCommandRQ)">
            <summary>
            This method is used to unregister a command.
            </summary>
            <param name="command">The commands to remove.</param>
            <returns>Returns true if the command is successfully removed
            from the collection. Returns false if the command was not a member
            of the collection.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Ximura#Server#IXimuraSessionManager#SessionCreate">
            <summary>
            This method creates an empty session.
            </summary>
            <returns>A session object or null if the session manager is configured
            not to provide a session without a username.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Ximura#Server#IXimuraSessionManager#SessionCreate(System.String)">
            <summary>
            This method creates a session and sets the associated username.
            </summary>
            <param name="username">The username.</param>
            <returns>A session object.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.Ximura#Server#IXimuraSessionManager#SessionCreate(System.String,System.String)">
            <summary>
            This method creates a session and sets the associated username.
            </summary>
            <param name="domain">The session domain.</param>
            <param name="username">The username.</param>
            <returns>A session object.</returns>
        </member>
        <member name="M:Ximura.Server.CommandBridge.ResolveCommand(System.Guid)">
            <summary>
            This method resolves and returns a command based on its Guid. 
            </summary>
            <param name="commandID">The command ID</param>
            <returns>A command object if the command is part of the command
            collection; otherwise this method will return null.</returns>
        </member>
        <member name="M:Ximura.Persistence.FinishCDSState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.FinishCDSState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.FinishCDSState.Finish(Ximura.Persistence.CDSContext)">
            <summary>
            This is the Create method.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSStateTypePermitAttribute">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSStateTypePermitAttribute.#ctor(Ximura.Persistence.CDSStateAction)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateTypePermitAttribute.#ctor(Ximura.Persistence.CDSStateAction,System.Boolean)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
            <param name="deny">
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. By default this value is set to false.
            </param>
        </member>
        <member name="M:Ximura.Persistence.CDSStateTypePermitAttribute.#ctor(Ximura.Persistence.CDSStateAction,System.Boolean,System.Int32)">
            <summary>
            This attribute specifies which actions the CDSState implements. These attributes
            only specify the default behavior and can be overriden in specific implementation by 
            adding attributes with a higher priority or specifically in code.
            </summary>
            <param name="action">
            This is the CDSStateAction that the attribute defines.
            </param>
            <param name="deny">
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. By default this value is set to false.
            </param>
            <param name="priority">
            This is the priority of the attribute. Higher value attributes will override lower value attributes.
            By default this value will be 0.
            </param>
        </member>
        <member name="P:Ximura.Persistence.CDSStateTypePermitAttribute.Action">
            <summary>
            This is the CDSStateAction that the attribute is specifying.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSStateTypePermitAttribute.Deny">
            <summary>
            This property defines whether the action is specifically denied. Deny will override a permit when they have the same priority. 
            By default this value is set to false.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSStateTypePermitAttribute.Priority">
            <summary>
            This is the priority of the attribute. Higher value attributes will override lower value attributes.
            By default this value will be 0.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.IXimuraStorageSQLServerConnectivity">
            <summary>
            THis interface is implemented by the SQLServer connectivity storage agent.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLStorageManagerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLStorageManagerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.SQLStorageManagerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSHelper">
            <summary>
            This static class is used to simplify access to the Content Data Store
            </summary>
            <summary>
            This static class is used to simplify access to the Content Data Store
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSHelper.mSession">
            <summary>
            This is the session that the process command will run under.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.#ctor(Ximura.IXimuraSessionRQ)">
            <summary>
            This is the main constructor.
            </summary>
            <param name="session">The session object to wrap.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.Create(Ximura.Data.Content)">
            <summary>
            This is a shortcut method for creating an entity.
            </summary>
            <param name="inData">The content to create in the CDS.</param>
            <returns>Returns the CDS status</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.Update(Ximura.Data.Content,Ximura.Data.Content@)">
            <summary>
            This is a shortcut method for creating an entity.
            </summary>
            <param name="inData">The content to create in the CDS.</param>
            <returns>Returns the CDS status</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.TranslateResponseCode(System.String)">
            <summary>
            This method translates the response code in to a CDSResponse enumeration.
            </summary>
            <param name="responseCode">The string response code.</param>
            <returns>Returns the CDSResponse enumeration value, or Unknown if the value is not recognised.</returns>
        </member>
        <member name="F:Ximura.Persistence.CDSHelper.mAsyncJobTracker">
            <summary>
            The job tracker.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSHelper.cbVersionCheck">
            <summary>
            The Version Check callback.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.AsyncCDSCallback(System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This is the Read call back.
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.EnvelopeRequest(Ximura.Command.EnvelopeAddress)">
            <summary>
            This methos is used to get an envelope for the request from the pool.
            </summary>
            <param name="addr"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.EnvelopeReturn(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            This method is used by sync methods to return the envelope back to the pool.
            </summary>
            <param name="env"></param>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.EnvelopeReturn(Ximura.CommandRSEventArgs)">
            <summary>
            This method is used by async callbacks to return the envelope back to the pool.
            </summary>
            <param name="args">The command arguments.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSHelper.Session">
            <summary>
            This property is the internal session.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSHelper.CDSBrowseConstraints">
            <summary>
            This property specifies the browse options
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSHelper.CDSBrowseConstraints.All">
            <summary>
            The CDS will browse on all content fields. This may be very slow.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSHelper.CDSBrowseConstraints.Relational">
            <summary>
            The CDS will only browse of fields that have been marked relational.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSHelper.BrowseContext`1.#ctor(Ximura.IXimuraSessionRQ,Ximura.Persistence.CDSHelper.CDSBrowseConstraints)">
            <summary>
            This is the default constructor for the browse context.
            </summary>
            <param name="SessionRQ">The session object to execute under.</param>
            <param name="constraints">The browse constraints identifying what sort of request should be accepted.</param>
        </member>
        <member name="T:Ximura.Server.JobCollection">
            <summary>
            This class is thread synchronized and holds a collection of jobs currently being processed.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobCollection.jobCollection">
            <summary>
            This collection holds the job object along with it's unique trace id.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobCollection.jobCollectionID">
            <summary>
            This object holds the job id as a value
            </summary>
        </member>
        <member name="F:Ximura.Server.JobCollection.jobCollectionTrackID">
            <summary>
            This object holds the track id as a value.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobCollection.#ctor">
            <summary>
            This is the default constructor. There will be no limit to the number of jobs that can be registered.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobCollection.#ctor(System.Int32,Ximura.JobPriority,System.Boolean)">
            <summary>
            This is main constructor.
            </summary>
            <param name="maxCapacity">The maximum number of jobs that the class can contain.</param>
            <param name="PriorityOverride">The priority override level. Jobs that have the same or greater priority will be allowed
            to submit jobs regardless of the collection status.</param>
            <param name="useDependency">This method will track jobs having the same dependency.</param>
        </member>
        <member name="M:Ximura.Server.JobCollection.Add(System.Object)">
            <summary>
            This method adds a job to the collection.
            </summary>
            <param name="value">The JobBase object to add.</param>
            <returns>Returns 0.</returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.Add(Ximura.Server.JobBase)">
            <summary>
            This method adds a job to the collection.
            </summary>
            <param name="jobRQ">The JobBase object to add.</param>
            <returns>Returns 0.</returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.Remove(System.Object)">
            <summary>
            Removes the job from the collection.
            </summary>
            <param name="value">A jobbase object.</param>
        </member>
        <member name="M:Ximura.Server.JobCollection.Remove(System.Guid)">
            <summary>
            This method removes the job from the collection.
            </summary>
            <param name="jobID">The job ID.</param>
        </member>
        <member name="M:Ximura.Server.JobCollection.Remove(Ximura.Server.JobBase)">
            <summary>
            Removes the job from the collection.
            </summary>
            <param name="job">The job to remove.</param>
        </member>
        <member name="M:Ximura.Server.JobCollection.Clear">
            <summary>
            This method clears the collection of all jobs.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobCollection.Contains(System.Object)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="value">A Guid to identify the job.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.Contains(Ximura.Server.JobBase)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="job">A object that derives from JobBase.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.Contains(System.Guid)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="jobID">A Guid to identify the job.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.RemoveAt(System.Int32)">
            <summary>
            Not supported.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Ximura.Server.JobCollection.Insert(System.Int32,System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ximura.Server.JobCollection.IndexOf(System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Not supported.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Ximura.Server.JobCollection.GetEnumerator">
            <summary>
            Not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.JobCollection.Dispose">
            <summary>
            This method disposes of the collection.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobCollection.Dispose(System.Boolean)">
            <summary>
            This method provides specific dispose code for the collection.
            </summary>
            <param name="disposing">Set to true if this is the first time this is called.</param>
        </member>
        <member name="M:Ximura.Server.JobCollection.DisposeCheck">
            <summary>
            This method checks whether the collection has been disposed, and if so throws an exception.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.Item(System.Guid)">
            <summary>
            This returns a job from the collection based on the job ID.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.JobIDs">
            <summary>
            This is a collection of JobIDs for the current jobs.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.IsFixedSize">
            <summary>
            Returns true if the job collection has a maximum size.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.Capacity">
            <summary>
            The number of jobs currently in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.Count">
            <summary>
            The number of jobs currently in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.SyncRoot">
            <summary>
            Always returns itself, as this is a synchronized class.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.IsSynchronized">
            <summary>
            Always returns true as this is a synchronized class.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.IsReadOnly">
            <summary>
            Returns true if the collection has reached its capacity.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobCollection.Item(System.Int32)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="T:Ximura.Server.SessionException">
            <summary>
            SessionException is thrown when an error is throw in the Session object.
            </summary>
        </member>
        <member name="T:Ximura.Server.SecurityException">
            <summary>
            Summary description for Exceptions.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityException.#ctor">
            <summary>
            Initializes a new instance of the SecurityException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SecurityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SecurityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SecurityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Server.DispatcherSecurityException">
            <summary>
            Summary description for SecurityException.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherSecurityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes the exception with serialized information.</summary>
            <param name="info">Serialization information.</param>
            <param name="context">Streaming context.</param>
        </member>
        <member name="T:Ximura.Server.GatewayManager">
            <summary>
            The gateway manager manages interactions with the external agents that interact with the system.
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManager.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The Ximura Application component model constructor
            </summary>
            <param name="container">The container that the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.GatewayManager.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This method is used to create the Gateway agent.
            </summary>
            <param name="holder">The agent holder.</param>
            <returns>Returns the gateway agent.</returns>
        </member>
        <member name="M:Ximura.Server.GatewayManager.ServicesProvide">
            <summary>
            This override adds the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.GatewayManager.ServicesRemove">
            <summary>
            This override removes the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPMCDSConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPMCDSConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.SQLDBPMCDSConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Command.FSMExtenderBridge`1">
            <summary>
            FSMExtenderBridge is used to link the various components within the finite state machine.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraFSMExtenderBridge`1">
            <summary>
            IXimuraFSMExtenderBridge is used to connect.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMExtenderBridge`1.StateEx">
            <summary>
            The state extender.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderBridge`1.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderBridge`1.#ctor(Ximura.IXimuraFSMStateMetadataExtender{`0})">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="P:Ximura.Command.FSMExtenderBridge`1.StateEx">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="T:Ximura.Command.ContextPool`1">
            <summary>
            The context pool holds the collection of context objects.
            </summary>
            <typeparam name="CNTX">The context type.</typeparam>
        </member>
        <member name="M:Ximura.Command.ContextPool`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.ContextPool`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            This is the pool constructor with default arguments.
            </summary>
            <param name="min">This is the minimum size.</param>
            <param name="max">This is the maximum size.</param>
            <param name="prefer">This is the prefered size.</param>
        </member>
        <member name="T:Ximura.Server.SessionActionType">
            <summary>
            The session action type enumeration is used to mediate communication between the session managers and the security manager.
            </summary>
        </member>
        <member name="F:Ximura.Server.SessionActionType.Register">
            <summary>
            A new session has been created.
            </summary>
        </member>
        <member name="F:Ximura.Server.SessionActionType.Release">
            <summary>
            A session is being released.
            </summary>
        </member>
        <member name="F:Ximura.Server.SessionActionType.ProfileChanged">
            <summary>
            A session profile has changed, i.e. they have logged in or logged out.
            </summary>
        </member>
        <member name="T:Ximura.Server.JobException">
            <summary>
            Summary description for JobException.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.JobException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.JobException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.JobException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Server.JobPriorityRecord">
            <summary>
            This is the job priority structure.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobPriorityRecord.Priority">
            <summary>
            The job priority.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobPriorityRecord.PushTime">
            <summary>
            The push time.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobPriorityRecord.ID">
            <summary>
            The priority ID.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobPriorityRecord.#ctor(Ximura.JobPriority,System.Guid,System.TimeSpan)">
            <summary>
            This is the constructor.
            </summary>
            <param name="level">The job priority level.</param>
            <param name="jobID">The job id.</param>
            <param name="TTL">The time to live.</param>
        </member>
        <member name="P:Ximura.Server.JobPriorityRecord.JobExpired">
            <summary>
            This method returns true if the job has expired.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobPriorityRecord.ExpireTime">
            <summary>
            This property increments the time to live.
            </summary>
        </member>
        <member name="T:Ximura.Server.DispatcherJobPriorityGenericQueueList">
            <summary>
            This is an extended job priority queue list that uses generics to hold
            multiple queues based on the job priority.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.#ctor(Ximura.Server.DelGetCapacity)">
            <summary>
            This is the default constructor.
            </summary>
            <param name="settings">The dispatcher settings</param>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.Push(System.Guid,Ximura.JobPriority,System.TimeSpan)">
            <summary>
            This method inserts the job in to the queue.
            </summary>
            <param name="jobID">The job ID.</param>
            <param name="priority">The job priority.</param>
            <param name="jobTTL">The job time to live.</param>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.Push(Ximura.Server.JobPriorityRecord)">
            <summary>
            This method inserts the job in to the queue, based on the priority set for the job.
            </summary>
            <param name="newJob"></param>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.Pop">
            <summary>
            This method removes the job with the highest priority from the priority queue.
            </summary>
            <returns>Returns the top job or null if there are no jobs in the queue.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.Peek">
            <summary>
            This method peeks to the top of the queue and return the next job.
            </summary>
            <returns>This method returns the job with the highest priority 
            or returns null if there are no jobs to process.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.GetExpiredJobs(System.Boolean)">
            <summary>
            This method is currently not implemented.
            </summary>
            <param name="purge"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.Clear">
            <summary>
            This method clears the priority list of all pending jobs.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityGenericQueueList.CountPriority(Ximura.JobPriority)">
            <summary>
            This method returns the total number of jobs pending for a particular job priority.
            </summary>
            <param name="priority"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Server.DispatcherJobPriorityGenericQueueList.Count">
            <summary>
            This property returns the total number of jobs pending.
            </summary>
        </member>
        <member name="T:Ximura.Server.DispatcherJobPriorityGenericQueueList.PriorityComparer">
            <summary>
            This internal comparer solves performance issues with enums in dictionaries.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CacheManagerCDSState">
            <summary>
            This is the cache manager PM state.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.FileSystemBasePMCDSState`3">
            <summary>
            This class is th base class for persistence managers that use the file system as a store.
            </summary>
            <typeparam name="CONT"></typeparam>
            <typeparam name="DCONT"></typeparam>
        </member>
        <member name="M:Ximura.Persistence.FileSystemBasePMCDSState`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.FileSystemBasePMCDSState`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Persistence.ICDSCacheManager">
            <summary>
            This interface is implemented by cache manager states to enable
            housekeeping functions.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CacheManagerCDSState.storageFileSystem">
            <summary>
            This is the file system storage manager.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.Read(Ximura.Persistence.CDSContext)">
            <summary>
            This is the read method which is used by cache managers to return the relevant content.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.Cache(Ximura.Persistence.CDSContext)">
            <summary>
            This is the cache method which is used by cache managers to add new content to the cache.
            </summary>
            <param name="context">The job context.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.SupportsEntityAction(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method returns the 
            </summary>
            <param name="action">The actions.</param>
            <param name="objectType">The object type.</param>
            <returns>Returns int.max if the content type supports caching.</returns>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.ServicesReference">
            <summary>
            This method registers the cache manager with the cachemanagerbridge service.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheManagerCDSState.ServicesDereference">
            <summary>
            This method removes the cache manager from the bridge service.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.Persistence.CacheManagerCDSState.TimerPoll" -->
        <member name="P:Ximura.Persistence.CacheManagerCDSState.CacheHits">
            <summary>
            This text property contains a brief description of the number of cache hits for the cache collection.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheManagerCDSState.EntityCount">
            <summary>
            This text property contains thebreakdown of cached entities in the cache manager.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration.NamespaceManagerAdd(System.Xml.XmlNamespaceManager)">
            <summary>
            This override adds the ximura namespace to the default Namespace manager.
            </summary>
            <param name="nsm">The system default namespace manager.</param>
        </member>
        <member name="P:Ximura.Command.FSMCommandConfiguration.PoolMin">
            <summary>
            The minimum number of contexts to be placed in the pool.
            </summary>
        </member>
        <member name="P:Ximura.Command.FSMCommandConfiguration.PoolMax">
            <summary>
            The maximum number of context that will be allowed in the pool. 
            </summary>
        </member>
        <member name="P:Ximura.Command.FSMCommandConfiguration.PoolPrefer">
            <summary>
            The preferred number of context for the pool.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration`1.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Command.FSMCommandConfiguration`1.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Command.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSConfiguration.NamespaceDefaultShortName">
            <summary>
            This is the short name used in the namespace manager to refer to the root namespace.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSTimerPollJob">
            <summary>
            This class is used to initiate timer poll jobs for the Content Data Store.
            </summary>
        </member>
        <member name="T:Ximura.Command.TimerPollJob">
            <summary>
            The Poll job class contains the information for processing regular poll jobs.
            </summary>
        </member>
        <member name="F:Ximura.Command.TimerPollJob.mValues">
            <summary>
            This dictionary contains the configuration values.
            </summary>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.#ctor">
            <summary>
            This is the default constructor for the timer poll job.
            </summary>
            <param name="data">The XmlElement containing the data.</param>
            <param name="NSM">The namespace manager.</param>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.Configure(System.Xml.XmlElement,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            This method sets the time poll data from the Xml configuration node.
            </summary>
            <param name="element">The xml element containing the time poll data.</param>
            <param name="NSM">The namespace manager.</param>
            <param name="subCommand">The subcommand object.</param>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.ValueSet(System.Xml.XmlElement,System.Xml.XmlNamespaceManager)">
            <summary>
            This method adds the specific values for the extender properties.
            </summary>
            <param name="node">the value node.</param>
            <param name="NSM">The namespace manager.</param>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.TimerRecalculate(System.Boolean)">
            <summary>
            This method calculates the next time for the job.
            </summary>
            <param name="autoStart">A boolean value indicating whether this is the first time the method has been called.</param>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.DateTimeCalculate(System.Double,System.String)">
            <summary>
            This method calculates the DateTime value from the time value and time type.
            </summary>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.DateTimeCalculate(System.DateTime,System.Double,System.String)">
            <summary>
            This method calculates the DateTime value from the time value and time type.
            </summary>
            <param name="baseTime">The base time to calculate from.</param>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.TimerPollJob.TimeSpanCalculate(System.Double,System.String)">
            <summary>
            This method calculates the TimeSpan from the time value and time type.
            </summary>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns>Returns a TimeSpan corresponding to the specified time value, or null if the timetype cannot be resolved.</returns>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.Enabled">
            <summary>
            A boolean property that indicates whether the poll job is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.AutoStart">
            <summary>
            A boolean value indicating whether the command should autostart, i.e. call the command, when it first starts.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.PollValue">
            <summary>
            The numeric poll value.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.PollType">
            <summary>
            The poll value type, i.e. s,m,h,d etc
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.PollInterval">
            <summary>
            The Timespan interval for the job.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.Active">
            <summary>
            This property determines whether the job is currently active. This property is set when the command is currently 
            processing and stops multiple calls being initiated.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.ID">
            <summary>
            The job id.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.IDType">
            <summary>
            The job id type.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.Subcommand">
            <summary>
            The subcommand object that is passed in the Envelope request.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.NextPollTime">
            <summary>
            The next poll time, or null if no time is set.
            </summary>
        </member>
        <member name="P:Ximura.Command.TimerPollJob.RequestFormat">
            <summary>
            This action can be overriden to provide formating support for the timer poll request.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSTimerPollJob.Configure(System.Xml.XmlElement,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            This override sets the ContentDataStoreSubCommand enumeration for the job.
            </summary>
            <param name="element">The xml element containing the time poll data.</param>
            <param name="NSM">The namespace manager.</param>
            <param name="subCommand">The subcommand object.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSResponse">
            <summary>
            This enumeration contains the standard response codes from the Content Data Store (CDS).
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.Continue">
            <summary>
            The request can continue. This is primarily used by resolve reference.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.OK">
            <summary>
            The request was processed successfully.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.NotFound">
            <summary>
            The request parameters could not be resolved to an entity.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.BadRequest">
            <summary>
            The request parameters or the request entities were invalid or badly formed.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.VersionIDInvalid">
            <summary>
            The version ID supplied was invalid.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.SystemError">
            <summary>
            The CDS has encountered an unexpected error processing the request.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.NotImplemented">
            <summary>
            The requested action for the requested entity type is not supported.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.CDSNotStarted">
            <summary>
            The CDS has not started.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.ResponseCodeUnknown">
            <summary>
            The response code was not recognised.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSResponse.ResponseCodeNotSet">
            <summary>
            The response code was null or an empty string.
            </summary>
        </member>
        <member name="T:Ximura.Server.CompletionJobCallBack">
            <summary>
            This delegate is used to signal the completion of a set of jobs.
            </summary>
        </member>
        <member name="T:Ximura.Server.AppServerAgentBase`2">
            <summary>
            This is the base class for the application system agents.
            </summary>
            <typeparam name="CONF">The agent configuration class.</typeparam>
            <typeparam name="PERF">The agent performance class.</typeparam>
        </member>
        <member name="M:Ximura.Server.AppServerAgentBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerAgentBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Server.SessionSecurityException">
            <summary>
            Summary description for SessionExceptions.
            </summary>
        </member>
        <member name="T:Ximura.PerformanceCounter">
            <summary>
            This class is the default class for the performance counters.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounter.mInternalValue">
            <summary>
            The internal value.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounter.mCatType">
            <summary>
            The performance counter type.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounter.#ctor">
            <summary>
            This is the default constructor for the performance counter.
            </summary>
        </member>
        <member name="M:Ximura.PerformanceCounter.Increment">
            <summary>
            This method increments the internal counter by 1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.PerformanceCounter.IncrementBy(System.Int64)">
            <summary>
            This method increments or decrements the internal counter by the value specified.
            </summary>
            <param name="value">The positive or negative value.</param>
            <returns>Returns the new value of the counter.</returns>
        </member>
        <member name="M:Ximura.PerformanceCounter.Decrement">
            <summary>
            This method decrements the internal counter by 1.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.PerformanceCounter.CounterType">
            <summary>
            This is the performance counter type.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceCounter.RawValue">
            <summary>
            This is the performance counter raw value.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceCounter.Active">
            <summary>
            This property identifies whether the counter is active.
            </summary>
        </member>
        <member name="P:Ximura.PerformanceCounter.Dirty">
            <summary>
            This property identifies whether the counter is dirty and needs updating.
            </summary>
        </member>
        <member name="T:Ximura.Command.CommandDefinition">
            <summary>
            This helper class is used to pass the command definition without passing a reference to the command.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandDefinition.#ctor(Ximura.IXimuraCommand)">
            <summary>
            This constructor copies the command properties in to the helper class.
            </summary>
            <param name="command">The command whose definition needs to be encapsulated.</param>
        </member>
        <member name="P:Ximura.Command.CommandDefinition.CommandID">
            <summary>
            The command unique identifier.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandDefinition.CommandName">
            <summary>
            The command name. This is used in to the config file to retrieve the
            settings.
            </summary>
        </member>
        <member name="P:Ximura.Command.CommandDefinition.CommandDescription">
            <summary>
            The command friendly description.
            </summary>
        </member>
        <member name="T:Ximura.Command.FSMCommandPerformance">
            <summary>
            This is the base performance counter for the Finite State Machine.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCommandPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentServiceException">
            <summary>
            This exception is thrown when an error is encountered during the component status change event.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Server.SCMValidationException">
            <summary>
            Summary description for SCMAuthenticationException.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMValidationException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMValidationException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSData">
            <summary>
            The CDSData class is used by the CDSHelper to hold the information for a request.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction,System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction,System.Nullable{System.Guid},System.Nullable{System.Guid},Ximura.JobPriority)">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction,System.String,System.String)">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction,System.String,System.String,Ximura.JobPriority)">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction)">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Get(Ximura.Persistence.CDSStateAction,Ximura.JobPriority)">
            <summary>
            This factory method can be used to Get a request object and set its 
            parameters
            </summary>
            <returns>Returns an object from the pool.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Reset">
            <summary>
            This reset method resets the object to it's default values.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSData.ObjectPoolReturn">
            <summary>
            This method returns the request to the pool for re-use.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Dispose">
            <summary>
            The dispose method.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSData.Dispose(System.Boolean)">
            <summary>
            The overrided dispose method
            </summary>
            <param name="disposing">True if this is called by dispose, false if this
            is called by the finalizer.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSData.ObjectPool">
            <summary>
            This property is not supported.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSData.ObjectPoolCanReturn">
            <summary>
            This property will always be true as objects will always be part of a pool.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSData.CanPool">
            <summary>
            This will always return true for this object type.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSData.TrackID">
            <summary>
            This is the internal track ID.
            </summary>
        </member>
        <member name="T:Ximura.Command.StateExtenderService">
            <summary>
            The state extender service object is the intermediary between a Finite State Machine and the FSM extender commands. 
            This object allows an extender to register external states with the FSM.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtenderService.#ctor">
            <summary>
            This is the default constructor for the StateExtenderService.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerCommandConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerCommandConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.AppServerCommandConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.IXimuraFSMExtenderBase">
            <summary>
            IXimuraFSMExtenderBase is used to provide services for the base service.
            </summary>
        </member>
        <member name="T:Ximura.Command.InvalidStateNameFSMException">
            <summary>
            Summary description for FSMException.
            </summary>
        </member>
        <member name="T:Ximura.Command.FSMException">
            <summary>
            Summary description for FSMException.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Command.FSMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Command.FSMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Command.InvalidStateNameFSMException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Command.InvalidStateNameFSMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Command.InvalidStateNameFSMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Command.InvalidStateNameFSMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`1.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="F:Ximura.Server.SessionAgentBase`2.mSessionCollection">
            <summary>
            This protected hashtable contains a collection of session
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.SessionCreate">
            <summary>
            This method creates a blank session
            </summary>
            <returns>A session object.</returns>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.SessionCreate(System.String)">
            <summary>
            This method creates a session for the valid userID.
            </summary>
            <param name="userID">The user ID of the session</param>
            <returns>A session object.</returns>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.SessionCreate(System.String,System.String)">
            <summary>
            This method creates a session for the valid userID.
            </summary>
            <param name="domain">The session domain.</param>
            <param name="userID">The user ID of the session</param>
            <returns>A session object.</returns>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.Logout(Ximura.IXimuraSessionSCM)">
            <summary>
            This method logs out a session and resets its permission to an
            unathorized user.
            </summary>
            <param name="theSession">The session to logout.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.Close(Ximura.IXimuraSessionSCM)">
            <summary>
            This method closes a session and removes it from the session collection.
            </summary>
            <param name="theSession">The session object to close.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="P:Ximura.Server.SessionAgentBase`2.AuthenticationTypes">
            <summary>
            This enumeration contains the supported authentication interfaces.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentSQLServerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentSQLServerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentSQLServerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Server.IXimuraSessionManagerRegistration">
            <summary>
            IXimuraSecurityManager is the public interface that the security manager exposes
            to any session managers, and is used to negotiate sessions.
            </summary>
        </member>
        <member name="T:Ximura.Server.CompletionJobWrapperBase">
            <summary>
            Summary description for CompletionJobWrapperBase.
            </summary>
        </member>
        <member name="T:Ximura.Server.JobWrapper">
            <summary>
            The Job Wrapper class is used by inherited method to add
            additional properties to the request while maintaining the 
            original job request.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobWrapper.mBaseJob">
            <summary>
            This is the base job.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobWrapper.timeoutTimer">
            <summary>
            This is the thread timer used for time out operations
            </summary>
        </member>
        <member name="F:Ximura.Server.JobWrapper.timeoutCallback">
            <summary>
            The time out callback
            </summary>
        </member>
        <member name="M:Ximura.Server.JobWrapper.#ctor(Ximura.Server.JobBase)">
            <summary>
            This is the wrapper constructor.
            </summary>
            <param name="baseJob">The base job.</param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.InitializeJob">
            <summary>
            This method is used to initialize any variables before the initial
            Reset() is called.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobWrapper.Reset">
            <summary>
            This virtual method resets the base properties for the JobWrapper.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobWrapper.Inititialize(Ximura.Server.JobBase,Ximura.CommandRSCallback,Ximura.CommandProgressCallback)">
            <summary>
            This is the root initialization for the JobWrapper.
            </summary>
            <param name="baseJob"></param>
            <param name="RSCallback"></param>
            <param name="ProgressCallback"></param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.IDBuffer">
            <summary>
            This method returns the buffer for the request.
            </summary>
            <returns>A byte array containing the identifying IDs.</returns>
        </member>
        <member name="M:Ximura.Server.JobWrapper.OnTimeOut(System.Object)">
            <summary>
            This method initializes the timer callback
            </summary>
        </member>
        <member name="M:Ximura.Server.JobWrapper.SetTimer(System.Int32)">
            <summary>
            This method sets the timer to the delay requested.
            </summary>
            <param name="Timeout"></param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.SetTimer(System.Int32,System.Object)">
            <summary>
            This method sets the timer to the delay requested.
            </summary>
            <param name="Timeout">The time out in milliseconds.</param>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.ResetTimer">
            <summary>
            This method resets the timer and stops it firing.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobWrapper.TimeoutFire(System.Object)">
            <summary>
            This method is called when the timer fires. 
            Override this object to implement your own functionality.
            </summary>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.ProgressReport(System.Int32)">
            <summary>
            This method reports the progress to the calling party.
            </summary>
            <param name="progress">The progress percentage as an integer.</param>
            <param name="message">An optional progress message.</param>
        </member>
        <member name="M:Ximura.Server.JobWrapper.ProgressReport(System.Int32,System.String)">
            <summary>
            This method reports the progress to the calling party.
            </summary>
            <param name="progress">The progress percentage as an integer.</param>
            <param name="message">An optional progress message.</param>
            <returns>Returns true if the progress message was successfully delivered.</returns>
        </member>
        <member name="M:Ximura.Server.JobWrapper.ObjectPoolReturn">
            <summary>
            This method returns the job to the pool.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.Priority">
            <summary>
            This is the job priority.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.SessionID">
            <summary>
            The Session ID
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.ID">
            <summary>
            The Job ID
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.Data">
            <summary>
            The job data
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.Signature">
            <summary>
            The originator signature.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.RSCallback">
            <summary>
            This is the completion callback delegate.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.ProgressCallback">
            <summary>
            This is the progress call back delegate
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.SupportsProgressNotification">
            <summary>
            This property identifies whether the request supports 
            progress notification.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.ObjectPool">
            <summary>
            This is the object pool for the job.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobWrapper.ObjectPoolCanReturn">
            <summary>
            This boolean property identifies whether the job can be returned to the pool.
            </summary>
        </member>
        <member name="F:Ximura.Server.CompletionJobWrapperBase.jobRequests">
            <summary>
            The job requests.
            </summary>
        </member>
        <member name="F:Ximura.Server.CompletionJobWrapperBase.mParentJob">
            <summary>
            The parent job.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.Reset">
            <summary>
            This private method reset the Completion job.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This protected method is used to add a job to the collection.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The guid of the job queued.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJobWrapperBase.RemoveJob(System.Guid,System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This method will remove a child job and call any delegate.
            </summary>
            <param name="jobID">The job ID</param>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Server.CompletionJobWrapperBase.WorkTable">
            <summary>
            This is the worktable that contains the jobs.
            </summary>
        </member>
        <member name="P:Ximura.Server.CompletionJobWrapperBase.ParentJob">
            <summary>
            This is the parent security manager job
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSSettings">
            <summary>
            The settings class is used by the CDS context and states to provide information for the States.
            </summary>
        </member>
        <member name="T:Ximura.Command.ContextSettings`3">
            <summary>
            The context settings class hold a collection of the settings that the context will use.
            </summary>
            <typeparam name="ST">The state type.</typeparam>
        </member>
        <member name="T:Ximura.IXimuraFSMSettingsBase">
            <summary>
            This is the settings base interface.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMSettingsBase.PoolManager">
            <summary>
            The pool manager.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMSettingsBase.SessionManager">
            <summary>
            The session manager.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMSettingsBase.DomainDefault">
            <summary>
            This is the default domian user for creating context sessions.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMSettings`3.StateCollection">
            <summary>
            This method returns a collection of active states.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMSettings`3.GetInitialState">
            <summary>
            This method returns the initial state, or null if no initial state has been set.
            </summary>
            <returns>The state requested or null.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMSettings`3.GetState(System.String)">
            <summary>
            This method returns the state object based on the name.
            </summary>
            <param name="State">The state name.</param>
            <returns>Returns the state object or null if the name cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMSettings`3.GetStateName(`0)">
            <summary>
            This method returns the state identifier for the state object.
            </summary>
            <param name="CurrentState">The current that you wish to resolve.</param>
            <returns>Return the name of the state.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMSettings`3.InitializeSettings(Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSession,`1,`2)">
            <summary>
            This method is used to initialize the FSM settings object.
            </summary>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="P:Ximura.IXimuraFSMSettings`3.Configuration">
            <summary>
            The command configuration.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMSettings`3.Performance">
            <summary>
            The FSM performance counter.
            </summary>
        </member>
        <member name="F:Ximura.Command.ContextSettings`3.mStateExtender">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="F:Ximura.Command.ContextSettings`3.mProcessSession">
            <summary>
            This is the process session that the base FSM command operates under.
            </summary>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.#ctor">
            <summary>
            This constructor is called by the FSM when initiating the settings.
            </summary>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.GetInitialState">
            <summary>
            This method returns the initial state.
            </summary>
            <returns>The initial state, or null if no initial state has been set.</returns>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.GetState(System.String)">
            <summary>
            This method returns the state for the string based identifier that is passed as a parameter.
            </summary>
            <param name="State">The state identifier.</param>
            <returns>The state or null if the identifier is not recognised.</returns>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.GetStateName(`0)">
            <summary>
            This method returns the state string identifier.
            </summary>
            <param name="CurrentState">The state object.</param>
            <returns>The state identifier.</returns>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.InitializeSettings(Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSession,`1,`2)">
            <summary>
            This method is used to initialize the FSM settings object.
            </summary>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The seesion manager.</param>
            <param name="processSession">The current process session that the command is running under.</param>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.StateCollection">
            <summary>
            This method returs a collection of states.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.ContextSettings`3.ResolveConnectionString(System.String)">
            <summary>
            This method resolves the SQL connection string.
            </summary>
            <param name="connID"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.CommandID">
            <summary>
            This is the base command ID.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.CommandName">
            <summary>
            This is the base command name.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.CommandDescription">
            <summary>
            This is the base command description.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.PoolManager">
            <summary>
            This is the pool manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.SessionManager">
            <summary>
            This is the session manager for the FSM application.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.ApplicationName">
            <summary>
            The base application name.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.ApplicationID">
            <summary>
            The base application ID.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.ApplicationDescription">
            <summary>
            The application description.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.CDSHelper">
            <summary>
            This is the CDS Helper for the process session object.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.DomainDefault">
            <summary>
            This string is the default domin used for context sessions when a specific domain is not specified.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.ProcessSession">
            <summary>
            This is the process session used by the base command. This session may be used to submit requests for
            commands that do not use user sessions.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.Configuration">
            <summary>
            This is the configuration object.
            </summary>
        </member>
        <member name="P:Ximura.Command.ContextSettings`3.Performance">
            <summary>
            This is the performance object.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSettings.TIMEOUTREAD">
            <summary>
            This is the default timeout value for read operation for the CDSState Execution plan cache.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSettings.TIMEOUTWRITE">
            <summary>
            This is the default timeout value for write operation to the CDSState Execution plan cache.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSettings.rwl">
            <summary>
            This readwriter lock is used to allow multiple threads to access the CDSState execution plan cache.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.#ctor">
            <summary>
            This constructor is called by the FSM when initiating the settings.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.InitializeStateExecutionPlan">
            <summary>
            This method initializes the state execution plan.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.ResolveExecutionPlan(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method is used to resolve the CDSState execution plan for the required entity type and action.
            </summary>
            <param name="objectType">The entity object type.</param>
            <returns>Returns a string array containing the state name collection.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.GetAndCacheExecutionPlan(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method builds the CDSState execution plan for the particular type and action.
            </summary>
            <param name="action">The action.</param>
            <param name="objectType">The object type.</param>
            <returns>The CDSState execution plan.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.GetExecutionPlan(Ximura.Persistence.CDSStateAction,System.Type)">
            <summary>
            This method calculates the CDSState Execution plan from the state collection.
            </summary>
            <param name="action">The action.</param>
            <param name="objectType">The object type.</param>
            <returns>The CDSState execution plan.</returns>
        </member>
        <member name="M:Ximura.Persistence.CDSSettings.InitializeSettings(Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{Ximura.Persistence.ICDSState},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager,Ximura.IXimuraSession,Ximura.Persistence.CDSConfiguration,Ximura.Persistence.CDSPerformance,Ximura.Persistence.ICDSCacheManagerBridge)">
            <summary>
            This method is used to initialize the FSM settings object.
            </summary>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session manager.</param>
            <param name="processSession">The current process session that the command is running under.</param>
            <param name="cacheManagerBridge">The cache manager bridge, which allows cache managers to share information.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSSettings.CacheManagerBridge">
            <summary>
            This is the cache manager bridge.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSReferenceAttribute">
            <summary>
            This attribute is used to define unique refernce properties for the entity
            that can be used to retrieve it from the CDS store..
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSReferenceAttribute.#ctor(System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify the Ximura command.
            </summary>
            <param name="ID">A string representation of a GUID in the form 6364755B-97B9-4799-B8BC-3D98EB786C92</param>
        </member>
        <member name="P:Ximura.Persistence.CDSReferenceAttribute.Name">
            <summary>
            The name of the module. This is used to retrieve app settings.
            </summary>
        </member>
        <member name="M:Ximura.Server.IXimuraSessionManagerAccess.SessionRegister(Ximura.IXimuraSessionSCM)">
            <summary>
            This method registers a session with the security manager.
            </summary>
            <param name="theSession">The session object.</param>
        </member>
        <member name="M:Ximura.Server.IXimuraSessionManagerAccess.SessionRelease(Ximura.IXimuraSessionSCM)">
            <summary>
            This method releases a session.
            </summary>
            <param name="theSession">The session object.</param>
        </member>
        <member name="M:Ximura.Server.IXimuraSessionManagerAccess.SessionProfileChanged(Ximura.IXimuraSessionSCM,Ximura.Server.SessionProfileLevel)">
            <summary>
            This method informs the security manager that the session security profile
            has changed.
            </summary>
            <param name="theSession">The session object.</param>
            <param name="theLevel">The session profile level.</param>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerStorageAttribute">
            <summary>
            The XimuraAppServerAttribute attribute is used to set friendly names and descriptions for
            the server which will be used in the server performance counters.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerStorageAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerStorageAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.StorageAgentBase.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageAgentBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.IXimuraFSMStateMetadataExtender`1">
            <summary>
            Summary description for IXimuraFSMStateExtender.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMStateMetadataExtender`1.GetState(System.String)">
            <summary>
            This method returns the initial state.
            </summary>
            <param name="State">The type parameter for the state required.</param>
            <returns>The state.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMStateMetadataExtender`1.GetInitialState">
            <summary>
            This is the initial state.
            </summary>
            <returns>The initial state. If there is no initial state set 
            this will return null;</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMStateMetadataExtender`1.GetStateName(`0)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMStateMetadataExtender`1.HasNextState(System.String)">
            <summary>
            This method returns true if the user has set a next state for this state.
            </summary>
            <param name="State">The state to check.</param>
            <returns>Returns true if a next state has been set.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMStateMetadataExtender`1.GetNextState(System.String)">
            <summary>
            This method returns the state identifier for the next state.
            </summary>
            <param name="State">The state to check.</param>
            <returns>Returns the state identifier of the next state if set. 
            If not set this method will return null.</returns>
        </member>
        <member name="T:Ximura.Server.SecurityManagerJob">
            <summary>
            This is the Security Manager job object.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.#ctor">
            <summary>
            This is the job pool constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.Initialize(Ximura.Server.JobBase,Ximura.Server.SessionToken,Ximura.Server.SecurityManagerJob,Ximura.CommandRSCallback,Ximura.CommandProgressCallback)">
            <summary>
            This method initializes the session.
            </summary>
            <param name="secMan">The security manager.</param>
            <param name="jobRQ">The job request.</param>
            <param name="token">The session token.</param>
            <param name="parentJob">The parent job. This should be left null if this is not a child job.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.Reset">
            <summary>
            This method resets the object to its initial state.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.IncrementChildJobCount">
            <summary>
            This method increments the total job count.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="priority">The request priority.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="priority">The request priority.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This protected method is used to add a job to the collection.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.CreateCompletionJob(Ximura.Server.CompletionJobCallBack)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.CreateCompletionJob(Ximura.Server.CompletionJobCallBack,System.Boolean,System.Int32)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="AutoExecute">The boolean property indicates whether the job request should execute immediately.</param>
            <param name="throttleThreshold">This parameter specifies the maximum number of jobs that will be processed in parallel. If this is
            set to 0 or below throttling will not be implemented.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.CreateCompletionJob(Ximura.Server.CompletionJobCallBack,System.Object)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="state">The callback state.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.CreateCompletionJob(Ximura.Server.CompletionJobCallBack,System.Object,System.Boolean,System.Int32)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="state">The callback state.</param>
            <param name="AutoExecute">The boolean property indicates whether the job request should execute immediately.</param>
            <param name="throttlingThreshold">This parameter specifies the maximum number of jobs that will be processed in parallel. If this is
            set to 0 or below throttling will not be implemented.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.SignalComplete">
            <summary>
            This method is used to signal that the job is complete.
            </summary>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.ChildJobComplete(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method is used to signal that a child job is complete.
            </summary>
            <param name="childJob"></param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.SetCompletionType(Ximura.SCMJobCompletionType)">
            <summary>
            This method sets the job completion time out.
            </summary>
            <param name="completionType">The completion type.</param>
        </member>
        <member name="M:Ximura.Server.SecurityManagerJob.SetCompletionType(Ximura.SCMJobCompletionType,System.Int32)">
            <summary>
            This method sets the job completion time out.
            </summary>
            <param name="completionType">The completion type.</param>
            <param name="Timeout">The time out.</param>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.ParentID">
            <summary>
            The parent Job ID or Guid empty if there isn't a parent job.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.UserID">
            <summary>
            This is the user ID of the user that made the request.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.Command">
            <summary>
            The command
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.BaseJob">
            <summary>
            This is the base job for the request.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.ActiveThread">
            <summary>
            This property is the active thread for the command.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.JobType">
            <summary>
            This property is the Dispatcher Job type.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.JobCallback">
            <summary>
            This property is the job callback to the command.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.IsChildJob">
            <summary>
            This boolean property identifies whether the job is a child job.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.ChildJobDepth">
            <summary>
            This integer property identifies the depth from the original parent. 
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.HasChildren">
            <summary>
            This boolean property identifies whether the job has child jobs.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.TotalChildJobCount">
            <summary>
            This property is the total number of child job that have 
            been executed (but not necessarily completed). This is a recursive value.
            </summary>
        </member>
        <member name="P:Ximura.Server.SecurityManagerJob.JobCompletionType">
            <summary>
            This is the completion job type.
            </summary>
        </member>
        <member name="T:Ximura.Server.SCMCommandNotFoundException">
            <summary>
            Summary description for SCMAuthenticationException.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMCommandNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMCommandNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMCommandNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMCommandNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMCommandNotFoundException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Server.LoggerAgentBase">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="F:Ximura.Server.LoggerAgentBase.mSettings">
            <summary>
            The logger settings.
            </summary>
        </member>
        <member name="F:Ximura.Server.LoggerAgentBase.mAutoFlush">
            <summary>
            The autoflush parameter
            </summary>
        </member>
        <member name="F:Ximura.Server.LoggerAgentBase.mLoglevel">
            <summary>
            The log level
            </summary>
        </member>
        <member name="F:Ximura.Server.LoggerAgentBase.LogMachine">
            <summary>
            The log machine name
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Initialize(Ximura.IXimuraLoggerSettings)">
            <summary>
            This property initializes the logger.
            </summary>
            <param name="settings">The logger settings</param>
            <exception cref="T:System.ArgumentNullException">The settings parameter cannot be null.</exception>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Deinitialize">
            <summary>
            This method should be used to release any resources held by the logger.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.AcceptCategory(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            This method inform the Logging Manager whether it will accept the 
            category for logging.
            </summary>
            <param name="category">The logging category.</param>
            <param name="type">The envent log entry type category.</param>
            <returns>A boolean value. True indicates the category is accepted.</returns>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.ConvertType(System.Diagnostics.EventLogEntryType)">
            <summary>
            This is a bit messy, but I require a fine grained resolution on the type and cannot depend on .NET implicit conversions.
            </summary>
            <param name="type">The type to convert.</param>
            <returns>Returns an integer specifying the debug type.</returns>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Indent">
            <summary>
            This method indents the logger input.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Unindent">
            <summary>
            This method unindents the logger input.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Ximura#IXimuraLogging#get_IndentLevel">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Ximura#IXimuraLogging#set_IndentLevel(System.Int32)">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Ximura#IXimuraLogging#get_IndentSize">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggerAgentBase.Ximura#IXimuraLogging#set_IndentSize(System.Int32)">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="P:Ximura.Server.LoggerAgentBase.AutoFlush">
            <summary>
            The auto-flush property.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.DelCDSProcessRQ">
            <summary>
            This delegate is used to access the CDS directly from the current context.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSContext">
            <summary>
            This is the context used to process CDS requests.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.Reset">
            <summary>
            This method will reset specific request values for the CDS context.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.Initialize">
            <summary>
            This method initializes the context.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.CDSStateActionResolve">
            <summary>
            This method maps the PMCapability request to its corresponding CDS Action type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.CDSStateProcessDirective(Ximura.Persistence.CDSStateAction)">
            <summary>
            This method processes the specific CRUD execution plan for the request.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.Finish">
            <summary>
            This method provides any clean up or finalization of the response.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.ContentProcessFragment(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Persistence.CDSRequestFolder,Ximura.Persistence.CDSResponseFolder},Ximura.Persistence.CDSStateAction@)">
            <summary>
            This method processes a fragment object and merges the updates with the base content.
            </summary>
            <param name="job">The current request.</param>
            <param name="action">The current action. This may be changed depending on the merge action performed.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSContext.Reset(Ximura.IXimuraFSMSettingsBase,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Persistence.CDSRequestFolder,Ximura.Persistence.CDSResponseFolder},Ximura.Command.IXimuraFSMContextPoolAccess,Ximura.Persistence.DelCDSProcessRQ)">
            <summary>
            This method resets a connection and sets the connection state to ClosedRBPState.
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="job">The job request.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.CacheStyle">
            <summary>
            This is the cache style.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.CacheTimeOut">
            <summary>
            This is the cache timeout in seconds.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.RequestIsByReference">
            <summary>
            This property returns true if the request is by reference.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.ContentIsCacheable">
            <summary>
            This request returns true if the content is cacheable. 
            This will be used to indicate whether the Cache method should
            be called after the action has been completed.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.ContentIsFragment">
            <summary>
            This method checks whether the entity being passed is a fragment object.
            </summary>
            <param name="Request">The request containing the entity.</param>
            <returns>Returns true if the object is an entity.</returns>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.CDSHelperDirect">
            <summary>
            This CDSHelper wrapper access the CDS directly using the current thread and security settings. 
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSContext.CDSDirectAccess">
            <summary>
            The CDSDirectAccess class is used to allow CDSContexts to call internally to retrieve content without 
            having to utilize the multi-threaded session mananger. This may introduce security risks for certain system
            and should be disabled if not required.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSContext.CDSDirectAccess.Job">
            <summary>
            This is the job for the current context;
            </summary>
        </member>
        <member name="T:Ximura.Command.CJobSignature`7">
            <summary>
            The job signature class is used to hold metadata for a JobContext completion job request.
            </summary>
        </member>
        <member name="M:Ximura.Command.CJobSignature`7.#ctor(`0)">
            <summary>
            This is the default constructor for the signature.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Command.CJobSignature`7.JobLength">
            <summary>
            The job execution length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.CJobSignature`7.ValidateContext">
            <summary>
            This method validates that the context has not been returned to the pool and used for 
            another job while this has been executing.
            </summary>
            <returns>Returns true if the signature IDs match.</returns>
        </member>
        <member name="P:Ximura.Command.CJobSignature`7.SignatureID">
            <summary>
            The job signature.
            </summary>
        </member>
        <member name="P:Ximura.Command.CJobSignature`7.Context">
            <summary>
            The context
            </summary>
        </member>
        <member name="P:Ximura.Command.CJobSignature`7.CreateTime">
            <summary>
            The job create time.
            </summary>
        </member>
        <member name="T:Ximura.Command.FiniteStateMachine`9">
            <summary>
            The FiniteStateMachine is one of the root command objects. 
            It is used to implement system that operate using a well defined system of states.
            </summary>
            <typeparam name="RQ">The request type.</typeparam>
            <typeparam name="RS">The response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The FSM context type.</typeparam>
            <typeparam name="ST">The FSM base state type.</typeparam>
            <typeparam name="SET">The FSM base settings.</typeparam>
        </member>
        <member name="T:Ximura.Command.FiniteStateMachine`10">
            <summary>
            The FiniteStateMachine is one of the root command objects. 
            It is used to implement system that operate using a well defined system of states.
            </summary>
            <typeparam name="RQ">The request type.</typeparam>
            <typeparam name="RS">The response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The FSM context type.</typeparam>
            <typeparam name="ST">The FSM base state type.</typeparam>
            <typeparam name="SET">The FSM base settings.</typeparam>
            <typeparam name="EXTCONF">The external configuration object type which contains the settings for the internal commands.</typeparam>
        </member>
        <member name="T:Ximura.Command.AppCommandProcess`7">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external configuration object type which contains the settings for the internal commands.</typeparam>
        </member>
        <member name="T:Ximura.Command.AppCommandStandard`7">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external command object that contains a set of user configurable settings.</typeparam>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The command container to be added to.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ServicesProvide">
            <summary>
            This override registers the command with the dispatcher commands collection
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ServicesRemove">
            <summary>
            This overriden method removes the dispatcherCollection services
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ServicesReference">
            <summary>
            This overriden method reference the scheduled services.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ServicesDereference">
            <summary>
            This overriden method unregisters the scheduled services.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.Start">
            <summary>
            This method starts the service based on the default async settings
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.Stop">
            <summary>
            This override removes the performance and configuration.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.GetSettings">
            <summary>
            This protected member returns the default settings for the command
            </summary>
            <returns>The settings object</returns>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ProcessRequestSCM(Ximura.Server.SecurityManagerJob)">
            <summary>
            This is the default entry point for the job request from the security manager. By default
            the command will track job processes and update statistics for each job.
            </summary>
            <param name="job">The job to process.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ProcessRequest(Ximura.Server.SecurityManagerJob)">
            <summary>
            This is the default command process logic. You should override this method to implement your
            specific business logic.
            </summary>
            <param name="job">The job to process.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ProcessRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This is the default generic process point. This will call the non-generic method for backwards
            compatibility.
            </summary>
            <param name="job"></param>
            <param name="Data"></param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.ProcessCallback(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3})">
            <summary>
            This is the standard method for processing callbacks.
            </summary>
            <param name="job">The job to process.</param>
            <param name="Data">The callback data.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.IsCallback(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            The method returns true if the Data is a callback type.
            </summary>
            <param name="Data">The envelope to check.</param>
            <returns>Return true if this is a callback.</returns>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackRegister">
            <summary>
            This method will be called when the command starts and should
            be overriden and permitted callback commands should be registered.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackRegister(System.Guid)">
            <summary>
            This method registers the callback.
            </summary>
            <param name="jobID">The command ID to be registered.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackUnregister">
            <summary>
            This method will be called when the command stops and will automatically unregister any callback commands.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackUnregister(System.Guid)">
            <summary>
            This method unregisters the callback.
            </summary>
            <param name="commandID">The commandID to unregister.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackValidate(System.Guid)">
            <summary>
            This method validates a callback for a command ID.
            </summary>
            <param name="commandID">The command ID to validate</param>
            <returns>Returns true of the command is registered.</returns>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CallbackValidate(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method validates a callback for a job request.
            </summary>
            <param name="job">The callback job to validate</param>
            <returns>Returns true if the job is validated.</returns>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.CommandBridgeRegister(System.Boolean)">
            <summary>
            This method determines whether the command is registered or unregistered with the command bridge.
            </summary>
            <param name="register">A boolean value indicating whether this command should be registered or unregistered.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.SchedulerRegister">
            <summary>
            Use this method registers scheduler callbacks.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.SchedulerRegisterSubCommands">
            <summary>
            This method registers specific subcommands for the scheduler. By default this method will
            register the blank subcommand. 
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.SchedulerUnregister">
            <summary>
            Use this method to unregister scheduler callbacks.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.SchedulerStart">
            <summary>
            This method gets a reference to the scheduler service.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.SchedulerStop">
            <summary>
            THis method removes and scheduler notifications and removes the scheduler reference.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.Notify(System.Type,System.Object)">
            <summary>
            This method starts and stops the timer based on the system start/stop notification.
            </summary>
            <param name="notificationType">The notification type.</param>
            <param name="notification">The notification.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerChange(System.TimeSpan)">
            <summary>
            This method is used to change the timer settings.
            </summary>
            <param name="span">The due time.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerChange(System.Int64)">
            <summary>
            This method is used to change the timer settings.
            </summary>
            <param name="dueTime">The due time.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerStart">
            <summary>
            This method initializes the timer used for pick up polling.
            The default settings for this command is to wait indefintely, so
            you should override this method if you require different polling.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerStop">
            <summary>
            This method stops the timer.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerPause">
            <summary>
            This method will pause the timer.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerResume">
            <summary>
            This method will resume the timer based on the settings.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.InternalTimerCallback(System.Object)">
            <summary>
            This internal method ensures that a unhandled exception in a ontimer method called 
            does not result in the system crashing out.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.OnTimerEvent(System.Boolean)">
            <summary>
            This method will be called when a timer is called.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`7.TimerPollJobExecute(Ximura.Command.TimerPollJob)">
            <summary>
            This method executes a timer poll job and handles the response. You should override this method to provide
            your own logic.
            </summary>
            <param name="job">The timer poll job.</param>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.SupportsCallbacks">
            <summary>
            This property identifies whether the command supports callbacks.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.Scheduler">
            <summary>
            This is the scheduler.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.SchedulerAutoRegister">
            <summary>
            This property determines whether the command will automatically register with the
            scheduler on start up.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.RequestType">
            <summary>
            This is the command request type.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.ResponseType">
            <summary>
            This is the command response type.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.CallbackRequestType">
            <summary>
            This is the command callback request type.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.CallbackResponseType">
            <summary>
            This is the command callback response type.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.EnvelopeContractType">
            <summary>
            This is the envelope contract type. 
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.EnvelopeCallbackContractType">
            <summary>
            This is the envelope callback contract type. 
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.SupportsNotifications">
            <summary>
            This method returns true as the command uses notification to enable and disable the timer poll.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandStandard`7.TimerEnabled">
            <summary>
            This method is used to override the default auto start for the timer in the base command.
            You can override this method if you need more fine-grained timer start
            functionality.
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandProcess`7.mProcessSession">
            <summary>
            This is the session that the process command will run under.
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandProcess`7.mSessionMan">
            <summary>
            This is a reference to the application session manager.
            </summary>
        </member>
        <member name="F:Ximura.Command.AppCommandProcess`7.mSettings">
            <summary>
            The Command Process Settings
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.InternalStart">
            <summary>
            This overrides the Internal start and negotiates a session for the process
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.InternalStop">
            <summary>
            This overrides the stop process and closes the process session.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.ServicesReference">
            <summary>
            Creates a reference to the IXimuraSessionManager
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.ServicesDereference">
            <summary>
            Removes a reference to IXimuraSessionManager
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.ProcessSessionNegotiate">
            <summary>
            This method negotiates a session for the process.
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.ProcessSessionClose">
            <summary>
            This method closes a sessions for the process
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.PrepareJob(Ximura.Server.SecurityManagerJob,`0@,`1@)">
            <summary>
            This method prepares the parameters for the job request.
            </summary>
            <param name="job">The job.</param>
            <param name="Request">The request.</param>
            <param name="Response">The response.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.PrepareJob(Ximura.Server.SecurityManagerJob)">
            <summary>
            This helper method is provides for methods that do not want to reference the Request
            and Response methods directly.
            </summary>
            <param name="job">The job to prepare.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.TimerPollJobExecute(Ximura.Command.TimerPollJob)">
            <summary>
            This method initiates a timer poll job and handles the response.
            </summary>
            <param name="job">The time poll job.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.TimerHelperAsyncSelfCall(Ximura.Command.TimerPollJob,Ximura.CommandRSCallback)">
            <summary>
            This method can be used to initiate a callback.
            </summary>
            <param name="subCommand">The subcommand.</param>
            <param name="callback">The callback delegate.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`7.TimerHelperAsyncSelfCall(Ximura.Command.TimerPollJob,Ximura.CommandRSCallback,Ximura.JobPriority,System.Action{Ximura.Command.RQRSFolder})">
            <summary>
            This method can be used to initiate a callback.
            </summary>
            <param name="subCommand">The subcommand.</param>
            <param name="callback">The callback delegate.</param>
            <param name="priority">The request priority.</param>
            <param name="rqFormat">The delegate used to format the request. This parameter can be null.</param>
        </member>
        <member name="P:Ximura.Command.AppCommandProcess`7.CDSSettings">
            <summary>
            This protected property is the CDS settings object.
            </summary>
        </member>
        <member name="P:Ximura.Command.AppCommandProcess`7.CDSHelper">
            <summary>
            The CDSHelper is the object that encapsulates the functionality needed
            to receive and manage content from the Content Data Store.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.DEFAULTTHROTTLELIMIT">
            <summary>
            This is the default throttle limit for the context completion job.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.mExtenderService">
            <summary>
            This is the state extender service.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.mPool">
            <summary>
            This is the context pool.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.mContextSettings">
            <summary>
            This is the context connection class that hold context connection settings and services.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.mStateExtender">
            <summary>
            This is the base state extender.
            </summary>
        </member>
        <member name="F:Ximura.Command.FiniteStateMachine`10.mRemoteContextPoolAccess">
            <summary>
            This class allows contexts to create additional contexts. This is primarily used for 
            connection based FSM services.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeExtenders(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeBaseStates(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InternalStart">
            <summary>
            This method initializes the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InternalStop">
            <summary>
            This
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.StatesStart">
            <summary>
            This method will start any states that implement IXimuraService
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.StatesStop">
            <summary>
            This method will stop any states that have been started.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ServicesProvide">
            <summary>
            This override creates the state extender service.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ServicesRemove">
            <summary>
            This override removes the state extender service.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.CreateSystemRequest(Ximura.Command.EnvelopeAddress)">
            <summary>
            This method creates the system request.
            </summary>
            <returns>A new envelope with the correct destination address.</returns>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ProcessRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This override is the main entry point for the incoming FSM request.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The request data.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ProcessRequestFailed(System.String,System.String,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method allow customization to the response should there not be any contexts available 
            to process the request.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The data containing the request and the response.</param>
            <returns>Return true if you do not wish the command to set the standard response properties to the response.</returns>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ProcessRequest(`4)">
            <summary>
            This is the entry point for Finite State Machines that require a context.
            </summary>
            <param name="jobContext">The job context that contains the requested parameters.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeContextPool(System.ComponentModel.IContainer)">
            <summary>
            This method initializes the context pool. Override this method if you need
            additional pool creation logic.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeContextConnection(System.ComponentModel.IContainer)">
            <summary>
            This method should be overriden to provide extended Context collection settings.
            </summary>
            <param name="baseContainer">The base container for the collection.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeContextConnectionSettings(System.ComponentModel.IContainer)">
            <summary>
            This method should be overriden to provide extended Context collection settings.
            </summary>
            <param name="baseContainer">The base container for the collection.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ContextInitialize(`4,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method allows generic operations to be performed on the new context.
            </summary>
            <param name="newContext"></param>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming generic data.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ClearContextPool">
            <summary>
            This method empties the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.InitializeContextPoolAccess">
            <summary>
            This command initializes the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ContextGetContext">
            <summary>
            This method retrieves a context from the pool.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`10.ContextReturnContext(`4)">
            <summary>
            This method returns a context to the pool.
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Command.FiniteStateMachine`10.ContextPool">
            <summary>
            This is the context pool for the FSM.
            </summary>
        </member>
        <member name="P:Ximura.Command.FiniteStateMachine`10.ContextConnection">
            <summary>
            This is the default context connection.
            </summary>
        </member>
        <member name="P:Ximura.Command.FiniteStateMachine`10.GatekeeperEnabled">
            <summary>
            This protected property determines whether the context gatekeeper is enabled. If you wish 
            to enable the gatekeeper, you should override this property and return true.
            </summary>
        </member>
        <member name="P:Ximura.Command.FiniteStateMachine`10.ExternalStatesAllow">
            <summary>
            This property determines whether the FSM will allow external states contained in a FSMExtenderCommand object to register
            with this command.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Command.FiniteStateMachine`9.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Command.FSMContextPoolAccess`1">
            <summary>
            This class is used by the Transport class to allow transport buffers access to the buffer pool 
            for listening connections that require a new buffer.
            </summary>
        </member>
        <member name="T:Ximura.Command.IXimuraFSMContextPoolAccess">
            <summary>
            This interface is used to allow non-generic implementations of the class due to the .Net 2.0 generic limitations.
            </summary>
        </member>
        <member name="T:Ximura.Command.StateExtender`1">
            <summary>
            StateExtender contains the collection of states for the finite state machine.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.ServicesProvide">
            <summary>
            This overriden method registers the ContextExtender with the Extender Bridge
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.ServicesRemove">
            <summary>
            This overriden method unregisters the ContextExtender with the Extender Bridge if it is already registered.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetStateID(Ximura.IXimuraFSMState)">
            <summary>
            This property is used to return the state ID.
            </summary>
            <param name="state">The state.</param>
            <returns>The ID of the state.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.SetStateID(Ximura.IXimuraFSMState,System.String)">
            <summary>
            This property is used to set the state id
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state ID.</param>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetEnabled(Ximura.IXimuraFSMState)">
            <summary>
            This property is used to return the enabled state.
            </summary>
            <param name="state">The state.</param>
            <returns>The enabled boolean value of the state.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.SetEnabled(Ximura.IXimuraFSMState,System.Boolean)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state enabled value.</param>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetNextStateID(Ximura.IXimuraFSMState)">
            <summary>
            This property is used to return the state ID.
            </summary>
            <param name="state">The state.</param>
            <returns>The ID of the state.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.SetNextStateID(Ximura.IXimuraFSMState,System.String)">
            <summary>
            This property is used to set the state id
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state ID.</param>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetStateIDList">
            <summary>
            This method returns a collection of the available state ids in the collection.
            </summary>
            <returns>Returns a string array containing a string is for each of the states.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetItemByType(System.Type)">
            <summary>
            This method returns the object based on its type.
            </summary>
            <param name="dataContentType">The type to find.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetState(System.String)">
            <summary>
            This method returns the state for the name passed to the connection.
            </summary>
            <param name="State">The state ID to return.</param>
            <returns>Null if the state cannot be found, or the state 
            object requested.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetInitialState">
            <summary>
            This is the initial state for all new connections.
            </summary>
            <returns>The initial state for the protocol.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.GetStateName(`0)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.InternalStart">
            <summary>
            This method starts the states registered in the collection.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateExtender`1.InternalStop">
            <summary>
            This method stops the states registered in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Command.StateExtender`1.InitialState">
            <summary>
            This is the ID of the initial state.
            </summary>
        </member>
        <member name="P:Ximura.Command.StateExtender`1.ExtenderBridge">
            <summary>
            This read only property is the service bridge object from
            the protocol to the extenders.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentServiceHelper">
            <summary>
            The XimuraComponentServiceHelper object is used to provide common functionality for 
            modules that implement the IXimuraComponentService interface.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ServiceEventAdd(Ximura.XimuraServiceStatus,Ximura.Helper.ServiceEvent)">
            <summary>
            This method adds a service event to the collection.
            </summary>
            <param name="status">The event status</param>
            <param name="theEvent">The event</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ServiceEventRemove(Ximura.XimuraServiceStatus,Ximura.Helper.ServiceEvent)">
            <summary>
            This method handles service event removal.
            </summary>
            <param name="status">The service status.</param>
            <param name="value">The event.</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.#ctor(System.Object,Ximura.XimuraComponentServiceHelper.ServiceCallBack,Ximura.XimuraComponentServiceHelper.ServiceCallBack,Ximura.XimuraComponentServiceHelper.ServiceCallBack,Ximura.XimuraComponentServiceHelper.ServiceCallBack)">
            <summary>
            This is the default constructor.
            </summary>
            <param name="delInternalStart"></param>
            <param name="delInternalStop"></param>
            <param name="delInternalPause"></param>
            <param name="delInternalContinue"></param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.Start">
            <summary>
            This method starts the service based on the default async settings
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.Pause">
            <summary>
            This method pauses the service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.Continue">
            <summary>
            This method continues a paused service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.Stop">
            <summary>
            This method stops a running service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.InternalStart">
            <summary>
            This is the method to override which should start your service.
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.InternalStop">
            <summary>
            This is the method to override which should stop your service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.InternalPause">
            <summary>
            This is the method to override which should pause your service
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.InternalContinue">
            <summary>
            This is the method to override which should continue your service 
            if it has been paused
            </summary>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ProcessEvent(Ximura.Helper.ServiceEvent)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ProcessEvent(Ximura.Helper.ServiceEvent,Ximura.ServiceEventArgs)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
            <param name="e">The ServiceEventArgs object to pass</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ProcessEvent(Ximura.Helper.ServiceEvent,System.Object,Ximura.ServiceEventArgs)">
            <summary>
            This method fires an event to all parties that have registered with the ServiceEvent
            </summary>
            <param name="theEvent">The ServiceEvent Type to fire</param>
            <param name="sender">The sended object to pass</param>
            <param name="e">The ServiceEventArgs object to pass</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ComponentsStatusChange(Ximura.XimuraServiceStatusAction,System.Collections.ICollection)">
            <summary>
            This method can start, stop, resume or pause a group of components of the specified type.
            </summary>
            <param name="action">The action required</param>
            <param name="components">The components to which the action should be provided</param>
            <param name="componentType">The component type.</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ComponentsStatusChange(Ximura.XimuraServiceStatusAction,System.Collections.ICollection,System.Type)">
            <summary>
            This method can start, stop, resume or pause a group of components of the specified type.
            </summary>
            <param name="action">The action required</param>
            <param name="components">The components to which the action should be provided</param>
            <param name="componentType">The component type.</param>
        </member>
        <member name="M:Ximura.XimuraComponentServiceHelper.ComponentsStatusChange(Ximura.XimuraServiceStatusAction,System.Collections.ICollection,System.Type,Ximura.XimuraComponentServiceHelper.ComponentStatusChangeNotify,Ximura.XimuraComponentServiceHelper.ComponentStatusChangeNotify)">
            <summary>
            This method can start, stop, resume or pause a group of components of the specified type.
            </summary>
            <param name="action">The action required</param>
            <param name="components">The components to which the action should be provided</param>
            <param name="componentType">The component type.</param>
        </member>
        <member name="P:Ximura.XimuraComponentServiceHelper.ServiceStatus">
            <summary>
            This method will return the current service status
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentServiceHelper.ServiceEnabled">
            <summary>
            This property determines whether the service component can be started.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentServiceHelper.Site">
            <summary>
            This override property calls the SiteChanged method when the site changes
            for the component.
            </summary>
        </member>
        <member name="P:Ximura.XimuraComponentServiceHelper.DesignMode">
            <summary>
            This method identifies whether it is design mode.
            </summary>
        </member>
        <member name="T:Ximura.XimuraComponentServiceHelper.ComponentStatusChangeNotify">
            <summary>
            This delegate is used to notify for changes to a child service.
            </summary>
            <param name="action">The action.</param>
            <param name="service">Thse service notification.</param>
        </member>
        <member name="T:Ximura.XimuraComponentServiceHelper.ServiceCallBack">
            <summary>
            This is the delegate used for service callbacks.
            </summary>
        </member>
        <member name="T:Ximura.Server.SCMCapacityException">
            <summary>
            Summary description for SCMCapacityException.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMCapacityException.#ctor">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMCapacityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMCapacityException.ResponseCode">
            <summary>
            This is the default response code for the exception.
            </summary>
        </member>
        <member name="T:Ximura.Server.LoggingManagerPerformance">
            <summary>
            This is the performance counter for the logging system command. By default the logging manager does not connect
            to the performance architecture due to the fact that this service starts before the performance manager. This class is a stub.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManagerPerformance.#ctor">
            <summary>
            This is the default constructor for the performance object.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.FileSystemPersistenceManager`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.FileSystemPersistenceManager`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Persistence.CacheCollectionHelperUriTID">
            <summary>
            This helper class can be used to hold a set of Uri - Cid/Vid references.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheCollectionHelperUriTID.#ctor">
            <summary>
            This is the default constrcutor for the Uri collection cache.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheCollectionHelperUriTID.ResolveReference(System.Uri,System.Guid@,System.Guid@)">
            <summary>
            This method resolves the Uri and returns the cid and vid. If the
            cid and vid are no already in the system, the collection will create 
            a new key pair.
            </summary>
            <param name="id">The uri to resolve.</param>
            <param name="cid">The cid for the uri.</param>
            <param name="vid">The vid for the uri.</param>
            <returns>Returns true if a new record is created.</returns>
        </member>
        <member name="M:Ximura.Persistence.CacheCollectionHelperUriTID.ResolveReference(System.Guid,System.Uri@)">
            <summary>
            This method returns the Uri data for the CID.
            </summary>
            <param name="cid">The Cid to resolve.</param>
            <param name="id">The resolved Uri or null if the cid cannot be resolved.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheCollectionHelperUriTID.UpdateReference(System.Uri,System.Guid)">
            <summary>
            This method updates the reference value.
            </summary>
            <param name="id">The path.</param>
            <param name="vid">The version update to update to.</param>
            <returns>Returns true if updated.</returns>
        </member>
        <member name="T:Ximura.Command.AppCommandProcess">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
        </member>
        <member name="T:Ximura.Command.AppCommandProcess`3">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
        </member>
        <member name="T:Ximura.Command.AppCommandProcess`6">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`3.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Command.AppCommandProcess`2">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`2.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandProcess`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Server.AppServerConfigSettingsType">
            <summary>
            This enumeration determines which collection the AppSettings exposes through its collection.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigSettingsType.ControlCollection">
            <summary>
            This should only expose the private control settings
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigSettingsType.CommandCollection">
            <summary>
            This should only expose the command settings
            </summary>
        </member>
        <member name="T:Ximura.Server.AuthenticationException">
            <summary>
            The AuthenticationException is thrown by an Application when a user authentication attempt fails
            </summary>
        </member>
        <member name="M:Ximura.Server.AuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.AuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.AuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.AuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.IXimuraFSMConfigSH">
            <summary>
            IXimuraFSMConfigSH is used to provide specific settings for the context pool.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMConfigSH.PoolMin">
            <summary>
            This is the context pool minimum value. 
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMConfigSH.PoolMax">
            <summary>
            This is the context pool maximum value. 
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMConfigSH.PoolPrefer">
            <summary>
            This is the context pool preferred value. 
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMConfigSH.ContextTimeOutInMs">
            <summary>
            This is the timeout value for the context. Requests which exceed this value will be cancelled.
            </summary>
        </member>
        <member name="T:Ximura.Command.FSMCompletionJobContract`9">
            <summary>
            This overriden FSM is for processes that require Completion job support.
            </summary>
            <typeparam name="RQ">The incoming request type.</typeparam>
            <typeparam name="RS">The outgoing response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The context type.</typeparam>
            <typeparam name="ST">The FSM state type.</typeparam>
            <typeparam name="SET">The FSM Context Settings.</typeparam>
        </member>
        <member name="F:Ximura.Command.FSMCompletionJobContract`9.jobFSMCompleteCallBack">
            <summary>
            This is the job completion callback delegate.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.ContextInitialize(`4,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method allows generic operations to be performed on the new context.
            </summary>
            <param name="newContext">The new context for the incoming request.</param>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming generic data.</param>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.internalOnFSMCompletionJobComplete(Ximura.Server.SecurityManagerJob,Ximura.Server.CompletionJobStatus,System.Object)">
            <summary>
            This method is called when the job is complete.
            </summary>
            <param name="parentJob">The parentJob.</param>
            <param name="status">The completion status.</param>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Command.FSMCompletionJobContract`9.OnFSMCompletionJobComplete(`4,Ximura.Server.SecurityManagerJob,Ximura.Server.CompletionJobStatus)">
            <summary>
            This virtual method should be overriden to capture callback responses.
            </summary>
            <param name="context">The job context.</param>
            <param name="status">The status of the completion job.</param>
        </member>
        <member name="T:Ximura.Server.SessionToken">
            <summary>
            SessionToken is used to validate session requests.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.Server.SessionToken.VerifyJobSignature(Ximura.Server.JobBase)" -->
        <member name="T:Ximura.Server.CompletionJob">
            <summary>
            The CompletionJob object is used to run multiple parallel jobs within a 
            command and then to signal using a single callback when all the jobs
            have completed, or when the job has timed out.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.InitializeJob">
            <summary>
            This overriden method is used to initialize any variables before the initial
            Reset() is called.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Reset">
            <summary>
            This private method reset the Completion job.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Initialize(Ximura.Server.SecurityManagerJob,Ximura.Server.CompletionJobCallBack,System.Object)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Initialize(Ximura.Server.SecurityManagerJob,Ximura.Server.CompletionJobCallBack,System.Object,System.Boolean,System.Int32)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
            <param name="AutoExecute">This method identifies whether the jobs will execute automatically and only signal after the complete method has been set.</param>
            <param name="throttleThreshold">The throttle threshold is the amount of queued jobs that 
            will trigger the throttle flag to be set.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Initialize(Ximura.Server.SecurityManagerJob,Ximura.Server.CompletionJobCallBack,System.Object,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
            <param name="AutoExecute">This method identifies whether the jobs will execute automatically and only signal after the complete method has been set.</param>
            <param name="throttleThreshold">The throttle threshold is the amount of queued jobs that 
            will trigger the throttle flag to be set.</param>
            <param name="trace">The trace flag determines whether the completion job should submit trace
            data during the job processing.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.OnTimeOut(System.Object)">
            <summary>
            This method is called when the job times out.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.SubmitComplete">
            <summary>
            This method can be called to signal that a completion job is complete.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Abort">
            <summary>
            This method aborts the completion job.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Execute">
            <summary>
            This method executes all the containing jobs.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Execute(System.Int32)">
            <summary>
            This method executes all the containing jobs.
            </summary>
            <param name="Timeout">The timeout period in which the job should execute in its entirity.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Execute(System.Int32,System.Boolean)">
            <summary>
            This method executes all the containing jobs.
            </summary>
            <param name="Timeout">The timeout period in which the job should execute in its entirity.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.SubmitJob(System.Guid)">
            <summary>
            This method submits the job.
            </summary>
            <param name="jobID"></param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.HasErrors">
            <summary>
            This method returns true if the completion job has errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.DependencyIDHasErrors(System.String)">
            <summary>
            This method returns true if the dependency ID has been set in an error state.
            </summary>
            <param name="dependencyID"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ResetDependencyID(System.String)">
            <summary>
            This method will reset the dependency.
            </summary>
            <param name="dependencyID"></param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ThrottleSet">
            <summary>
            This method sets the throttle ManualResetEven and allows any threads held in the Throttle 
            method to proceed.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ThrottleReset">
            <summary>
            This method reset the throttle and holds any threads which call the Throttle method.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.IsThrottling">
            <summary>
            This method returns true if 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Throttle">
            <summary>
            This method will suspend the entry thread until the throttling queue has reached 0.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessTimeOuts">
            <summary>
            This method is used to identify any jobs that have timed out and are blocking the queue.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJob.Throttle(System.Int32)">
            <summary>
            This method will suspend the entry thread until 
            the completion job is no longer throttling.
            </summary>
            <param name="timeOut">The time out in milliseconds specifying 
            the maximum amount of time that the thread should wait.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsyncWithDependency(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsyncWithDependency(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String,Ximura.DependencyValidateRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String,Ximura.DependencyValidateRSCallback)">
            <summary>
            This overriden method adds a job to the collection. Jobs with a dependency ID will be
            queued behind earlier jobs with the same ID.
            </summary>
            <param name="newJobID">The job identifier.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The callback.</param>
            <param name="ProgressCallback">The progress callback.</param>
            <param name="priority">The job priority.</param>
            <param name="dependencyID">The dependency identifier.</param>
            <param name="ValidateRSCallBack"></param>
            <returns>The job ID.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This method redirects any job requests without a dependency ID to this code with this callback.
            </summary>
            <param name="jobID">The job identifier.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The callback.</param>
            <param name="ProgessCallback">The progress callback.</param>
            <param name="priority">The job priority.</param>
            <returns>The job ID.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.RegisterLinkedJob(System.String,System.Guid)">
            <summary>
            This method links the dependency job in the dependency tree.
            </summary>
            <param name="dependencyID">The dependency ID.</param>
            <param name="newJobID">The new job.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.RQCallback(System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This is the internal callback point for the associated jobs.
            </summary>
            <param name="sender">The sender. This is usually null.</param>
            <param name="args">The job arguments.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.RemoveJob(System.Guid,System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This method removes a job from the completion job.
            </summary>
            <param name="oldJobID">The old job to remove.</param>
            <param name="sender">The sender.</param>
            <param name="args">The sender arguments.</param>
            <returns>Returns true if the job was successfully removed.</returns>
        </member>
        <member name="M:Ximura.Server.CompletionJob.RemoveErrorJob(Ximura.Server.JobHolder)">
            <summary>
            This method will remove a job from the collection and flag it as an error.
            </summary>
            <param name="errorJob">THe job to remove.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.PurgeJob(Ximura.Server.JobHolder)">
            <summary>
            This method will purge the job from the queue.
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Ximura.Server.CompletionJob.CheckCompletionJobComplete">
            <summary>
            This method completes the job if it is not already completed.
            </summary>
        </member>
        <member name="P:Ximura.Server.CompletionJob.Status">
            <summary>
            This is the completion job status.
            </summary>
        </member>
        <member name="P:Ximura.Server.CompletionJob.State">
            <summary>
            This is the job object state.
            </summary>
        </member>
        <member name="P:Ximura.Server.CompletionJob.JobBreakdown">
            <summary>
            This method returns a text breakdown of the job process.
            </summary>
        </member>
        <member name="T:Ximura.Server.SCMServerErrorException">
            <summary>
            Summary description for SCMAuthenticationException.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMServerErrorException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMServerErrorException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMServerErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMServerErrorException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Server.DispatcherJobPriorityQueue">
            <summary>
            The DispatcherJobPriorityQueue is a threadsafe priority queue which 
            holds all the job requests for the dispatcher.
            </summary>
        </member>
        <member name="T:Ximura.Server.IXimuraDispatcherJobPriorityQueue">
            <summary>
            The dispatcher priority queue interface is used to implement a specific queuing algortihm,
            depending on the type of work being done by the system.
            </summary>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Push(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method pushes a job on to the priority queue with the 
            normal priority.
            </summary>
            <param name="job">The new job</param>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Push(Ximura.Server.SecurityManagerJob,Ximura.JobPriority)">
            <summary>
            This method pushes a job on to the priority queue.
            </summary>
            <param name="job">The job.</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Pop">
            <summary>
            Gets the highest priority job and returns it.
            </summary>
            <returns>
            The highest priority job or null if there are no jobs 
            in the queue.
            </returns>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Peek">
            <summary>
            This method allows you to check the next object in the queue
            without removing it.
            </summary>
            <returns>The next object in the queue, or null is the queue is empty.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Contains(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method identifies whether the job is contained in the queue.
            </summary>
            <param name="value">The job.</param>
            <returns>Returns true if the job exists in the queue.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Clear">
            <summary>
            This method clears the queue of all jobs.
            </summary>
        </member>
        <member name="P:Ximura.Server.IXimuraDispatcherJobPriorityQueue.Count">
            <summary>
            This returns the number of items in the queue.
            </summary>
        </member>
        <member name="F:Ximura.Server.DispatcherJobPriorityQueue.JobList">
            <summary>
            This hashtable is used to hold the job list.
            </summary>
        </member>
        <member name="F:Ximura.Server.DispatcherJobPriorityQueue.QueueList">
            <summary>
            This is the inner array list used to hold the queue information.
            </summary>
        </member>
        <member name="F:Ximura.Server.DispatcherJobPriorityQueue.Comparer">
            <summary>
            This is the internal comparer.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.#ctor(Ximura.Server.DelGetCapacity)">
            <summary>
            The main constructor for the BinaryPriorityQueue.
            </summary>
            <param name="comparer">The comparer to use.</param>
            <param name="Capacity">The initial capacity of the queue.</param>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Dispose">
            <summary>
            This method disposes the class.
            </summary>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Dispose(System.Boolean)">
            <summary>
            This is the internal dispose method.
            </summary>
            <param name="disposing">The primary disposing method.</param>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Push(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method pushes a job on to the priority queue with the 
            normal priority.
            </summary>
            <param name="job">The new job</param>
            <returns>The current position on the queue.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Push(Ximura.Server.SecurityManagerJob,Ximura.JobPriority)">
            <summary>
            This method pushes a job on to the priority queue.
            </summary>
            <param name="job">The job.</param>
            <param name="priority">The job priority.</param>
            <returns>The current position on the queue.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Pop">
            <summary>
            Gets the highest priority job and returns it.
            </summary>
            <returns>
            The highest priority job or null if there are no jobs 
            in the queue.
            </returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Peek">
            <summary>
            This method allows you to check the next object in the queue
            without removing it.
            </summary>
            <returns>The next object in the queue, or null is the queue is empty.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Contains(Ximura.Server.SecurityManagerJob)">
            <summary>
            This method identifies whether the job is contained in the queue.
            </summary>
            <param name="value">The job.</param>
            <returns>Returns true if the job exists in the queue.</returns>
        </member>
        <member name="M:Ximura.Server.DispatcherJobPriorityQueue.Clear">
            <summary>
            This method clears the queue of all jobs.
            </summary>
        </member>
        <member name="P:Ximura.Server.DispatcherJobPriorityQueue.Count">
            <summary>
            This returns the number of items in the queue.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSPMPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Server.scContentDataStore">
            <summary>
            The Content Data Store shortcut collection
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.ID">
            <summary>
            This is the command ID
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.Create">
            <summary>
            The Save command
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.Read">
            <summary>
            The Load command
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.Update">
            <summary>
            The Load command
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.Delete">
            <summary>
            The Update command
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.VersionCheck">
            <summary>
            The VersionCheck command
            </summary>
        </member>
        <member name="P:Ximura.Server.scContentDataStore.Custom">
            <summary>
            The custom command
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerLoggerAttribute">
            <summary>
            The XimuraAppServerAttribute attribute is used to set friendly names and descriptions for
            the server which will be used in the server performance counters.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerLoggerAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerLoggerAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="T:Ximura.Server.SessionManager">
            <summary>
            SessionManager is the default class that all Session Manager services 
            should derive from. The SessionManager class authenticates and provides 
            session objects to requesting parties.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constructor used by the Ximura Application model.
            </summary>
            <param name="container">The control container.</param>
        </member>
        <member name="M:Ximura.Server.SessionManager.InternalStart">
            <summary>
            This override creates the session token collection and pools.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionManager.InternalStop">
            <summary>
            This override cleats the session token collection and session token pool.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionManager.ServicesProvide">
            <summary>
            This override adds the IXimuraSessionManagerService service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionManager.ServicesRemove">
            <summary>
            This override removes the IXimuraSessionManagerService service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionManager.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This override created the session agent.
            </summary>
            <param name="holder"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.SessionAgentSQLServer`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constructor used by the Ximura Application model.
            </summary>
            <param name="container">The control container.</param>
        </member>
        <member name="T:Ximura.Server.JobHolder">
            <summary>
            The job holder class is used to reference the requests in the completion job.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mPriority">
            <summary>
            The job priority.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mData">
            <summary>
            The request data.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mRSCallback">
            <summary>
            The request completion callback.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mProgressCallback">
            <summary>
            The request progress callback.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mjobID">
            <summary>
            This is the child job ID.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.Executed">
            <summary>
            This boolean method indicates whether the request has been executed.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mNextJob">
            <summary>
            This is the next job in the chain.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mLastJob">
            <summary>
            This is the last job in the chain.
            </summary>
        </member>
        <member name="F:Ximura.Server.JobHolder.mDependencyID">
            <summary>
            This is the job holder dependency ID.
            </summary>
        </member>
        <member name="M:Ximura.Server.JobHolder.#ctor(System.Nullable{System.Guid},Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This is the internal constructor for the job.
            </summary>
            <param name="jobID">The job ID.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The request progress callback.</param>
            <param name="ProgressCallback">The request progress callback.</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Server.JobHolder.#ctor(System.Nullable{System.Guid},Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.Nullable{System.Guid},System.Nullable{System.Guid},Ximura.DependencyValidateRSCallback)">
            <summary>
            This is the internal constructor for the job.
            </summary>
            <param name="jobID">The job ID.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The request progress callback.</param>
            <param name="ProgressCallback">The request progress callback.</param>
            <param name="priority">The job priority.</param>
            <param name="NextJob">The next job for linked jobs.</param>
            <param name="LastJob">The last job for linked jobs.</param>
        </member>
        <member name="M:Ximura.Server.JobHolder.Reset">
            <summary>
            This method should be overriden to provide specific clean up code.
            Specifically, any delegates references in the object should be set to null;
            </summary>
            <param name="disposing">This parameter is true if the call is from the disposable interface.</param>
        </member>
        <member name="M:Ximura.Server.JobHolder.IDBuffer">
            <summary>
            Not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Server.JobHolder.SessionID">
            <summary>
            The session ID.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.ID">
            <summary>
            The job ID.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.RSCallback">
            <summary>
            The Response callback.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.ProgressCallback">
            <summary>
            The progress callback.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.Priority">
            <summary>
            The job priority.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.Signature">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.Expired">
            <summary>
            This property indicates whether the job has exceeded its timeslice.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.NextJob">
            <summary>
            This is the next job in the chain.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.LastJob">
            <summary>
            This is the last job in the chain.
            </summary>
        </member>
        <member name="P:Ximura.Server.JobHolder.DependencyID">
            <summary>
            This is the job holder dependency ID.
            </summary>
        </member>
        <member name="T:Ximura.Server.NullLoggerAgent">
            <summary>
            This is the empty logging provider. This class does nothing but is provided
            to allow logging code to be inserted in to a command, which can be executed when
            no provider is available.
            </summary>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.#ctor">
            <summary>
            We specify a private constructor as we only require a single instance
            of this class across a domain.
            </summary>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.NoLog">
            <summary>
            This static method is used to retrieve the single instance of the null
            logging provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.AcceptCategory(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            This method informs the logging manager whether the logger will log for 
            this particular category. The null logger will always return false.
            </summary>
            <param name="category">The category to log.</param>
            <returns>The method always returns false.</returns>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.Initialize(Ximura.IXimuraLoggerSettings)">
            <summary>
            This method is used for initialization. For the null logger this
            does not do anything.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.WriteLine(System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.Write(System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="M:Ximura.Server.NullLoggerAgent.Write(System.String,System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="T:Ximura.Persistence.ICDSPersistenceManagerConfigSH">
            <summary>
            This interface is used to register configuration services to protocols within a
            ProtocolServerCommand container.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ICDSPersistenceManagerConfigSH.AccessRight(System.String)">
            <summary>
            Access Right
            </summary>
            <param name="Type">access type</param>
            <returns>access right</returns>
        </member>
        <member name="M:Ximura.Persistence.ICDSPersistenceManagerConfigSH.ResolveConnectionMapping(System.String)">
            <summary>
            Resolve Connection Mapping for specific Catalog
            </summary>
            <param name="Catalog">catalog Name</param>
            <returns>connection mapping string</returns>
        </member>
        <member name="T:Ximura.Persistence.CDSSelfCall">
            <summary>
            This enumeration identifies the type of self call command for the CDS to process.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSelfCall.NotSet">
            <summary>
            The value has not been set, this will return an error.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSelfCall.CacheInitialize">
            <summary>
            The enumeration is a cache initialization command
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSSelfCall.CacheUpdate">
            <summary>
            The enumeration is a cache update command
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSHelperDirect">
            <summary>
            This class is used to reference the CDS directly within the CDS itself. It allows Persistence Managers to call other Persistence Managers
            from the same request without the need to call the dispatcher.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSHelperDirect.#ctor(Ximura.IXimuraSessionRQ)">
            <summary>
            This is the main constructor.
            </summary>
            <param name="session">The session object to wrap.</param>
        </member>
        <member name="T:Ximura.Server.XimuraApplicationIDAttribute">
            <summary>
            The XimuraApplicationIDAttribute attribute is used to define a unique Guid for the 
            server application.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraApplicationIDAttribute.#ctor(System.String)">
            <summary>
            The Attributes identifies an Ximura Application.
            </summary>
            <param name="ApplicationID">The ID of the Ximura application.</param>
        </member>
        <member name="P:Ximura.Server.XimuraApplicationIDAttribute.ApplicationID">
            <summary>
            This is the ID of the Ximura application.
            </summary>
        </member>
        <member name="T:Ximura.Command.FSMExtenderCommand`6">
            <summary>
            The state extender command allows third parties to extend exisiting finite state machines through a modular architecture.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="F:Ximura.Command.FSMExtenderCommand`6.mStateExtender">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand`6.ServicesReference">
            <summary>
            This override retrieves a reference to the IXimuraStateExtenderService object.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand`6.ServicesDereference">
            <summary>
            This override removes the reference to the IXimuraStateExtenderService object.
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.FSMExtenderCommand.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Server.SessionAgentStandard">
            <summary>
            The session manager is the default session manager that is responsible for system session management. 
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentStandard.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constructor used by the Ximura Application model.
            </summary>
            <param name="container">The control container.</param>
        </member>
        <member name="T:Ximura.Server.SessionProfileLevel">
            <summary>
            This enumeration is used by the security manager to identify the authorization
            level of a session. 
            </summary>
        </member>
        <member name="F:Ximura.Server.SessionProfileLevel.Unauthorized">
            <summary>
            The session is unathorized and will only have the default security rights
            </summary>
        </member>
        <member name="F:Ximura.Server.SessionProfileLevel.Authorized">
            <summary>
            The session is authorized based on the user ID.
            </summary>
        </member>
        <member name="T:Ximura.Server.PerformanceAgentBase`1">
            <summary>
            This is the base class for performance agents.
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceAgentBase`1.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.PerformanceAgentBase`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Server.LoggingManager">
            <summary>
            The LoggingManager object creates the set of loggers for the application
            as specified in the configuration file.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The default Ximura Application constructor
            </summary>
            <param name="container">The container the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.LoggingManager.ServicesProvide">
            <summary>
            This override adds the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManager.ServicesRemove">
            <summary>
            This override removes the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManager.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This method creates the logging agent.
            </summary>
            <param name="holder">The agent holder.</param>
            <returns>Returns the logging agent.</returns>
        </member>
        <member name="T:Ximura.Persistence.CDSCacheManagerBridge">
            <summary>
            The CDS Cache manager bridge is used to provide common services to the cache manager.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSCacheManagerBridge.mCacheSupport">
            <summary>
            This is the content type cache settings.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSCacheManagerBridge.#ctor">
            <summary>
            This is the default constructor for the bridge.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSCacheManagerBridge.Poll">
            <summary>
            This method is called to poll all cache managers. This polling can be used to archive or delete expired content.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ContentIdentifier">
            <summary>
            This structure holds the collection of content ID and their associated methods.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.ExtractTypeID(System.Type)">
            <summary>
            This method resolves the Type ID from the XimuraContentTypeIDAttribute attribute.
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.ExtractContentID(System.Type)">
            <summary>
            This method resolves the content ID from the XimuraContentIDAttribute attribute.
            </summary>
            <param name="contentType"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.AQNTruncate(System.String)">
            <summary>
            This method truncates the Assembly Qualified Name (AQN), in to the distinct
            format without the version number.
            </summary>
            <param name="aqn">The string.</param>
            <returns>The truncated string.</returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(System.Type)">
            <summary>
            This is the type constructor. This constructor can be used by content items that implement
            both the XimuraContentTypeIDAttribute and XimuraContentIDAttribute attributes.
            </summary>
            <param name="contentType">The content type.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(System.Type,System.Guid)">
            <summary>
            This is the type constructor. This constructor can be used by content items that implement
            both the XimuraContentTypeIDAttribute and XimuraContentIDAttribute attributes.
            </summary>
            <param name="contentType">The content type.</param>
            <param name="contentID">The content ID.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(System.Type,System.Guid,System.Guid)">
            <summary>
            This is the type constructor. This constructor can be used by content items that implement
            both the XimuraContentTypeIDAttribute and XimuraContentIDAttribute attributes.
            </summary>
            <param name="contentType">The content type.</param>
            <param name="contentID">The content ID.</param>
            <param name="versionID">The version ID.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(Ximura.Data.IXimuraContent)">
            <summary>
            This is the content constructor.
            </summary>
            <param name="data">The content data.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(System.Guid,System.Guid,System.Guid,System.Type)">
            <summary>
            This is the specific constructor.
            </summary>
            <param name="tid">The content type id.</param>
            <param name="cid">The content id.</param>
            <param name="vid">The content version id.</param>
            <param name="contentType">This the content object type.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.#ctor(System.Guid,System.Guid,System.Guid,System.String)">
            <summary>
            This is the specific constructor.
            </summary>
            <param name="tid">The content type id.</param>
            <param name="cid">The content id.</param>
            <param name="vid">The content version id.</param>
            <param name="contentType">This the content object type.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.Cacheable">
            <summary>
            This helper method identifies whether the content can be cached. 
            It basically returns true if the Guid is not empty.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.CreateItemIDString">
            <summary>
            This method returns a unique identifier string for the content collection.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.Equals(System.Object)">
            <summary>
            This method combines the other ContentIdentifier with this one.
            </summary>
            <param name="other">The content identifier to compare against.</param>
            <returns>Returns true if the identifiers are equal.</returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.Equals(Ximura.Persistence.ContentIdentifier)">
            <summary>
            This method combines the other ContentIdentifier with this one.
            </summary>
            <param name="other">The content identifier to compare against.</param>
            <returns>Returns true if the identifiers are equal.</returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.ToString">
            <summary>
            This override string identifies the content uniquely.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentIdentifier.GetHashCode">
            <summary>
            This override is required for some reason.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.Empty">
            <summary>
            This is the empty identifier;
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.TypeID">
            <summary>
            This is the content type ID.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.ContentID">
            <summary>
            This is the content ID>
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.VersionID">
            <summary>
            This is the version ID
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.ContentType">
            <summary>
            This is the content type>
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.InternalType">
            <summary>
            This is the content type
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.ContentTypeAQNTruncated">
            <summary>
            This is the truncated object type.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentIdentifier.CombinedID">
            <summary>
            This is the combined byte array.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ContentDataStoreSubCommand">
            <summary>
            This enumeration identifies the subcommands for the Content Data Store.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStoreSubCommand.CacheManagersPoll">
            <summary>
            This subcommand polls the cache managers.
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerAttribute">
            <summary>
            The XimuraAppServerAttribute attribute is used to set friendly names and descriptions for
            the server which will be used in the server performance counters.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerAttribute.#ctor(System.String)">
            <overloads></overloads>
            <summary>
            This Attributes identifies an Ximura Application.
            </summary>
            <param name="AppServerName">The ID of the Ximura application.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerAttribute.#ctor(System.String,System.String)">
            <summary>
            The Attributes identifies an Ximura Application.
            </summary>
            <param name="AppServerName">The ID of the Ximura application.</param>
            <param name="AppDescription">A short description of what the application does.</param>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerAttribute.DomainRequired">
            <summary>
            This property returns true if the application requires a seperate 
            domain to run in.
            </summary>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerAttribute.AppServerName">
            <summary>
            The application instance of this specific part of an application.
            </summary>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerAttribute.AppDescription">
            <summary>
            The Description of the application. This is used in the performance counter.
            </summary>
        </member>
        <member name="T:Ximura.Command.State">
            <summary>
            State is part of the Finite State Machine.
            </summary>
        </member>
        <member name="M:Ximura.Command.State.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.State.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Command.State.ToString">
            <summary>
            This override is primarily used in debugging to make the state easy to identify.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Command.State.InternalStart">
            <summary>
            This method starts the AppServerProcess and registers any services
            </summary>
        </member>
        <member name="M:Ximura.Command.State.InternalStop">
            <summary>
            The method stops the AppServerProcess and unregisters and services
            </summary>
        </member>
        <member name="P:Ximura.Command.State.Identifier">
            <summary>
            This is the state identifier string.
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManagerPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Command.AppCommandStandard">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
        </member>
        <member name="T:Ximura.Command.AppCommandStandard`3">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
        </member>
        <member name="T:Ximura.Command.AppCommandStandard`6">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`3.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Command.AppCommandStandard`2">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`2.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Command.AppCommandStandard`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Server.IXimuraSecurityManagerSession">
            <summary>
            This interface is shared with a session object and enables it to make system requests.
            </summary>
        </member>
        <member name="M:Ximura.Server.IXimuraSecurityManagerSession.JobProcess(Ximura.Server.JobBase,System.Boolean)">
            <summary>
            This method is used to submit jobs to the security manager.
            </summary>
            <param name="jobRQ">The job.</param>
            <returns>The job Guid.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraSecurityManagerSession.JobCancel(System.Guid)">
            <summary>
            This method cancels a pending request.
            </summary>
            <param name="jobID">The job ID to cancel.</param>
        </member>
        <member name="T:Ximura.Server.IXimuraCommandBridgeService">
            <summary>
            This method allows control services to add services to the command bridge.
            </summary>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceAdd(System.Type,System.Object)">
            <summary>
            This method registers a service with the command container.
            </summary>
            <param name="service">The service type to add.</param>
            <param name="serviceobj">The service object.</param>
            <returns>Returns true is the service was successfully inserted.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceAdd``1(``0)">
            <summary>
            This method registers a service with the command container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <param name="serviceobj">The service object.</param>
            <returns>Returns true is the service was successfully inserted.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceGet(System.Type)">
            <summary>
            This method returns a registered service from the command container.
            </summary>
            <param name="service">The service</param>
            <returns>Returns the service object or null if the service does not exist.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceGet``1">
            <summary>
            This method returns a registered service from the command container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>Returns the service object or null if the service does not exist.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceRemove(System.Type)">
            <summary>
            This method will remove a registered service from the command container.
            </summary>
            <param name="service">The service to remove.</param>
            <returns>Returns true is the service was successfully removed.</returns>
        </member>
        <member name="M:Ximura.Server.IXimuraCommandBridgeService.CommandBridgeServiceRemove``1">
            <summary>
            This method will remove a registered service from the command container.
            </summary>
            <typeparam name="T">The service type.</typeparam>
            <returns>Returns true is the service was successfully removed.</returns>
        </member>
        <member name="T:Ximura.Server.XimuraSessionManagerAttribute">
            <summary>
            The XimuraAppServerAttribute attribute is used to set friendly names and descriptions for
            the server which will be used in the server performance counters.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.Type)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.Type,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraSessionManagerAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="T:Ximura.Command.StateMetadataContainer`1">
            <summary>
            This is the Protocol state meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Command.StateMetadataContainer`1.Enabled">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateMetadataContainer`1.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Command.StateMetadataContainer`1.#ctor(`0)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theState">The state object.</param>
        </member>
        <member name="P:Ximura.Command.StateMetadataContainer`1.StateID">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Command.StateMetadataContainer`1.State">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Command.StateMetadataContainer`1.StateIDNext">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Command.StateMetadataContainer`1.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraFSMContextExtender`5">
            <summary>
            IXimuraFSMContextExtender generic interface.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMContextExtender`5.ContextAvailable">
            <summary>
            This boolean value indicates whether there are contexts available
            in the pool for the default context type.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMContextExtender`5.ContextsCurrent">
            <summary>
            This property returns the number of contexts currently active for the default type.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraFSMContextExtender`5.ContextGet">
            <summary>
            This method returns a new context of the default type.
            </summary>
            <returns>A Context object or null if there are no 
            objects available.</returns>
        </member>
        <member name="M:Ximura.IXimuraFSMContextExtender`5.ContextReturn(`0)">
            <summary>
            This method returns a context back to the pool.
            </summary>
            <param name="conn">The context to return.</param>
        </member>
        <member name="T:Ximura.Server.SessionJob">
            <summary>
            SessionJob is used to hold the job requests while they are being processed.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionJob.#ctor">
            <summary>
            This is the internal constructor used by the object pool.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionJob.Reset">
            <summary>
            This method is used to reset the session job to its initial state.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionJob.Initialize(System.Guid,System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.Server.JobSignature,Ximura.JobPriority)">
            <summary>
            This method initializes the SessionJob.
            </summary>
            <param name="sessionid">The session id.</param>
            <param name="id">The job id.</param>
            <param name="data">The envelope data to process.</param>
            <param name="RSCallback">The response call back delegate. This will
            be used to respond after the job is complete.</param>
            <param name="ProgressCallback">The progress call back delegate. 
            This should be null if callbacks are not required.</param>
            <param name="signature">The job signature.</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Server.SessionJob.WaitForCompletion">
            <summary>
            This method will hold the current thread until the job is complete
            or this request times out.
            </summary>
            <returns>True if the job has completed.</returns>
        </member>
        <member name="M:Ximura.Server.SessionJob.WaitForCompletion(System.Int32)">
            <summary>
            This method will hold the current thread until the job is complete
            or this request times out.
            </summary>
            <param name="timeout">The time out.</param>
            <returns>True if the job has completed.</returns>
        </member>
        <member name="M:Ximura.Server.SessionJob.SignalCompletion">
            <summary>
            This method will signal completion and allow the blocked thread to 
            continue.
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionJob.SynchRQ">
            <summary>
            This property returns true if this is a synchronous request.
            </summary>
        </member>
        <member name="P:Ximura.Server.SessionJob.RequiresProgressUpdates">
            <summary>
            This property returns true is the job requires Progress Updates
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ResourceCatalogPersistenceManager`3">
            <summary>
            This state allows embedded resources to be acessed using the Persistence Management architecture.
            You should override the ResourceCatalog property to return the location of the resource catalog binary.
            Alternatively, you can override ResourceStream and returns a stream containing the binary data for the catalog.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ResourceCatalogPersistenceManager`3.mDomainData">
            <summary>
            This collection holds the data for the specific domain datasets.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.ResourceCatalogInitialize">
            <summary>
            This method initializes the catalog for the Resource based Persistence Manager.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.Read(Ximura.Persistence.CDSContext)">
            <summary>
            This method is called when requesting the controller script.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves the resource reference to its constituent IDs
            </summary>
            <param name="context">The current CDS context.</param>
            <returns>Returns true if the resource was successfully resolved.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalogPersistenceManager`3.ResolveReference(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves the entity reference from the resource catalog.
            </summary>
            <param name="context">The current CDS context.</param>
            <returns>Returns true as this is the authoritize destination for resource based references.</returns>
        </member>
        <member name="P:Ximura.Persistence.ResourceCatalogPersistenceManager`3.ResourceCatalogStream">
            <summary>
            This is the resource stream.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ResourceCatalogPersistenceManager`3.ResourceCatalogLocation">
            <summary>
            This method returns the base resource location Uri.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ResourceCatalogPersistenceManager`3.Catalog">
            <summary>
            This is the resource catalog.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ResourceCatalog">
            <summary>
            This class holds the resource collection for the Resource based Persistence Manager.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalog.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalog.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalog.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalog.ResolveObject(System.Guid,System.Boolean,System.String@,System.Guid@)">
            <summary>
            This method resolves an embedded object location from the VID.
            </summary>
            <param name="vid">The version ID of the object.</param>
            <param name="id">The object resource id.</param>
            <param name="path">The object resource location.</param>
            <returns>Returns true if the object has been sucessfully resolved.</returns>
        </member>
        <member name="M:Ximura.Persistence.ResourceCatalog.ResolveReference(System.String,System.String,System.Guid@,System.Guid@,System.Guid@,System.DateTime@)">
            <summary>
            This method resolves the reference in to it's correct id values.
            </summary>
            <param name="refType">The reference type.</param>
            <param name="refValue">The reference value.</param>
            <param name="tid">The type id.</param>
            <param name="cid">The content id.</param>
            <param name="vid">The version id.</param>
            <param name="vidExpire">The time that the version ID will expire. This can be used to cache
            the lookup for further requests.</param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Persistence.CDSRequestFolder">
            <summary>
            This class contains the information for a CDS request.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSRequestFolder.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSRequestFolder.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSRequestFolder.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Persistence.CDSRequestFolder.Reset">
            <summary>
            This method resets the object.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.BrowseExpression">
            <summary>
            This is the expression tree passed to the Persistence Manager to evaluate for a browse request.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.ByReference">
            <summary>
            This method determines whether the request is by reference.
            The default is false.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataReferenceType">
            <summary>
            This is the reference type field used for reading by reference.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataReferenceValue">
            <summary>
            This is the reference field used for reading by reference.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataType">
            <summary>
            The data type of the request.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataTypeID">
            <summary>
            This is the data request content ID
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataContentID">
            <summary>
            This is the data request content ID
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.DataVersionID">
            <summary>
            This is the data request version ID
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSRequestFolder.InternalCall">
            <summary>
            This property is used to identify an internal call originating from within the CDS.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.ContentDataStore">
            <summary>
            This command is the new content data store based fully on the Finite State Machine architecture.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStore.startState">
            <summary>
            The start state.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStore.cacheState">
            <summary>
            The cache manager.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStore.finishState">
            <summary>
            The finish state.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.#ctor">
            <summary>
            Empty constructor used during the design mode.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InitializeCacheManagerBridge">
            <summary>
            This method initializes the cache manager bridge.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ProcessRequestInternalCallback(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Persistence.CDSRequestFolder,Ximura.Persistence.CDSResponseFolder})">
            <summary>
            This override identifies that the request originates from within the CDS. 
            This is used when Persistence Managers call back using the CDSDirect class.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The data.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ProcessRequest(Ximura.Persistence.CDSContext)">
            <summary>
            This is the main entry point for a CDS request.
            </summary>
            <param name="context">The job context to process.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ProcessRequestIsSubCommand(Ximura.Persistence.CDSContext)">
            <summary>
            This method returns true if the request is a subcommand.
            </summary>
            <param name="context">the current job context.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ProcessRequestSubCommand(Ximura.Persistence.CDSContext)">
            <summary>
            This method processes sny specific subcommands sent to the Content Data Store.
            </summary>
            <param name="context">The current job context.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.PRSC_CacheManagerPoll(Ximura.Persistence.CDSContext)">
            <summary>
            This method polls the cache managers.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ProcessRequestFailed(System.String,System.String,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Persistence.CDSRequestFolder,Ximura.Persistence.CDSResponseFolder})">
            <summary>
            This override should place the appropriate HTML error response in the response object.
            </summary>
            <param name="status">The status code.</param>
            <param name="subStatus">The status description.</param>
            <param name="job">The job.</param>
            <param name="Data">The job data.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InternalStart">
            <summary>
            This overriden method starts the protocols
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InternalStop">
            <summary>
            This overriden method stops the protocols
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InternalPause">
            <summary>
            This overriden pauses stops the RBP protocol
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InternalContinue">
            <summary>
            This overriden resumes the protocols after they have been paused.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ServiceStatusChange(Ximura.XimuraServiceStatusAction)">
            <summary>
            This method is used to announce detailed announcements on service status changes.
            </summary>
            <param name="status">The protocol status, i.e. start, stop etc.</param>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.VerifyExternalConnectivity">
            <summary>
            This method verifies all the external connections.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ServicesProvide">
            <summary>
            This override add the CDS IXimuraCDSSettingsService settings object.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.ServicesRemove">
            <summary>
            This override removes the IXimuraCDSSettingsService settings object
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ContentDataStore.InitializeContextConnection(System.ComponentModel.IContainer)">
            <summary>
            This method should be overriden to provide extended Context collection settings.
            </summary>
            <param name="baseContainer">The base container for the collection.</param>
        </member>
        <member name="T:Ximura.Server.IXimuraAppSettings">
            <summary>
            This interface is used by a control to retrieve his application settings
            </summary>
        </member>
        <member name="P:Ximura.Server.IXimuraAppSettings.AppSettings">
            <summary>
            Name/Value Collection of AppSettings
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerGatewayAttribute">
            <summary>
            The XimuraAppServerGatewayAttribute attribute is used to set friendly names and descriptions for
            the server which will be used in the server gateway agents.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerGatewayAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerGatewayAttribute.#ctor(System.Type,System.String,System.String)">
            <summary>
            The attribute constructor.
            </summary>
            <param name="type">The agent type.</param>
            <param name="id">The agent id.</param>
            <param name="name">The agent name.</param>
        </member>
        <member name="T:Ximura.Persistence.ICDSSettingsService">
            <summary>
            This interface is used to share CDS settings for data connections
            between other commands in the command container.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.ICDSSettingsService.ResolveConnectionString(System.String)">
            <summary>
            This method is used to retrieve the connection string for specific catalog
            </summary>
            <param name="ConnectionMapping">Mapping Name</param>
            <returns>Connection string</returns>
        </member>
        <member name="M:Ximura.Persistence.ICDSSettingsService.GetAllConnectionStrings">
            <summary>
            Get All Connection Strings
            </summary>
            <returns>setting value</returns>
        </member>
        <member name="T:Ximura.Persistence.ContentDataStoreShortcuts">
            <summary>
            This class provides shorcuts for the ContentDataStore
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStoreShortcuts.ID">
            <summary>
            The command ID.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.ContentDataStoreShortcuts.Name">
            <summary>
            The command name.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.Read">
            <summary>
            The read envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.Update">
            <summary>
            The update envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.Create">
            <summary>
            The create envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.Delete">
            <summary>
            The delete envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.VersionCheck">
            <summary>
            The version check envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.Custom">
            <summary>
            The custom method envelope.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.ContentDataStoreShortcuts.CommandID">
            <summary>
            The CDS command ID.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CacheItemContainer">
            <summary>
            This class structure is used to hold a cache entry and its 
            associated statistics.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.#ctor(Ximura.Persistence.ContentIdentifier,System.Byte[],System.Int64)">
            <summary>
            The cache item container is used to hold an internal entity in to the cache memory queue.
            </summary>
            <param name="id">The content identifier.</param>
            <param name="blob">The binary blob.</param>
            <param name="hitCount">The historical hit count for the item.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.#ctor(Ximura.Persistence.ContentIdentifier,System.String,System.Int64)">
            <summary>
            The cache item container is used to hold an internal entity in to the cache memory queue.
            </summary>
            <param name="id">The content identifier.</param>
            <param name="path">The relative file path.</param>
            <param name="hitCount">The historical hit count for the item.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.#ctor(Ximura.Persistence.ContentIdentifier,System.Byte[],System.String,System.Int64)">
            <summary>
            The cache item container is used to hold an internal entity in to the cache memory queue.
            </summary>
            <param name="id">The content identifier.</param>
            <param name="blob">The binary blob.</param>
            <param name="path">The relative file path.</param>
            <param name="hitCount">The historical hit count for the item.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.CacheHit">
            <summary>
            This method updates the cache statistics.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.CacheHitInternal">
            <summary>
            This protected method is used to update the cache settings. This method does not modify and thread locks.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer.CacheRevalidate">
            <summary>
            This method revalidates the cached items for the cache expiry time.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.Identifier">
            <summary>
            This is the identifier.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.VersionID">
            <summary>
            This is the version ID of the content from the identifier.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.Blob">
            <summary>
            This is the binary blob for the content.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.FilePath">
            <summary>
            This is the filepath.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.Size">
            <summary>
            This is the size of the cache item.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.IsInterned">
            <summary>
            This method determines whether the cached item is loaded in to the class in memory.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.CacheOptions">
            <summary>
            This is the cache options for the content.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.CacheExpiry">
            <summary>
            This is the cache options for the content.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.AverageWait">
            <summary>
            This is the average wait time between cache hits in milliseconds. -1 determines that the content item
            has never been hit.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.StaleTime">
            <summary>
            The stale time is the length of time since the cache item was last used as a TimeSpan object.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.CacheCount">
            <summary>
            The cache count determines the number of times that the cache has been hit during the 
            current service run time.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.TotalHitCount">
            <summary>
            The total hit count is the maximum number of hit for the content within the lifetime
            of the cache collection.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.LastAccessed">
            <summary>
            This is the time that the cache has last been accessed.
            If the cache item has never been accessed, this value is null.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.ExpiryDateTime">
            <summary>
            This is the expiry date time of the cache item. If this is null, the item does not 
            have an expiry date.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.CacheHasExpired">
            <summary>
            This is the expiry time for the content.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer.ExpiryRating">
            <summary>
            This is the expiry rating for the cacheitem. You should override this class if you wish a more finegrained ranking algorithm.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CacheItemContainer`1">
            <summary>
            This is the generic container used to hold content in the Ximura system.
            </summary>
            <typeparam name="C">The content type.</typeparam>
        </member>
        <member name="F:Ximura.Persistence.CacheItemContainer`1.mItem">
            <summary>
            This is the content item.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CacheItemContainer`1.alg">
            <summary>
            This is the symetric algorithm used to safely store the content in the file system.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CacheItemContainer`1.dInfo">
            <summary>
            This is the directory information for the folder containing the cache items.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer`1.#ctor(`0,System.Boolean,System.Int64)">
            <summary>
            The cache item container is used to hold an internal entity in to the cache memory queue.
            </summary>
            <param name="data">The content.</param>
            <param name="hitCount">The historical hit count for the item.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer`1.#ctor(`0,System.Boolean,System.String,System.Int64)">
            <summary>
            The cache item container is used to hold an internal entity in to the cache memory queue.
            </summary>
            <param name="data">The content.</param>
            <param name="path">The relative file path.</param>
            <param name="hitCount">The historical hit count for the item.</param>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer`1.ItemCloned(Ximura.IXimuraPoolManager)">
            <summary>
            This property returns the cached item.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CacheItemContainer`1.CacheClear">
            <summary>
            This method clears the cached content item and returns it to the pool.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CacheItemContainer`1.Item">
            <summary>
            This property returns the cached item.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSAttributeAttribute">
            <summary>
            This attribute is used to define search properties. Attributes do not need to be unique.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.CDSAttributeAttribute.#ctor(System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify the Ximura command.
            </summary>
            <param name="ID">A string representation of a GUID in the form 6364755B-97B9-4799-B8BC-3D98EB786C92</param>
        </member>
        <member name="M:Ximura.Persistence.CDSAttributeAttribute.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ID">A string representation of a GUID in the form 6364755B-97B9-4799-B8BC-3D98EB786C92</param>
            <param name="name">The friendly name of the command. 
            This will be used in the config file when parsing command set up paramters.</param>
        </member>
        <member name="M:Ximura.Persistence.CDSAttributeAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="ID">A string representation of a GUID in the form 6364755B-97B9-4799-B8BC-3D98EB786C92</param>
            <param name="name">The friendly name of the command. 
            This will be used in the config file when parsing command set up paramters.</param>
            <param name="description">A human readable description explaining what the command does.</param>
        </member>
        <member name="P:Ximura.Persistence.CDSAttributeAttribute.Language">
            <summary>
            The Guid of the module
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSAttributeAttribute.Name">
            <summary>
            The name of the module. This is used to retrieve app settings.
            </summary>
        </member>
        <member name="P:Ximura.Persistence.CDSAttributeAttribute.Description">
            <summary>
            The friendly description of the module.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandPerformance">
            <summary>
            This is the base interface for performance counters for the command architecture.
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration`1.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Command.CommandConfiguration`1.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Command.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="T:Ximura.Server.AppServerConfigOptions">
            <summary>
            This enumerations determines where the AppServer looks to load the config
            file.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigOptions.NoConfig">
            <summary>
            This application does not require a configuration file
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigOptions.ResourceStream">
            <summary>
            The config file is hardcoded in the application and a resource
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigOptions.File">
            <summary>
            The config file is an unencrypted file in the application directory.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigOptions.FileDigitallySigned">
            <summary>
            The config file is digitally signed and is in the application 
            directory.
            </summary>
        </member>
        <member name="F:Ximura.Server.AppServerConfigOptions.FileEncrypted">
            <summary>
            The file is encrypted and is in the application directory.
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerConfigSystemAttribute">
            <summary>
            This attribute contains the system configuration settings.
            </summary>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerConfigurationAttribute">
            <summary>
            This is the abstract base attribute used to hold the configuration settings.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerConfigurationAttribute.#ctor(Ximura.Server.AppServerConfigOptions,System.String)">
            <summary>
            This constructor contains the necessary settings to set the configuration.
            </summary>
            <param name="ConfigOptions">The configuration options.</param>
            <param name="ConfigName">The configuration name.</param>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerConfigurationAttribute.ConfigOptions">
            <summary>
            This property returns the Application configuration options.
            </summary>
        </member>
        <member name="P:Ximura.Server.XimuraAppServerConfigurationAttribute.ConfigLocation">
            <summary>
            This is the location of the config file.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerConfigSystemAttribute.#ctor(Ximura.Server.AppServerConfigOptions,System.String)">
            <summary>
            This constructor contains the necessary settings to set the configuration.
            </summary>
            <param name="ConfigOptions">The configuration options.</param>
            <param name="ConfigName">The configuration name.</param>
        </member>
        <member name="T:Ximura.Server.XimuraAppServerConfigCommandAttribute">
            <summary>
            This attribute contains the command configuration settings.
            </summary>
        </member>
        <member name="M:Ximura.Server.XimuraAppServerConfigCommandAttribute.#ctor(Ximura.Server.AppServerConfigOptions,System.String)">
            <summary>
            This constructor contains the necessary settings to set the configuration.
            </summary>
            <param name="ConfigOptions">The configuration options.</param>
            <param name="ConfigName">The configuration name.</param>
        </member>
        <member name="T:Ximura.PerformanceCounterNotificationType">
            <summary>
            This method is used to determine the notification logic that the counter wishes to use.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounterNotificationType.EventDriven">
            <summary>
            The counter will fire an event when the value changes. Generally this should only
            be used for counters that change infrequently.
            </summary>
        </member>
        <member name="F:Ximura.PerformanceCounterNotificationType.TimerPoll">
            <summary>
            The timer poll method should be used for counters that need to be updated at a regular
            interval.
            </summary>
        </member>
        <member name="T:Ximura.Server.AgentInvalidTypeException">
            <summary>
            This exception is thrown be the AgentManagers when the type passed through the agent attributes
            does not match the required interface or base class requirements.
            </summary>
        </member>
        <member name="M:Ximura.Server.AgentInvalidTypeException.#ctor">
            <summary>
            Initializes a new instance of the exception.
            </summary>
        </member>
        <member name="M:Ximura.Server.AgentInvalidTypeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the exception.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Server.AgentInvalidTypeException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the exception.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Server.AgentInvalidTypeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Server.StorageManager.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManager.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The Ximura Application component model constructor
            </summary>
            <param name="container">The container that the services should be added to.</param>
        </member>
        <member name="M:Ximura.Server.StorageManager.AgentCreate(Ximura.Server.XimuraServerAgentHolder)">
            <summary>
            This override creates the storage agents.
            </summary>
            <param name="holder">The agent holder.</param>
            <returns>Returns the storage agent.</returns>
        </member>
        <member name="M:Ximura.Server.StorageManager.ServicesProvide">
            <summary>
            This override adds the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="M:Ximura.Server.StorageManager.ServicesRemove">
            <summary>
            This override removes the IXimuraLoggingManager service to the control container.
            </summary>
        </member>
        <member name="T:XimuraResourcePlaceholder">
            <summary>
            The XimuraResourcePlaceholder class is used to set the base for resource namespaces. 
            This is a bug with .NET, but it's something we have to live with.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBRelationalBasedPersistenceManager`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Persistence.SQLDBRelationalBasedPersistenceManager`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Ximura.Persistence.SQLDBRelationalBasedPersistenceManager`2.ResolveReference(Ximura.Persistence.CDSContext)">
            <summary>
            This method resolves the reference.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Persistence.SQLDBRelationalBasedPersistenceManager`2.VersionCheck(Ximura.Persistence.CDSContext)">
            <summary>
            This method checks the data store to see whether the references to the entity are current.
            </summary>
            <param name="context">The current CDS context.</param>
            <returns>
            The status codes for the response are as follows:
                200 = OK, the contentID and versionID are correct.
                400 = missing parameter, either the contentID or versionID is null
                404 = the content ID was not found
                412 = the version ID is not the current version.
                500 = there has been an internal system error. check the SubStatus parameter for the exception description.
            </returns>
        </member>
        <member name="M:Ximura.Persistence.SQLDBRelationalBasedPersistenceManager`2.Read(Ximura.Persistence.CDSContext)">
            <summary>
            This method reads the data from the datastore.
            </summary>
            <param name="context">The CDS context.</param>
            <returns>
            The status codes for the response are as follows:
                200 = OK, the contentID and versionID are correct.
                400 = missing parameter, the contentID is null
                404 = the content ID was not found
                500 = there has been an internal system error. check the SubStatus parameter for the exception description.
            </returns>
        </member>
        <member name="M:Ximura.Server.SSMPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Server.Job">
            <summary>
            This is the base request job object.
            </summary>
        </member>
        <member name="M:Ximura.Server.Job.#ctor">
            <summary>
            This is the private constructor used by the job pool.
            </summary>
        </member>
        <member name="M:Ximura.Server.Job.Reset">
            <summary>
            This method resets the job to its unitialized state.
            </summary>
        </member>
        <member name="M:Ximura.Server.Job.Initialize(System.Guid,System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.Server.JobSignature,Ximura.JobPriority)">
            <summary>
            This method initializes the job.
            </summary>
            <param name="sessionid">The session id</param>
            <param name="id">The job id</param>
            <param name="data">The data</param>
            <param name="signature">The signature</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Server.Job.IDBuffer">
            <summary>
            This method returns the buffer for the request.
            </summary>
            <returns>A byte array containing the identifying IDs.</returns>
        </member>
        <member name="P:Ximura.Server.Job.Priority">
            <summary>
            This is the job priority.
            </summary>
        </member>
        <member name="P:Ximura.Server.Job.SessionID">
            <summary>
            The Session ID
            </summary>
        </member>
        <member name="P:Ximura.Server.Job.ID">
            <summary>
            The Job ID
            </summary>
        </member>
        <member name="P:Ximura.Server.Job.Data">
            <summary>
            The job data
            </summary>
        </member>
        <member name="P:Ximura.Server.Job.Signature">
            <summary>
            The originator signature.
            </summary>
        </member>
        <member name="T:Ximura.Server.CompletionJobPrerequisiteFailureException">
            <summary>
            This exception is thrown by the completion job when an earlier dependency ID has thrown as exception.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobPrerequisiteFailureException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobPrerequisiteFailureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.CompletionJobPrerequisiteFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJobPrerequisiteFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.CompletionJobPrerequisiteFailureException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Server.CompletionJobDependencyException">
            <summary>
            This class is used by a parent module to signal to a completion job that the job returned has failed
            and that the completion job should cancel all current and future child jobs, depending on the settings
            passed in this exception class.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobDependencyException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.CompletionJobDependencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.CompletionJobDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.CompletionJobDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Server.LoggingManagerConfiguration">
            <summary>
            This class holds the default configuration for the logging manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManagerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.LoggingManagerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.LoggingManagerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Persistence.FileSystemStorageManagerConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Persistence.FileSystemStorageManagerConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Persistence.FileSystemStorageManagerConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Persistence.CDSCallback">
            <summary>
            This delegate is used by the DCSWrapper when processing an async request.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSCallback`1">
            <summary>
            This delegate is used by the DCSWrapper when processing an async request.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerSystemConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.AppServerSystemConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.AppServerSystemConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.XimuraAppTrace">
            <summary>
            XimuraAppTrace is the static trace object for the Ximura Application framework.
            </summary>
        </member>
        <member name="F:Ximura.XimuraAppTrace.categoryLogger">
            <summary>
            categoryLogger contains the collection of active loggers
            </summary>
        </member>
        <member name="F:Ximura.XimuraAppTrace.CategoryLog">
            <summary>
            CategoryLog contains a lookup table based on category with an array list stored
            against the value for each logger that accepts 
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Start">
            <summary>
            This method starts the logger. If the logger is active this method has no effect.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Close">
            <summary>
            This method closes the logger and flushes any messages from the buffer. If the logger is 
            not active this method has no effect.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.FlushInternal">
            <summary>
            This method flushes all the current loggers.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Flush">
            <summary>
            This method flushes all the current loggers.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.LogItem(Ximura.XimuraAppTrace.QueueItem)">
            <summary>
            This method logs the specific item.
            </summary>
            <param name="item">The item to log.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.LoggerAdd(Ximura.IXimuraLogging)">
            <summary>
            This method adds a logger to the logging collection.
            </summary>
            <param name="logger">The logger to add.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.LoggerRemove(Ximura.IXimuraLogging)">
            <summary>
            This method removes a logger from the logging collection.
            </summary>
            <param name="logger">The logger to remove.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.CategoryToLog(System.String)">
            <summary>
            This method returns true if there is a category to log.
            </summary>
            <param name="category">The category to check.</param>
            <returns>Returns true if the category is found.</returns>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Resolve(Ximura.XimuraAppTrace.QueueItem)">
            <summary>
            This method is used to resolve the application loggers for a particular logging
            event.
            </summary>
            <param name="item">The logging QueueItem.</param>
            <returns>Returns an array list containing the logger collection.</returns>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Write(System.Object,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message object specified.
            </summary>
            <param name="value">The message object.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Write(System.String,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message specified.
            </summary>
            <param name="message">The message.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.WriteLine(System.Object,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message object specified.
            For loggers that support multiline entry, this method will append a new line to the message.
            </summary>
            <param name="value">The message object.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.WriteLine(System.String,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message specified. 
            For loggers that support multiline entry, this method will append a new line to the message.
            </summary>
            <param name="message">The message.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Indent">
            <summary>
            This method increase the indent
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppTrace.Unindent">
            <summary>
            This method decreases the indent
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.Active">
            <summary>
            This method identifies whether the logger is active.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.AutoFlush">
            <summary>
            This method determines whether the logger will flush automatically
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.DefaultLogger">
            <summary>
            This property gets the default logger
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.IndentLevel">
            <summary>
            This property returns the current indent level
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.IndentSize">
            <summary>
            This property detemines the indent size in characters
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppTrace.Listeners">
            <summary>
            This method is not implemented.
            </summary>
        </member>
        <member name="T:Ximura.XimuraAppTrace.QueueItem">
            <summary>
            The QueueItem class holds a log item.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentSystem.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constructor used by the Ximura Application model.
            </summary>
            <param name="container">The control container.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentSystemConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentSystemConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentSystemConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Server.SessionAgentStandardConfiguration">
            <summary>
            This configuration class holds the settings for the system session manager.
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentStandardConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Server.SessionAgentStandardConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Server.SessionAgentStandardConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Server.SCMAuthenticationException">
            <summary>
            Summary description for SCMAuthenticationException.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMAuthenticationException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Server.SCMAuthenticationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Server.SCMAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Server.SCMAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Server.SCMAuthenticationException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Persistence.CDSStatePriorityGroup">
            <summary>
            The state priority group is used to determine the order in which CDSStates are applied to the incoming requests.
            CDSStates will be polled for incoming requests in the order of High, Standard and finally Low.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStatePriorityGroup.High">
            <summary>
            This priority should be used by cache managers that require access to the request before it is passed 
            to the persistence managers.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStatePriorityGroup.Standard">
            <summary>
            This is the default state for a standard persistence manager.
            </summary>
        </member>
        <member name="F:Ximura.Persistence.CDSStatePriorityGroup.Low">
            <summary>
            This status should primarily be used by gateway services that access remote CDS services.
            </summary>
        </member>
        <member name="M:Ximura.Server.SQLServerStorageAgent.VerifyExternalConnectivity">
            <summary>
            This method verifies all the external connections.
            </summary>
        </member>
    </members>
</doc>
