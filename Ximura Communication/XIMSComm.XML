<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XimuraComm</name>
    </assembly>
    <members>
        <member name="T:Ximura.Communication.VerbDirection">
            <summary>
            This method specifies the direction that the verb can be used in.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPServerContext">
            <summary>
            This is the SMTP Server context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerContext`8">
            <summary>
            This class is used to handle persistent server connections.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.Reset">
            <summary>
            This method resets the server context.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.Initialize">
            <summary>
            This method initializes the context.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.ConnectionRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`4,`5})">
            <summary>
            This method processes the incoming connection request.
            </summary>
            <param name="job">The current job request.</param>
            <returns>Returns true of the session should be reset.</returns>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.GetContract(Ximura.Server.SecurityManagerJob)">
            <summary>
            The contract for the summary.
            </summary>
            <param name="job"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.GetContractCallback(Ximura.Server.SecurityManagerJob)">
            <summary>
            The contract for the summary.
            </summary>
            <param name="job"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.ServerContext`8.VerifyIncomingUri(System.Uri)">
            <summary>
            The default is to accept all incoming connections. You can override this to provide more specific support.
            </summary>
            <param name="location">The connection location.</param>
            <returns>Returns true by default.</returns>
        </member>
        <member name="P:Ximura.Communication.ServerContext`8.DefaultRequestMessageType">
            <summary>
            This is the default request message type.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerContext`8.DefaultRequestMaxLength">
            <summary>
            This is the default maximum length of the response message in bytes.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerContext`8.ProcessSession">
            <summary>
            This method sets the context session to the base command session. This can be used for protocols 
            that do not use specific security sessions for each user, but just require a single session.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerContext`8.ProtocolConnectionDefault">
            <summary>
            This internal class holds the connection details of the default protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerContext.#ctor">
            <summary>
            This is the default context for the SMTP Server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerContext.Reset">
            <summary>
            This method reset the context to its initial state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerContext.ResetLite">
            <summary>
            This method resets the context back to the initial state. It is called by the Reset function,
            and also by various SMTP commands when they wish to reset the connection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerContext.SMTPRcptToAdd(System.Net.Mail.MailAddress)">
            <summary>
            This method adds a recipient to the incoming mail envelope. Please note that duplicate addresses
            will be accepted but the duplicate address will not be added to the list.
            </summary>
            <param name="address">The address to add.</param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerContext.SMTPValidateRecipientDomain(System.Net.Mail.MailAddress)">
            <summary>
            This method validates the incoming domains and accepts those that match the domain list.
            </summary>
            <param name="address">The mail address to validate.</param>
            <returns>Returns true if the domain is acceptable.</returns>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.AwaitVerbState">
            <summary>
            This is the current AwaitVerb state, which determines which commands can be executed during this state.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPDeclaredDomain">
            <summary>
            This is the data declared in the EHLO or HELO command.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMailFrom">
            <summary>
            This is the mail from address.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPRcptCount">
            <summary>
            This value is the number of recipients currently in the envelope.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMaxMessageSize">
            <summary>
            This is the maximum permissible message size for a SMTP message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMaxRecipients">
            <summary>
            This is the maximum permissible number of unique recipients to a SMTP message. The default is 100 recipients.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMessageStoreLocation">
            <summary>
            This is the folder location for the SMTP message store.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMessageID">
            <summary>
            This is the unique ID of the current SMTP message being processed.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMailID">
            <summary>
            This is the data declared in the EHLO or HELO command.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.SMTPMessageReceived">
            <summary>
            This is the local time that the message was received by the server. This property is
            set after the DATA/BDAT command has completed.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPServerContext.DefaultRequestMessageType">
            <summary>
            This is the default request message for a SMTP interaction.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerSettings`7">
            <summary>
            This class holds the server settings. This class is passed to the context when they are
            initialized.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraServerSettings`7">
            <summary>
            This interface is implemented by the server settings class.
            </summary>
            <typeparam name="ST">The state type.</typeparam>
        </member>
        <member name="M:Ximura.Communication.IXimuraServerSettings`7.InitializeSettings(Ximura.Communication.AuthHandlerExtender,Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager)">
            <summary>
            This method is used to initialize the Server settings object.
            </summary>
            <param name="authHandlerExtender">The authentication extender.</param>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="M:Ximura.Communication.IXimuraServerSettings`7.AuthHandlerResolve(System.String)">
            <summary>
            This method resolves the specific authentication handler based on the scheme presented.
            </summary>
            <param name="scheme">The authentication scheme required.</param>
            <returns>Returns the authentication handler or null if the authentication handler cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraServerSettings`7.ResponseMessageTemplateGet(System.Int32)">
            <summary>
            This method returns the message template for the specific code.
            </summary>
            <param name="code">The message code.</param>
            <returns>The message specified, or the default message is the code cannot be resolved.</returns>
        </member>
        <member name="F:Ximura.Communication.ServerSettings`7.mResponseMessages">
            <summary>
            This class holds the response message templates.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerSettings`7.mDefaultResponseTemplate">
            <summary>
            This is the default template to be used when a specific message type cannot be found.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerSettings`7.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerSettings`7.InitializeSettings(Ximura.Communication.AuthHandlerExtender,Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager)">
            <summary>
            This method is used to initialize the Server settings object.
            </summary>
            <param name="authHandlerExtender">The authentication extender.</param>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="M:Ximura.Communication.ServerSettings`7.AuthHandlerResolve(System.String)">
            <summary>
            This method resolves the specific authentication handler based on the scheme presented.
            </summary>
            <param name="scheme">The authentication scheme required.</param>
            <returns>Returns the authentication handler or null if the authentication handler cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Communication.ServerSettings`7.ConstructResponseMessageCache">
            <summary>
            This method constructs the message response cache.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerSettings`7.ResponseMessageTemplateGet(System.Int32)">
            <summary>
            This method returns the message template for the specific code.
            </summary>
            <param name="code">The message code.</param>
            <returns>The message specified, or the default message is the code cannot be resolved.</returns>
        </member>
        <member name="P:Ximura.Communication.ServerSettings`7.ResponseMessageTemplateDefault">
            <summary>
            This method returns the default template for the 
            </summary>
        </member>
        <member name="T:Ximura.Communication.MessageResolverMetadataContainer">
            <summary>
            This is the authorization handler metadata container used for the MessageResolverExtender.
            </summary>
        </member>
        <member name="T:Ximura.Communication.CommunicationMetadataContainer">
            <summary>
            This meta data container is used for component in the protocol and server containers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.CommunicationMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="P:Ximura.Communication.CommunicationMetadataContainer.Enabled">
            <summary>
            This property specifies whether the transport is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Communication.CommunicationMetadataContainer.Identifier">
            <summary>
            This property specifies whether the transport is enabled.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageResolverMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerException">
            <summary>
            The Protocol Exception is thrown by a protocol should an error occur.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.ServerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception</param>
        </member>
        <member name="T:Ximura.Communication.CramMD5AuthHandler">
            <summary>
            This is the digest MD5 authentication handler.
            </summary>
        </member>
        <member name="T:Ximura.Communication.AuthHandler">
            <summary>
            This is the base class for the authentication handler.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraAuthHandler">
            <summary>
            This interface is the base interface for Authorization handlers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.AuthHandler.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.AuthHandler.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.CramMD5AuthHandler.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.CramMD5AuthHandler.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.UDPTransport">
            <summary>
            This transport is responsible for interfacing with UDP based communication types.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IPBasedTransport`3">
            <summary>
            This is the root class for IP based transports.
            </summary>
        </member>
        <member name="T:Ximura.Communication.Transport`3">
            <summary>
            This is the base class for communication transport for communication based systems.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraTransport">
            <summary>
            This interface is implemented by Transport objects.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransport.Listen(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method establishes a listening connection at the location specified.
            </summary>
            <param name="Location">The location to listen on.</param>
            <param name="Context">The context for the connection.</param>
            <returns>Returns true if the listening connection was established successfully.</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransport.Open(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method will initiate a quiet connection to a remote location.
            </summary>
            <param name="Location">The location.</param>
            <param name="Context">The context to use for the connection.</param>
            <returns>Returns a new Guid if the connection was established successfully 
            or null if no connection was made.</returns>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransport.ConnectionType">
            <summary>
            This is the transport connection type.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransport.ServiceEnabled">
            <summary>
            This property will determine whether the transport is active.
            </summary>
        </member>
        <member name="F:Ximura.Communication.Transport`3.mBufferPool">
            <summary>
            This is the object pool used to provide buffer object to hold connection information.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Transport`3.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Transport`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.Transport`3.InternalStart">
            <summary>
            This is the internal start.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Transport`3.InternalStop">
            <summary>
            This override closes the connection pool.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Transport`3.OnTimerEvent(System.Boolean)">
            <summary>
            This method is used to reset inactive connections.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Ximura.Communication.Transport`3.Listen(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method initiates a listening socket on the specified URI.
            </summary>
            <param name="Location">The Uri location.</param>
            <param name="Context">The context for the connection.</param>
            <returns>Returns the Guid of the transport buffer if the listener was successfully initiated.</returns>
        </member>
        <member name="M:Ximura.Communication.Transport`3.Accept(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method accepts a new incoming connection request.
            </summary>
            <param name="ConnectionID">The transport buffer ID.</param>
            <param name="context">The context to manage the connection.</param>
        </member>
        <member name="M:Ximura.Communication.Transport`3.Open(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method opens an outward bound connection for the context at the location
            specified in the context.
            </summary>
            <param name="context">The context that will manage the connecton.</param>
            <returns>Returns the Guid of the transport buffer.</returns>
        </member>
        <member name="M:Ximura.Communication.Transport`3.Close(System.Guid)">
            <summary>
            This method closes the specific connection.
            </summary>
            <param name="ConnectionID">The connection ID to close.</param>
        </member>
        <member name="P:Ximura.Communication.Transport`3.TimerEnabled">
            <summary>
            This property will always be false for this command.
            </summary>
        </member>
        <member name="P:Ximura.Communication.Transport`3.ConnectionType">
            <summary>
            This is the connection type for the transport.
            </summary>
        </member>
        <member name="P:Ximura.Communication.Transport`3.BufferPool">
            <summary>
            This pool contains the current transport buffers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransport`3.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransport`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransport`3.InitializeListeningSocket(System.Net.IPEndPoint,Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method initializes the listening socket.
            </summary>
            <param name="EndPoint">The IP end point to initialize.</param>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransport`3.SocketClose(System.Net.Sockets.Socket)">
            <summary>
            This method closes a socket.
            </summary>
            <param name="handler">The socket to close.</param>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransport`3.SocketCreate">
            <summary>
            This method returns a new socket when required. You should override this method
            to return the correct type of socket for the IP based transport transport.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.UDPTransport.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.UDPTransport.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.UDPTransport.InitializeListeningSocket(System.Net.IPEndPoint,Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This overriden method initilizes a TCP/Ip listening socket.
            </summary>
            <param name="EndPoint">The IPEndpoint for the socket.</param>
        </member>
        <member name="P:Ximura.Communication.UDPTransport.ConnectionType">
            <summary>
            This is the connection type for the udp transport.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraTransportContext">
            <summary>
            This interface defines the communication between the transport and the protocol context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportState">
            <summary>
            This is the base state for the transport command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.TransportState.Close(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This base method switches any close request to the Close State.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.TransportState.Close(Ximura.Communication.TransportContext)">
            <summary>
            This base method switches any close request to the Close State.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Ximura.Communication.CloseTCPIPTransportState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.CloseTCPIPTransportState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.CloseTCPIPTransportState.Close(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This close method is initiated by the remote server.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.CloseTCPIPTransportState.Close(Ximura.Communication.TransportContext)">
            <summary>
            This close method is initiated by the transport context.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="T:Ximura.Communication.TransportContextIP">
            <summary>
            This context is used by IP based protocols.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportContext">
            <summary>
            This is the base context for the transport command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Reset">
            <summary>
            This override resets the context to its original state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.PurgeQueue(System.Collections.Generic.Queue{Ximura.Data.IXimuraMessageStream})">
            <summary>
            This method removes any items still in the message queue and returns them to the object pool.
            </summary>
            <param name="queue">The queue to purge.</param>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Initialize">
            <summary>
            This method initializes the context.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ConnectionRequest">
            <summary>
            This method handles a connection request to the server.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ListenRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            The method initializes a listen request.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ListenConfirm(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            The method confirms the listening request and starts listening.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.OpenRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method starts an open request.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.OpenConfirm(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method start the connection and confirms the open request.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Transmit(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method transits a message to the remote party.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Close(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method closes a context.
            </summary>
            <param name="job">The current job.</param>
            <param name="Data">The request data.</param>
            <returns>Returns true if the context should be reset and returned to the pool.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Close">
            <summary>
            This method is a hard close initiated by the Transport command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.MessageTypeInGetObject">
            <summary>
            This protected method retrieves a new message in object base on the specified type.
            </summary>
            <returns>Return null if the type cannot be resolved, or the pool is empty.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.MessageTransmit(Ximura.Data.IXimuraMessageStream)">
            <summary>
            This method adds a message in to the outgoing send queue.
            </summary>
            <param name="message">The message to add to the send queue.</param>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method writes bytes from the current message to send to the remote endpoint.
            </summary>
            <param name="data">The data.</param>
            <param name="offset">The byte offset.</param>
            <param name="length">The length.</param>
            <returns>Returns the number of bytes read.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ServerCall(System.IAsyncResult)">
            <summary>
            This method transmit the receive queue to the remote server on a seperate thread.
            </summary>
            <param name="ar"></param>
        </member>
        <member name="M:Ximura.Communication.TransportContext.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method writes the transmitted bytes to the message object.
            </summary>
            <param name="blob">The transmitted blob.</param>
            <param name="start">The offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ConnectionStart">
            <summary>
            This method starts the connection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ConnectionInitialize">
            <summary>
            This method initializes any transport specific properties such as a byte buffer.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ConnectionTransmit">
            <summary>
            This method triggers a transmit if one is not active already.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContext.ConnectionReceive">
            <summary>
            This method triggers a receive if one is not active already.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.FlowControl">
            <summary>
            This is the flow control for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.UriLocal">
            <summary>
            This is the Uri of the local party.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.UriRemote">
            <summary>
            This is the Uri of the remote party.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.DefaultScheme">
            <summary>
            This method returns the scheme used to build the uri remote and local schemes.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageTypeIn">
            <summary>
            This is the message object type used for the next incoming message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageInMaxLength">
            <summary>
            This is the maximum permitted length for the incoming message. If this is set to null, then no maximum size is defined.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.ListenerConnectionsLimit">
            <summary>
            This property specifies the number of connections that can be accepted before the listening socket must close.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageTransmitQueue">
            <summary>
            This property contains the message out queue and will be used by protocols
            that process multiple messages concurrently.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageTransmitCurrent">
            <summary>
            This is the current message being transmitted to the endpoint.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.CanTransmit">
            <summary>
            This property identifies whether the context can transmit data to the remote endpoint.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.CanReceive">
            <summary>
            This boolean property identifies whether the context can receive data from the remote endpoint.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageReceiveCurrent">
            <summary>
            This is the current message being received from the remote endpoint.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContext.MessageReceiveQueue">
            <summary>
            This property contains the incoming message queue and will be used
            by protocols that process multiple messages concurrently.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportContextIP.syncObject">
            <summary>
            The sync object.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.Reset">
            <summary>
            This override resets the context to its initial value.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.SocketClose">
            <summary>
            This method closes the buffer socket.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.SocketClose(System.Net.Sockets.Socket)">
            <summary>
            This method closes a socket.
            </summary>
            <param name="handler">The socket to close.</param>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.DNSResolve(System.Uri)">
            <summary>
            This method should be overriden to provide DNS integration with the Ximura.Communication DNS system.
            Currently, this method just calls the System.Net Dns class directly.
            </summary>
            <param name="context">The context that this call is running under.</param>
            <param name="Location">The location to resolve.</param>
            <returns>Returns a collection of IP addresses for the host, or null if the host cannot be
            resolved.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportContextIP.UriBuild(System.Net.IPEndPoint)">
            <summary>
            This protected method builds the Uri from the Endpoint.
            </summary>
            <param name="ep">The endpoint.</param>
            <returns>The uri fromed from the endpoint.</returns>
        </member>
        <member name="P:Ximura.Communication.TransportContextIP.ActiveSocket">
            <summary>
            This is the socket for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextIP.EndPointLocal">
            <summary>
            This is the local end point.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextIP.EndPointRemote">
            <summary>
            This is the remote end point.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextIP.UriLocal">
            <summary>
            This si the uri of the local endpoint
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextIP.UriRemote">
            <summary>
            This is the Uri of the remote endpoint.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportContextTCPIP.TransmitBuffer">
            <summary>
            This is the buffer used to read bytes from the socket.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportContextTCPIP.ReceiveBuffer">
            <summary>
            This is the buffer used to send bytes to the remote socket.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.Reset">
            <summary>
            This method resets the context to it's default values.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.ListenerStart(System.IAsyncResult)">
            <summary>
            This method processes connection requests  by 
            sending a async call to the AcceptCallback method
            </summary>
            <param name="listener">The listening socket</param>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.ListenerConnectionRequest(System.IAsyncResult)">
            <summary>
            This method receives async connection requests on the listening socket
            and processes them.
            </summary>
            <param name="ar">The async call back object containing the connection request</param>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.ConnectionInitialize">
            <summary>
            This override initializes the byte buffers for the connection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.ConnectionTransmit">
            <summary>
            This method initiates transmission if it is not already active.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTCPIP.ConnectionReceive">
            <summary>
            This method initiates the socket receive.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextTCPIP.DefaultScheme">
            <summary>
            This override sets 'tcp' as the default scheme 
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextTCPIP.ListenerQueueLength">
            <summary>
            This is the listener queue length. This property specifies the number of pending connection the listening socket will allow.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextTLS.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextTLS.DefaultScheme">
            <summary>
            This override sets 'tcps' as the default scheme 
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextNamedPipes.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextNamedPipes.DefaultScheme">
            <summary>
            This override sets 'tcp' as the default scheme 
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="T:Ximura.Communication.POP3ServerState">
            <summary>
            This is the base state for the POP3 protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerState`6">
            <summary>
            This is the base class for all server based states.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerState`6.mVerbsAllow">
            <summary>
            This protected value is the set of allowed verbs seperated by a semi-colon.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerState`6.mVerbList">
            <summary>
            This property contains the read-only list of acceptable verbs for the particular state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.Initialize(Ximura.Communication.IXimuraServerContext{`0,`1,`2,`3,`4,`5})">
            <summary>
            This method initializes the context.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.CreateSystemRequest(Ximura.Command.EnvelopeAddress)">
            <summary>
            This method creates the system request.
            </summary>
            <returns>A new envelope with the correct destination address.</returns>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.VerbAllowedSetDefault">
            <summary>
            This is the default set of allowed verbs.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerState`6.BuildVerbList">
            <summary>
            This method load the verb list.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerState`6.Direction">
            <summary>
            This property identifies the direction for the verb
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerState`6.Identifier">
            <summary>
            This override sets the verb allow property for the identifier.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerState`6.VerbsAllow">
            <summary>
            This property defines the verbs that are allowed for this state. Verbs should be seperated by a 
            semi-colon.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerState`6.VerbsAllowed">
            <summary>
            This collection is a list of permitted verb for this state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},System.String[],Ximura.Communication.POP3StatusCodes)">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},System.String,Ximura.Communication.POP3StatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},Ximura.Communication.POP3StatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerState.SendResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},System.Boolean,Ximura.Communication.POP3StatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_NOOP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_NOOP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_NOOP.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="T:Ximura.Communication.POP3ServerContext">
            <summary>
            This is the context for the POP3 server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerContext.#ctor">
            <summary>
            This is the default context for the POP3 Server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerContext.Reset">
            <summary>
            This method reset the context to its initial state.
            </summary>
        </member>
        <member name="P:Ximura.Communication.POP3ServerContext.AwaitVerbState">
            <summary>
            This is the current AwaitVerb state, which determines which commands can be executed during this state.
            </summary>
        </member>
        <member name="P:Ximura.Communication.POP3ServerContext.DefaultRequestMessageType">
            <summary>
            This is the default request message type.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPClose">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPServerState">
            <summary>
            This is the base state for the POP3 protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPClose.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPClose.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTP.CloseFTP">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="T:Ximura.Communication.FTPServerState">
            <summary>
            This is the base server state for the FTP Server
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.FTPServerState.FTPDataListenCommand(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance})">
            <summary>
            This method calls the TransitionDataExportCommand to get internal data.
            </summary>
            <param name="context"></param>
            <param name="subCommand"></param>
            <param name="ID"></param>
            <param name="FolderData"></param>
            <param name="ItemData"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FTPServerState.ValidateDataConnection(Ximura.Communication.FTPServerContext)">
            <summary>
            This method is used to validate a ftp data connection and send any outstanding data to it.
            </summary>
            <param name="context">The current context.</param>
        </member>
        <member name="M:Ximura.Communication.FTPServerState.Close(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method manages the close requests.
            </summary>
            <param name="context"></param>
            <param name="job"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.FTPServerState.AccessLevel">
            <summary>
            The access level determines when the commands will be accessible for the user.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.CloseFTP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.CloseFTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTP.AwaitVerbFTP">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.AwaitVerbFTP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.AwaitVerbFTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TelnetServerSettings">
            <summary>
            This is the settings class for the telnet server context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetRequestUsernameMessage">
            <summary>
            This is the default message type for the internet message.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetRequestMessage">
            <summary>
            This is the default message type for the internet message.
            </summary>
        </member>
        <member name="T:Ximura.Communication.InternetMessage">
            <summary>
            This is the default message type for internet based messaging.
            </summary>
        </member>
        <member name="F:Ximura.Communication.InternetMessage.mInstruction">
            <summary>
            This is the collection of header positions within the message. This is required because certain
            headers may appears multiple times.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.HeaderExtract(System.String)">
            <summary>
            This method extract the header from the InternetMessage.
            </summary>
            <param name="headerName"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.FragmentSetNext">
            <summary>
            This method sets the next fragment in the message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.CompletionCheck">
            <summary>
            This method is used to check whether the message has completed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.FragmentCollectionBuild(System.Boolean)">
            <summary>
            This method builds the fragment collection.
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.FragmentCollectionComplete">
            <summary>
            This method is used to complete the header collection organization once the initialization phase has ended.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.FragmentAddInstructionToStart">
            <summary>
            This method moves down any headers and inserts the instruction to the beginning of the 
            fragment collection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessage.FragmentAddBodyMetadata">
            <summary>
            This method will be called whenever the message contains body data. This method add the 
            body metadata to the header tags.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetMessage.BodyLength">
            <summary>
            This property returns the body length of the message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetMessage.Instruction">
            <summary>
            This fragment is the first fragment in the internet message that contains the message instruction.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetMessage.FragmentBodyType">
            <summary>
            This is the fragment body type for the message. By default this fragment will 
            just store the body as a binary blob. You can override this property to return a more
            specific fragment type.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetRequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetRequestUsernameMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPServerState">
            <summary>
            This is the base state for the SMTP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},System.String[],Ximura.Communication.SMTPStatusCodes)">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},System.String,Ximura.Communication.SMTPStatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.SetResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer},Ximura.Communication.SMTPStatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerState.SendResponse(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},System.Boolean,Ximura.Communication.SMTPStatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="P:Ximura.Communication.SMTPServerState.EHLOMethods">
            <summary>
            This property is used to add extension strings to the EHLO header.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_DATA.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_DATA.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_DATA.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="T:Ximura.Communication.OptionsVerbState">
            <summary>
            This state processes the Options verb for the SIP protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPServerState">
            <summary>
            This is the base state for the SIP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.OptionsVerbState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.OptionsVerbState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.RQCallbackServer">
            <summary>
            This is the protocol callback request folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQCallbackServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQCallbackServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RQCallbackServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.RQCallbackServer.Reset">
            <summary>
            This override resets the class parameters
            </summary>
        </member>
        <member name="P:Ximura.Communication.RQCallbackServer.ProtocolContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RQCallbackServer.ServerContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.RSCallbackServer">
            <summary>
            This is the protocol callback response folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSCallbackServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSCallbackServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RSCallbackServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.RSCallbackServer.Reset">
            <summary>
            This override resets the various properties.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSCallbackServer.ProtocolContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSCallbackServer.ServerContextID">
            <summary>
            This is the server context ID.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSCallbackServer.MaxLength">
            <summary>
            This property is the maximum number of bytes allowed for the response message.
            A value of -1 specifies no maximum limit.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportClosedException">
            <summary>
            The Protocol Exception is thrown by a protocol should an error occur.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Communication.TransportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:Ximura.Communication.TransportException.ErrorCode">
            <summary>
            The data session error code.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportException.Status">
            <summary>
            Error Status
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportException.SubStatus">
            <summary>
            Error SubStatus
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportClosedException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportClosedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.TransportClosedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception</param>
        </member>
        <member name="M:Ximura.Communication.TransportClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Communication.IXimuraProtocolConfigSH">
            <summary>
            This interface is used by the protocol config section handler.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraProtocolServerComponentConfigSH">
            <summary>
            This interface is the root settings interface for protocol based components.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.GetListenerSetting(System.String)">
            <summary>
            Get Listener Setting of specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.GetSenderSetting(System.String)">
            <summary>
            Get Sender Setting of specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.Name">
            <summary>
            This is the public name.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.Description">
            <summary>
            This is the public description.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.UsePerformanceCounters">
            <summary>
            This boolean value is used to indicate whether to use 
            preformance counters.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.ListenerEnabled">
            <summary>
            This boolean value indicates whether the listener should be enabled.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolServerComponentConfigSH.SenderEnabled">
            <summary>
            This boolean value indicates whether the sender should be enabled.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolConfigSH.ExceptionTestActive(System.String,Ximura.Communication.ProtocolConfigTestDirection)">
            <summary>
            This method returns a boolean value indicating whether the exception test is active.
            </summary>
            <param name="test">The test to check</param>
            <param name="direction">The test direction.</param>
            <returns>Returns true if the test is active.</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolConfigSH.ExceptionTestValue(System.String,Ximura.Communication.ProtocolConfigTestDirection)">
            <summary>
            This method returns the exception test value.
            </summary>
            <param name="test">The test.</param>
            <param name="direction">The test direction.</param>
            <returns>Returns the value set for the test, or null if the test is not active.</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolConfigSH.ExceptionTestType(System.String,Ximura.Communication.ProtocolConfigTestDirection)">
            <summary>
            This method returns the exception test typ.
            </summary>
            <param name="test">The test.</param>
            <param name="direction">The test direction.</param>
            <returns>Returns the value set for the test type.</returns>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolConfigSH.PoolMin">
            <summary>
            This is the connection pool minimum value. 
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolConfigSH.PoolMax">
            <summary>
            This is the connection pool maximum value. 
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolConfigSH.PoolPrefer">
            <summary>
            This is the connection pool preferred value. That is the value that 
            the pool will return to should the inactive connections expire. 
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolConfigSH.ExceptionTestsAllow">
            <summary>
            This property returns true if the protocol should allow exception tests.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolConfigTestDirection">
            <summary>
            This enumeration is used to specify the direction of a test.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConfigTestDirection.NotSet">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConfigTestDirection.Incoming">
            <summary>
            The message is inbound
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConfigTestDirection.Outgoing">
            <summary>
            The message is outbound
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolConnectionType">
            <summary>
            This is connection type.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConnectionType.Notset">
            <summary>
            The connection type is not determined.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConnectionType.Listener">
            <summary>
            The connection is a listener.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConnectionType.Sender">
            <summary>
            The connection is a sender.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_RETR.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_RETR.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_TOP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_TOP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.ProtocolSettings`5">
            <summary>
            This class contains the protocol settings for the protocol context.
            </summary>
            <typeparam name="CNTX">The context type.</typeparam>
            <typeparam name="ST">The state type.</typeparam>
            <typeparam name="SET">The protocol settings.</typeparam>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolSettings`5.InitializeSettings(Ximura.IXimuraPool,Ximura.Communication.TransportExtender,Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager,Ximura.Communication.ProtocolFlowControl)">
            <summary>
            This method is used to initialize the Protocol settings object.
            </summary>
            <param name="transportExtender">The transport extender.</param>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="P:Ximura.Communication.IXimuraProtocolSettings`5.FlowControl">
            <summary>
            This setting specifies the default protocol data flow control format.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolSettings`5.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolSettings`5.InitializeSettings(Ximura.IXimuraPool,Ximura.Communication.TransportExtender,Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Command.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.Server.IXimuraSessionManager,Ximura.Communication.ProtocolFlowControl)">
            <summary>
            This method is used to initialize the Protocol settings object.
            </summary>
            <param name="transportExtender">The transport extender.</param>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="P:Ximura.Communication.ProtocolSettings`5.FlowControl">
            <summary>
            This setting specifies the default protocol data flow control format.
            </summary>
        </member>
        <member name="T:Ximura.Communication.MimeBodyMessage">
            <summary>
            This is the base Mime Body message class.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraMimeMessageInitialize">
            <summary>
            
            </summary>
        </member>
        <member name="F:Ximura.Communication.MimeBodyMessage.mBoundary">
            <summary>
            This is the mime boundary used in the deliminator.
            </summary>
        </member>
        <member name="F:Ximura.Communication.MimeBodyMessage.mEncoding">
            <summary>
            This is the encoding type passed in the load constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeBodyMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeBodyMessage.Reset">
            <summary>
            This is the pooling reset method.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeBodyMessage.Initialize(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="deliminator"></param>
            <param name="encoding"></param>
        </member>
        <member name="M:Ximura.Communication.MimeBodyMessage.FragmentSetNext(System.Type,System.Int64)">
            <summary>
            This method returns a new fragment object for the type specified.
            </summary>
            <param name="fragmentType">The fragment type required.</param>
            <param name="maxLength">The maximum permitted length for the fragment.</param>
        </member>
        <member name="F:Ximura.Communication.MultipartMixedMimeMessageBody.mPreambleBody">
            <summary>
            This is the main body fragment.
            </summary>
        </member>
        <member name="F:Ximura.Communication.MultipartMixedMimeMessageBody.mEpilogueBody">
            <summary>
            This is the main body fragment.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MultipartMixedMimeMessageBody.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MultipartMixedMimeMessageBody.FragmentSetNext">
            <summary>
            This method sets the next fragment in the message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MultipartMixedMimeMessageBody.FragmentHeaderInitialType">
            <summary>
            This is the fragment initial type.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MultipartMixedMimeMessageBody.FragmentFinalType">
            <summary>
            This is the final type for the Mime message
            </summary>
        </member>
        <member name="T:Ximura.Data.FileBasedStorageMessageFragment">
            <summary>
            This fragment is used for messages whose primary storage is the file system.
            </summary>
        </member>
        <member name="F:Ximura.Data.FileBasedStorageMessageFragment.fileStorageStream">
            <summary>
            This is the file storage stream for reading and writing.
            </summary>
        </member>
        <member name="M:Ximura.Data.FileBasedStorageMessageFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Data.FileBasedStorageMessageFragment.Reset">
            <summary>
            This method closes the stream if it is still open.
            </summary>
        </member>
        <member name="M:Ximura.Data.FileBasedStorageMessageFragment.Load(System.Int32,System.IO.Stream)">
            <summary>
            This override is to allow the base stream to be set.
            </summary>
            <param name="maxSize"></param>
            <param name="inStream"></param>
        </member>
        <member name="T:Ximura.Communication.RSServer">
            <summary>
            This is the protocol response folder
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RSServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.HTTPServerResponse.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerResponse.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.HTTPServerResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.HTTPRequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPRequestMessage.FragmentSetNext">
            <summary>
            This method sets the next fragment in the message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPRequestMessage.FragmentHeaderInitialType">
            <summary>
            This method returns the initial fragment type for the class.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPRequestMessage.Host">
            <summary>
            This is the header host.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPRequestMessage.ContentType">
            <summary>
            This property returns the body length of the message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetInstructionFragmentBase.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetInstructionFragmentBase.Reset">
            <summary>
            This method resets the fragment.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetInstructionFragmentBase.MessagePartsBuild">
            <summary>
            This method splits the instruction header in to its constituent parts.
            </summary>
            <param name="force">Set this parameter to true if you wish to force a rebuild.</param>
        </member>
        <member name="M:Ximura.Communication.InternetInstructionFragmentBase.EndInitCustom">
            <summary>
            This method is used to complete the header collection organization once the initialization phase has ended.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetInstructionFragmentBase.IsRequest">
            <summary>
            This property determines whether the message is a request. This is used to determine the order of the 
            three parts of the instruction. Request = Verb-Instruction-Protocol, Response = Protocol-Verb-Intruction.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetInstructionFragmentBase.Verb">
            <summary>
            This the the verb such as GET, POST etc for a Request or 200, 403, 404 for a Response message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetInstructionFragmentBase.Instruction">
            <summary>
            This is the instruction, either a Uri query for a request or a message for a response.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetInstructionFragmentBase.Protocol">
            <summary>
            This is the protocol for the message. This property will generally be overriden for a specific
            protocol.
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetInstructionFragmentBase.Version">
            <summary>
            This is the protocol for the message. This property will generally be overriden for a specific
            protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ResponseHeaderFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.ResponseHeaderFragment.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ResponseHeaderFragment.IsRequest">
            <summary>
            This property determines whether the message is a request. This is used to determine the order of the 
            three parts of the instruction. Request = Verb-Instruction-Protocol, Response = Protocol-Verb-Intruction.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPResponseHeaderFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPResponseHeaderFragment.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPResponseHeaderFragment.EndInitCustom">
            <summary>
            This method is used to complete the header collection organization once the initialization phase has ended.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolState`2">
            <summary>
            This is the base class for all protocol based states.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolState`2.Initialize(Ximura.Communication.IXimuraProtocolContext{`0,`1},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method sets the context to the default state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolState`2.Initialize(Ximura.Communication.IXimuraProtocolContext{`0,`1},Ximura.Communication.IXimuraProtocolConnectionRequest,Ximura.Communication.IXimuraProtocolConnectionResponse)">
            <summary>
            This method initializes the context from a listening context.
            </summary>
            <param name="context">The listening context.</param>
            <param name="Request">The Accept Request object.</param>
            <param name="Response">The Accept Response object.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolState`2.SetOpenState(Ximura.Communication.IXimuraProtocolContext{`0,`1})">
            <summary>
            This method sets the correct state for the connection request.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Ximura.Communication.StartProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.StartProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.FTPDataStartProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataStartProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.FTPDataProtocolCommand">
            <summary>
            This is the FTP Protocol command.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolCommand`9">
            <summary>
            The protocol command is used to manage a variety of communication based protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ConnectionFSMBase`9">
            <summary>
            This is the base command for connection based commands such as ProtocolCommand and ServerCommand. 
            It is used to hold common code.
            </summary>
            <typeparam name="RQ"></typeparam>
            <typeparam name="RS"></typeparam>
            <typeparam name="CBRQ"></typeparam>
            <typeparam name="CBRS"></typeparam>
            <typeparam name="CNTX"></typeparam>
            <typeparam name="ST"></typeparam>
            <typeparam name="SET"></typeparam>
        </member>
        <member name="F:Ximura.Communication.ConnectionFSMBase`9.mContexts">
            <summary>
            This is a list of the active protocol contexts listed by their unique identifier.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.InternalStart">
            <summary>
            This override add specific context support.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.InternalStop">
            <summary>
            This override removes the context collection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.ContextGet">
            <summary>
            This method gets a new protocol context and set its security to run under the process session of the command.
            </summary>
            <returns>The new context object.</returns>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.ContextReturn(`4)">
            <summary>
            This method unregisters a context and returns it to the pool.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.ContextReset(`4)">
            <summary>
            This method resets the session with the settings and a new empty session.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.ConnectionFSMBase`9.ContextResolve(System.Guid)">
            <summary>
            This method resolves an existing connection from the incoming request.
            </summary>
            <param name="job">The job to resolve the connection ID></param>
            <returns>Returns the protocol context or null if the context cannot be resolved.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.Communication.ConnectionFSMBase`9.ServiceParentSettingsSet(Ximura.IXimuraServiceParentSettings)" -->
        <member name="F:Ximura.Communication.ProtocolCommand`9.mProtocolListeners">
            <summary>
            This collection holds the list of protocol listeners.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolCommand`9.transportExtender">
            <summary>
            This is the transport extender for the protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InternalStart">
            <summary>
            This overriden method starts the protocols
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InternalStop">
            <summary>
            This overriden method stops the protocols
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InternalPause">
            <summary>
            This overriden method pauses stops the RBP protocol
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InternalContinue">
            <summary>
            This overriden resumes the protocols after they have been paused.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ProtocolStatusChange(Ximura.XimuraServiceStatusAction)">
            <summary>
            This method is used to announce detailed announcements on protocol
            service changes.
            </summary>
            <param name="status">The protocol status, i.e. start, stop etc.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ServicesProvide">
            <summary>
            This overriden method provides the IXimuraProtocolServerConfigSH 
            service to the command components.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ServicesRemove">
            <summary>
            This overriden method removes the IXimuraProtocolServerConfigSH service from the component.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InitializeExtenders(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InitializeBaseStates(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.InitializeContextConnection(System.ComponentModel.IContainer)">
            <summary>
            This override initializes the setting with both the state and transport extenders.
            </summary>
            <param name="baseContainer"></param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ProcessRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method processes the requests from the protocol servers.
            </summary>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming data.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ContextReset(`4)">
            <summary>
            This method resets the session with the settings and the base command session.
            </summary>
            <param name="context">The context to reset.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolCommand`9.ContextReturn(`4)">
            <summary>
            This method unregisters a context and returns it to the pool.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolCommand`9.FlowControl">
            <summary>
            This setting specifies the default protocol data flow control format.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPDataProtocolCommand.ftpData">
            <summary>
            This is the http transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTPDataProtocolCommand.InitializeBaseStates(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="T:Ximura.Communication.SMTP.AwaitVerbDataSMTP">
            <summary>
            This verb awaits a response from the DATA/BDAT command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbSMTP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbSMTP.VerbAllowedSetDefault">
            <summary>
            This is the default set of allowed verbs.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbSMTP.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes incoming verbs.
            </summary>
            <param name="context">The context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The data to process.</param>
            <returns>Returns true if this context should be reset.</returns>
        </member>
        <member name="P:Ximura.Communication.SMTP.AwaitVerbSMTP.VerbsAllow">
            <summary>
            This property defines the verbs that are allowed for this state. Verbs should be seperated by a 
            semi-colon.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbDataSMTP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbDataSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.ResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.ResponseMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ResponseMessage.Load(System.String[],System.Int32)">
            <summary>
            This method formats a multiline message
            </summary>
            <param name="multiLine"></param>
            <param name="code"></param>
        </member>
        <member name="M:Ximura.Communication.ResponseMessage.CompletionCheck">
            <summary>
            The default behaviour is to have a single fragment. 
            Once it has completed we complete the message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.ResponseMessage.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPDataMessage">
            <summary>
            This is the base class for SMTP message file based storage.
            </summary>
        </member>
        <member name="T:Ximura.Communication.FileBasedStorageMessage">
            <summary>
            This is the default message class for reading and writing large binary blobs to a file based storage medium.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Load(System.IO.DirectoryInfo,System.Guid)">
            <summary>
            This method loads the message from an existing store ready for reading.
            </summary>
            <param name="dataStoreLocation">The data store location.</param>
            <param name="messageID">The sepcific message ID.</param>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Load(System.Int64,System.IO.DirectoryInfo,System.Guid)">
            <summary>
            This message creates a new message ready for writing at the location specified.
            </summary>
            <param name="MaxSize">The maximum permissible size of the message.</param>
            <param name="messageID">The message ID.</param>
            <param name="dataStoreLocation">The data store location. If the location does not exist</param>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Close">
            <summary>
            This override persists the metainformation for the stream.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.MetadataWrite">
            <summary>
            This method saves the message metadata to a file stream.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.MetadataRead">
            <summary>
            This method reads the message metadata from the file stream.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.FragmentSetNext(System.Type,System.Int64)">
            <summary>
            This method returns a new fragment object for the type specified.
            </summary>
            <param name="fragmentType">The fragment type required.</param>
            <param name="maxLength">The maximum permitted length for the fragment.</param>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.ValidateFolderPath(System.String)">
            <summary>
            This method checks the folder location path. If the path does not exist, the path is created.
            </summary>
            <param name="dataStoreLocation">The data store location.</param>
            <returns>Returns the DirectoryInfo for the location.</returns>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.DataStreamWrite">
            <summary>
            This method returns a writeable data stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.DataStreamRead">
            <summary>
            This method returns a readable data stream.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Read(System.IO.BinaryReader)">
            <summary>
            This method reads the metadata from the metadata stream.
            </summary>
            <param name="r">The binary reader for the stream.</param>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.Write(System.IO.BinaryWriter)">
            <summary>
            This method writes the metadata for the message to the stream.
            </summary>
            <param name="logWriter">The binary writer for the metadata stream.</param>
        </member>
        <member name="M:Ximura.Communication.FileBasedStorageMessage.CompletionCheck">
            <summary>
            This override specifies the completion check for the message.
            </summary>
            <returns>Returns true if the message has completed.</returns>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.Hashed">
            <summary>
            This property identifies whether the body data is hashed.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.Encrypted">
            <summary>
            This property identifies whether the body data is encrypted.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.Compressed">
            <summary>
            This property identifies whether the body data is compressed.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.RijndaelAlg">
            <summary>
            This is the encryption key used to protect the base data stream information.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.MessageID">
            <summary>
            This is the unique message ID
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.MetadataFilename">
            <summary>
            This property is the filename for the metadata.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.BinaryDataFileName">
            <summary>
            This property is the file name for the binary data.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.FileStoreDirectory">
            <summary>
            This is the file store location base.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FileBasedStorageMessage.FilenameBase">
            <summary>
            This is the filename base.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPDataMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPServerCommand">
            <summary>
            The SIP Server command is the reponsible for managing requests from the protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerCommand`9">
            <summary>
            The server command is used to implement a specific set of functionality 
            on top of the protocol command.
            </summary>
        </member>
        <member name="T:Ximura.Communication.MessageProcessCommand`9">
            <summary>
            The MessageProcessCommand is a base class for commands that process incoming messages and 
            send outgoing message responses.
            </summary>
            <typeparam name="RQ"></typeparam>
            <typeparam name="RS"></typeparam>
            <typeparam name="CBRQ"></typeparam>
            <typeparam name="CBRS"></typeparam>
            <typeparam name="CNTX"></typeparam>
            <typeparam name="ST"></typeparam>
            <typeparam name="SET"></typeparam>
        </member>
        <member name="M:Ximura.Communication.MessageProcessCommand`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageProcessCommand`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="F:Ximura.Communication.ServerCommand`9.AuthHandler_Extender">
            <summary>
            This extender is responsible for manager the authorization handlers.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerCommand`9.MessageResolver_Extender">
            <summary>
            This extender is responsible for managing the message resolvers.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerCommand`9.mListenersByUri">
            <summary>
            This collection holds the list of listeners active on the protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InternalStart">
            <summary>
            This overriden method starts the protocols
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InternalStop">
            <summary>
            This overriden method stops the protocols
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InternalPause">
            <summary>
            This overriden method pauses stops the RBP protocol
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InternalContinue">
            <summary>
            This overriden resumes the protocols after they have been paused.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ProtocolStatusChange(Ximura.XimuraServiceStatusAction)">
            <summary>
            This method is used to announce detailed announcements on protocol
            service changes.
            </summary>
            <param name="status">The protocol status, i.e. start, stop etc.</param>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InitializeExtenders(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ContextsClose">
            <summary>
            This method is called when the close request is received from the application.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ProcessRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method processes
            </summary>
            <param name="job"></param>
            <param name="Data"></param>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ProcessCallback(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3})">
            <summary>
            This method processes the callbacks from the Protocol commands.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The request data.</param>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ListenersStart">
            <summary>
            This method is called to start any transport listeners.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ListenersStop">
            <summary>
            This method is called to stop and transport listeners
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.InitialMessageType(Ximura.Communication.ServerCommand{`0,`1,`2,`3,`4,`5,`6,`7,`8}.Listener)">
            <summary>
            This method returns the initial message type when receiving connection.
            </summary>
            <param name="Listener">The listener for the connection.</param>
            <returns>Returns the object type, or null if there is no type specified.</returns>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.CallbackRegister">
            <summary>
            This method sets the protocol command as a permitted callback.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCommand`9.ProtocolCommandID">
            <summary>
            This is the protocol command ID. You should override this method to provide the 
            address of the protocol command that you wish to link with.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolListenRequestAddress">
            <summary>
            This is the protocol listen request address.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolListenConfirmAddress">
            <summary>
            This is the protocol listen request address.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolPassiveOpenRequestAddress">
            <summary>
            This is the protocol connection open request.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolActiveOpenRequestAddress">
            <summary>
            This is the protocol connection open request.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolCloseRequestAddress">
            <summary>
            This is the protocol close request.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ProtocolTransmitRequestAddress">
            <summary>
            This is the protocol close request.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ServerCommand`9.ServerConnectionRequestAddress">
            <summary>
            This is the address of this command. This value is passed as a parameter to
            the protocol when initiating a listening connection to allow the protocol to
            call back the server when new connection requests are received.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerCommand`9.Listener">
            <summary>
            This struct is used to hold the listener information.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SIPServerCommand.digestMD5Auth">
            <summary>
            This is the authentication handler for the MD5 protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.SIPServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="M:Ximura.Communication.SIPServerCommand.InitialMessageType(Ximura.Communication.ServerCommand{Ximura.Communication.SIPRQServer,Ximura.Communication.SIPRSServer,Ximura.Communication.SIPRQCallbackServer,Ximura.Communication.SIPRSCallbackServer,Ximura.Communication.SIPServerContext,Ximura.Communication.SIPServerState,Ximura.Communication.SIPServerSettings,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance}.Listener)">
            <summary>
            This method returns the initial message type when receiving connection.
            </summary>
            <param name="Listener">The listener for the connection.</param>
            <returns>Returns the object type, or null if there is no type specified.</returns>
        </member>
        <member name="T:Ximura.Communication.IXimuraServerCommandConfigSH">
            <summary>
            This interface is used to implement the server config settings.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraServerCommandConfigSH.UserSessionRealm">
            <summary>
            This is the realm used for user sessions.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraServerCommandConfigSH.Listeners">
            <summary>
            This is the list of URIs for the protocol command to listen on.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportConfiguration.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This constructor is called by .NET when it added as new to a container.
            </summary>
            <param name="container">The container this component should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.TransportConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Communication.TransportConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="M:Ximura.Communication.UDPTransportConfiguration.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraTransportExtender">
            <summary>
            This interface is implemented by the transport extenders.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransportExtender.TransportResolve(System.String)">
            <summary>
            This method resolves the transport based on the protocol scheme.
            </summary>
            <param name="Scheme">The scheme for the protocol, i.e. tcp://</param>
            <returns>Returns the transport, or null if the scheme cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Communication.TransportRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Communication.BufferPoolAccess">
            <summary>
            This class is used by the Transport class to allow transport buffers access to the buffer pool 
            for listening connections that require a new buffer.
            </summary>
        </member>
        <member name="T:Ximura.Communication.RQProtocol">
            <summary>
            This is the protocol request folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQProtocol.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQProtocol.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RQProtocol.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.RQProtocol.Reset">
            <summary>
            This override resets the class parameters
            </summary>
        </member>
        <member name="P:Ximura.Communication.RQProtocol.ProtocolContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RQProtocol.ServerContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.RSProtocol">
            <summary>
            This is the protocol response folder
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSProtocol.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSProtocol.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RSProtocol.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.RSProtocol.Reset">
            <summary>
            This override resets the class parameters
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSProtocol.ProtocolContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSProtocol.ConnectionType">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RSProtocol.ProtocolUri">
            <summary>
            This is the Uri that the command will listen on.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_RSET.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_RSET.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.StartPOP3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.StartPOP3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.MimeMessageFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMessageFragment.Reset">
            <summary>
            This reset override resets the deliminator and the body encoding.
            </summary>
        </member>
        <member name="T:Ximura.Communication.InternetMessageFragmentBody">
            <summary>
            This is the base class for fragment bodies. Body class differ from standard message fragments 
            because they implement the IXimuraMessageFragmentBody interface which facilitates the creation
            of the body meta-data headers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessageFragmentBody.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.WWWFormUrlEncodedBodyFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.WWWFormUrlEncodedBodyFragment.ExtractDataDictionary">
            <summary>
            This method extracts the URL encoded body data as a string dictionary.
            </summary>
            <returns>Returns a dictionary containing the data.</returns>
        </member>
        <member name="M:Ximura.Communication.WWWFormUrlEncodedBodyFragment.ExtractDataList">
            <summary>
            This method extracts the incoming data as a keyvaluepair. This method allows multiple parameters
            of the same key value to be extracted from the data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_USER.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_USER.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_TYPE.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_TYPE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTPDataProtocolContext">
            <summary>
            This is the context for the FTP protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolContext`6">
            <summary>
            The protocol context is the base context object used to implement protocol
            based systems.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraProtocolContext`2">
            <summary>
            This is the interface implemented by protocol contexts.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolContext`2.Initialize(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method sets the context to the default state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolContext`2.Initialize(Ximura.Communication.IXimuraProtocolConnectionRequest,Ximura.Communication.IXimuraProtocolConnectionResponse)">
            <summary>
            This method initializes the context from a listening context.
            </summary>
            <param name="context">The listening context.</param>
            <param name="Request">The Accept Request object.</param>
            <param name="Response">The Accept Response object.</param>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolContext`2.ListenRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`0,`1})">
            <summary>
            This method is used to initialize a listening context.
            </summary>
            <param name="job">The security job.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.InitializeProtocolCallbacks">
            <summary>
            This method sets up the callbacks for the connection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.Reset">
            <summary>
            This method rests the context
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.MessageTypeInGetObject">
            <summary>
            This protected method retrieves a new message in object base on the specified type.
            </summary>
            <returns>Return null if the type cannot be resolved, or the pool is empty.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.Initialize(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3})">
            <summary>
            This method initializes the context from a server request.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.Initialize(Ximura.Communication.IXimuraProtocolConnectionRequest,Ximura.Communication.IXimuraProtocolConnectionResponse)">
            <summary>
            This method initializes the context from a callback response.
            </summary>
            <param name="listeningContext">The listening context.</param>
            <param name="Request">The callback request.</param>
            <param name="Response">The callback response.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.ListenRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3})">
            <summary>
            This method processes a listen request from the server.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true is the request is successful.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.ListenConfirm(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{`2,`3})">
            <summary>
            This method processes a listen confirm request from the server.
            </summary>
            <param name="job"></param>
            <param name="Data"></param>
            <returns>Returns true is the confimation was successful.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.ConnectionRequest(System.Uri)">
            <summary>
            This method is used to signal a connection request from a connectionful transport.
            </summary>
            <param name="ID">The buffer ID.</param>
            <param name="remoteUri">The remote Uri.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.ProcessIncomingMessage(Ximura.Data.IXimuraMessageStream)">
            <summary>
            This method sends the message to the server for procesing.
            </summary>
            <param name="message">The message to send for processing.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.CallBack_ProcessIncomingMessage(Ximura.CommandRSEventArgs)">
            <summary>
            This is the callback from the message sent request.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method reads data from the context and places it in the buffer.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>Returns the number of bytes read in to the integer.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method writes to the context from the byte buffer supplied.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>Returns the number of bytes read from the buffer.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.WriteWaitBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method writes to the context from the byte buffer supplied.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
            <returns>Returns the number of bytes read from the buffer.</returns>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.ByteBufferChecks(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This method does a set of buffer checks for the incoming data.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolContext`6.CloseComplete">
            <summary>
            This method returns the context to the pool, so that it can be reused.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.ServerCommandID">
            <summary>
            This is the command ID of the server process that manages the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.ServerContextID">
            <summary>
            This is the server context ID used to connect this protocol context with the server.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.Location">
            <summary>
            This is the location for the context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.TransportID">
            <summary>
            This is the transport ID used to connect the context to the transport buffer.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.CurrentState">
            <summary>
            This override ensures that no actions can continue once the context has been closed.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.FlowControl">
            <summary>
            This setting specifies the default protocol data flow control format.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageTypeIn">
            <summary>
            This is the message object type used for the next incoming message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageIn">
            <summary>
            This is the current message object that is being received.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageOut">
            <summary>
            This is the current message object that is being transmitted.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageOutQueue">
            <summary>
            This property contains the message out queue and will be used by protocols
            that process multiple messages concurrently.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageInQueue">
            <summary>
            This property contains the incoming message queue and will be used
            by protocols that process multiple messages concurrently.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.CanRead">
            <summary>
            This property determines whether the context can be read.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.CanWrite">
            <summary>
            This property determines whether the context can be written to.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.MessageInMaxLength">
            <summary>
            This is the maximum size for the incoming message, as specified by the server.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.ListenerConnectionLimit">
            <summary>
            This is the connection limit for the listener. 
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.ListenerClosed">
            <summary>
            This property identifies that the listening transport buffer has signalled that it is no longer listening.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.ClosePending">
            <summary>
            ClosePending is a property that signals that the server has signalled the protocol connection to close
            once it has finished what it is doing.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ProtocolContext`6.Closing">
            <summary>
            ClosePending is a property that signals that the server has signalled the protocol connection to close
            once it has finished what it is doing.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataProtocolContext.ListenRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQProtocol,Ximura.Communication.RSProtocol})">
            <summary>
            This override gets the next available listening address.
            </summary>
            <param name="job"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Communication.DNSProtocolCommand">
            <summary>
            This is the DNS protocol command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TelnetServerCommand">
            <summary>
            This is the default telnet server command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.TelnetServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="T:Ximura.Communication.Telnet_Username_State">
            <summary>
            This is the telnet start state for a session.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetServerState">
            <summary>
            This is the base state for the telnet protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="P:Ximura.Communication.TelnetServerState.SecurityLevel">
            <summary>
            This property determines the security level required to access the state command.
                0 - Unathenticated.
                1 - Authenticated.
                2 - Enabled.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_Username_State.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_Username_State.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_MAIL.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_MAIL.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_MAIL.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RCPT.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RCPT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RCPT.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="T:Ximura.Communication.SIPServerContext">
            <summary>
            The SIP server context is responsible for maintaining each active session on the SIP server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPServerContext.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPRSCallbackServer">
            <summary>
            This is the root request folder for the Purchase Process Command
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRSCallbackServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRSCallbackServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.SIPRSCallbackServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.SIPRQServer">
            <summary>
            This is the root request folder for the Purchase Process Command
            </summary>
        </member>
        <member name="T:Ximura.Communication.RQServer">
            <summary>
            This is the protocol request folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RQServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.SIPRQServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRQServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.SIPRQServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.OpeningProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.OpeningProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_QUIT.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_QUIT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.ClosePOP3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.ClosePOP3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.MimeMatchCollectionState.#ctor(System.String)">
            <summary>
            This is the extended constructor.
            </summary>
            <param name="boundary"></param>
        </member>
        <member name="M:Ximura.Communication.MimeMatchCollectionState.BoundaryValidate(System.Byte[])">
            <summary>
            This method validates the boundary.
            </summary>
            <param name="boundary">The ascii byte collection.</param>
        </member>
        <member name="M:Ximura.Communication.MimeMatchCollectionState.GetEnumerator">
            <summary>
            This method returns a new MimeMatchCollection enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ximura.Communication.MimeMatchCollectionState.MimeMatchCollection">
            <summary>
            The class contains the match terminators.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMatchCollectionState.MimeMatchCollection.#ctor(Ximura.Data.MatchSequenceTerminator{System.Byte,System.Byte})">
            <summary>
            This constructor initializes the collection with the boundary.
            </summary>
            <param name="boundary"></param>
        </member>
        <member name="M:Ximura.Communication.MimeMatchCollectionState.MimeMatchCollection.Dispose(System.Boolean)">
            <summary>
            This method disposes the collection.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Ximura.Communication.MimeMatchCollectionState.MimeMatchCollection.Item(System.Int32)">
            <summary>
            This method returns the specified item for the collection. You should override this indexer.
            </summary>
            <param name="index">The position index.</param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.MimeMatchCollectionState.MimeMatchCollection.Count">
            <summary>
            This property returns the number of items in the collection. You should override this property.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTPServerCommand">
            <summary>
            The HTTPServerCommandBase generic class can be used by parent commands that want a more well defined messaging
            infrastructure between the HTTP server and the parent manager command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.startState">
            <summary>
            This is the start state for the HTTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.awaitVerbState">
            <summary>
            This is the await state for the HTTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.authState">
            <summary>
            This is the authentication state.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.closeState">
            <summary>
            This is the close state for the HTTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.plainAuth">
            <summary>
            This is the plain text authentication handler.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPServerCommand.digestMD5Auth">
            <summary>
            This is the MD5 digest authtication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.HTTPServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="M:Ximura.Communication.OpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.OpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.FullDuplexOpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FullDuplexOpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.FTPDataFullDuplexOpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataFullDuplexOpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.DNSProtocolContext">
            <summary>
            This is the context for the DNS protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="T:Ximura.Communication.XRPDirection">
            <summary>
            The enumeration determines the direction type for the XRP protocol command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.XRPDirection.Listener">
            <summary>
            The XRP Command receives requests and processes them internally.
            </summary>
        </member>
        <member name="F:Ximura.Communication.XRPDirection.Gateway">
            <summary>
            The XRP Command forwards requests to one or more listeners.
            </summary>
        </member>
        <member name="F:Ximura.Communication.XRPDirection.BiDirectional">
            <summary>
            The XRP command processes requests in both directions.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetServerContext">
            <summary>
            The telnet server context is used to hold connection information for the protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetServerContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TelnetServerContext.SecurityLevel">
            <summary>
            This property determines the security level required to access the state command.
                0 - Unathenticated.
                1 - Authenticated.
                2 - Enabled.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbRcptSMTP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbRcptSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="P:Ximura.Communication.SMTP.AwaitVerbRcptSMTP.VerbsAllow">
            <summary>
            This property defines the verbs that are allowed for this state. Verbs should be seperated by a 
            semi-colon.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbMailSMTP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.AwaitVerbMailSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="P:Ximura.Communication.SMTP.AwaitVerbMailSMTP.VerbsAllow">
            <summary>
            This property defines the verbs that are allowed for this state. Verbs should be seperated by a 
            semi-colon.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerCallbackException">
            <summary>
            This exception is thrown during general request exceptions.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ResponseStatusException.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
        </member>
        <member name="M:Ximura.Communication.ResponseStatusException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Ximura.Communication.ResponseStatusException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:Ximura.Communication.ResponseStatusException.Status">
            <summary>
            This is the error status.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ResponseStatusException.SubStatus">
            <summary>
            This is the error substatus.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerCallbackException.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
        </member>
        <member name="M:Ximura.Communication.ServerCallbackException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Ximura.Communication.ServerCallbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Communication.ServerConfiguration.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Communication.AuthHandlerExtender">
            <summary>
            This extender class is used to interact with the various protocol authentication handlers.
            </summary>
        </member>
        <member name="T:Ximura.Communication.CommunicationExtenderBase`2">
            <summary>
            This is the base extender for the protocol and server containers.
            </summary>
            <typeparam name="C">The meta data container</typeparam>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.GetEnabled(`0)">
            <summary>
            This property is used to return the enabled object settings.
            </summary>
            <param name="state">The object.</param>
            <returns>The enabled boolean value of the object.</returns>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.SetEnabled(`0,System.Boolean)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The object.</param>
            <param name="value">The enabled value.</param>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.GetIdentifier(`0)">
            <summary>
            This property is used to return the enabled object settings.
            </summary>
            <param name="state">The object.</param>
            <returns>The identifier string value of the object.</returns>
        </member>
        <member name="M:Ximura.Communication.CommunicationExtenderBase`2.SetIdentifier(`0,System.String)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The object.</param>
            <param name="value">The identifier value.</param>
        </member>
        <member name="M:Ximura.Communication.AuthHandlerExtender.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.AuthHandlerExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Communication.AuthHandlerExtender.GetPriority(Ximura.Communication.AuthHandler)">
            <summary>
            This property is used to return the enabled object settings.
            </summary>
            <param name="state">The object.</param>
            <returns>The identifier string value of the object.</returns>
        </member>
        <member name="M:Ximura.Communication.AuthHandlerExtender.SetPriority(Ximura.Communication.AuthHandler,System.Int32)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The object.</param>
            <param name="value">The identifier value.</param>
        </member>
        <member name="T:Ximura.Communication.UDPTransportBuffer">
            <summary>
            This is the UDP Transport buffer.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IPBasedTransportBuffer">
            <summary>
            This class is used to hold the transport information and buffer for a connection.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportBuffer">
            <summary>
            The transport buffer is used to handle the interaction between the protocol context and 
            the underlying transport.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBuffer.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBuffer.Reset">
            <summary>
            This method resets the bases properties for the buffer.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBuffer.Reset(System.Int32,System.Int32,Ximura.Communication.BufferPoolAccess)">
            <summary>
            This is the overriden reset method used to intialize the buffer to the correct settings.
            </summary>
            <param name="readBuffer"></param>
            <param name="writeBuffer"></param>
        </member>
        <member name="M:Ximura.Communication.TransportBuffer.LastActiveSet">
            <summary>
            This property denotes the last activity for the connection.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBuffer.LastActiveSet(System.Int32)">
            <summary>
            This property denotes the last activity for the connection and sets the inactivity expiry time.
            </summary>
            <param name="milliseconds">The expiry time in milliseconds.</param>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.Context">
            <summary>
            This is the protocol context for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.ContextID">
            <summary>
            The connection ID.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.BufferAccess">
            <summary>
            This class provides access to the transport buffer pool.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.RemoteEndpoint">
            <summary>
            This is the remote end point uri for the buffer connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.ConnectionType">
            <summary>
            This is the transaction
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.Status">
            <summary>
            This is the transaction
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.LastActive">
            <summary>
            This property denotes the last activity for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.Expiry">
            <summary>
            This is the expiry time for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.HasExpired">
            <summary>
            This property denotes whether the connection has expired.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.ID">
            <summary>
            The connection ID.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.ReadBuffer">
            <summary>
            This is the read buffer for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.WriteBuffer">
            <summary>
            This is the write buffer for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportBuffer.BufferName">
            <summary>
            This is a friendly name that can be used for debugging purposes.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.Reset">
            <summary>
            This method resets the object in to a null state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.ProcessIncoming(System.Int32,System.Net.EndPoint,System.Net.Sockets.IPPacketInformation)">
            <summary>
            This method writes the incoming data in the buffer to the context.
            </summary>
            <param name="bytesRead">The number of bytes to write.</param>
            <returns>Returns true if the bytes were successfully writen to the context.</returns>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.SocketClose">
            <summary>
            This method closes the buffer socket.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.SocketClose(System.Net.Sockets.Socket)">
            <summary>
            This method closes a socket.
            </summary>
            <param name="handler">The socket to close.</param>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.Close">
            <summary>
            This method closes the connection and returns the buffer to the pool.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedTransportBuffer.DNSResolve(Ximura.Communication.IXimuraTransportContext,System.Uri)">
            <summary>
            This method should be overriden to provide DNS integration with the Ximura.Communication DNS system.
            Currently, this method just calls the System.Net Dns class directly.
            </summary>
            <param name="context">The context that this call is running under.</param>
            <param name="Location">The location to resolve.</param>
            <returns>Returns a collection of IP addresses for the host, or null if the host cannot be
            resolved.</returns>
        </member>
        <member name="P:Ximura.Communication.IPBasedTransportBuffer.Socket">
            <summary>
            This is the socket for the connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IPBasedTransportBuffer.ReceiveEndPoint">
            <summary>
            This is the receive end point.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IPBasedTransportBuffer.StartAcceptConnection">
            <summary>
            This delegate is used to accept a new connection.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="T:Ximura.Communication.IPBasedTransportBuffer.SocketHolder">
            <summary>
            This struct is used to hold the async data for accepting connections.
            </summary>
        </member>
        <member name="M:Ximura.Communication.UDPTransportBuffer.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.UDPTransportBuffer.Reset">
            <summary>
            This method resets the object in to a null state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.UDPTransportBuffer.ReadCallback(System.IAsyncResult)">
            <summary>
            This is the read call back method that accepts UDP traffic.
            </summary>
            <param name="ar"></param>
        </member>
        <member name="P:Ximura.Communication.UDPTransportBuffer.ConnectionType">
            <summary>
            This override sets the connectiontype to connectionless.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TCPIPTransport">
            <summary>
            This transport is responsible for interfacing with the TCPIP stack.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TCPIPTransport.mListenerMRE">
            <summary>
            This hashtable contains the listening sockets and their manual reset events.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransport.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransport.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransport.Listen(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method start the listening socket.
            </summary>
            <param name="context">The context containing the listening information.</param>
            <returns>Returns the buffer ID.</returns>
        </member>
        <member name="P:Ximura.Communication.TCPIPTransport.TLSEnabled">
            <summary>
            This method specifies whether Transport Layer Security should be anabled by default on the socket connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TCPIPTransport.ConnectionType">
            <summary>
            This is the connection type for the transport.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IXimuraConnectionToProtocol`7">
            <summary>
            This interface is used for interaction between the protocol and the transport.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraConnectionToProtocol`7.ResolveTransport(System.Uri)">
            <summary>
            This method resolves the transport for the location passed in the Uri.
            </summary>
            <param name="location">The location to resolve.</param>
            <returns>Returns the transport.</returns>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_LIST.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_LIST.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_UIDL.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_UIDL.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.AwaitVerbPOP3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.AwaitVerbPOP3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.ContentType">
            <summary>
            This structure processes the content type field and extracts the media type
            and the parameters.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTPServerContext">
            <summary>
            This is the default context for the HTTP server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerContext.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerContext.Reset">
            <summary>
            This is the override reset that resets the uri values.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPServerContext.URILocal">
            <summary>
            The local URI
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPServerContext.URIRemote">
            <summary>
            The remote URI
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPResponseMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTTPResponseMessage.FragmentHeaderInitialType">
            <summary>
            This method returns the initial fragment type for the class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RequestHeaderFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.RequestHeaderFragment.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPRequestHeaderFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="F:Ximura.Communication.MailBodyBlobFragment.mSMTPMailTerminator">
            <summary>
            This is the terminator for a SMTP mail message, namely CRLF.CRLF
            </summary>
        </member>
        <member name="M:Ximura.Communication.MailBodyBlobFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MailBodyBlobFragment.Reset">
            <summary>
            This method resets the fragment so that it can be reused.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MailBodyBlobFragment.WriteProcessByteLength(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This override writes the message bytes to the data stream instead of keeping it in a memory buffer.
            </summary>
            <param name="buffer">The byte buffer.</param>
            <param name="offset">The offset.</param>
            <param name="count">The number of bytes to read.</param>
            <returns>Returns the number of bytes written from the buffer.</returns>
        </member>
        <member name="M:Ximura.Communication.MailBodyBlobFragment.Load(System.Int64,System.IO.Stream)">
            <summary>
            This method initializes the fragment with the maximum size and the output stream.
            </summary>
            <param name="maxSize">The maximum size for the message.</param>
            <param name="writeStream">The output stream to write to.</param>
        </member>
        <member name="P:Ximura.Communication.MailBodyBlobFragment.TerminatorAllowFolding">
            <summary>
            This method specifies whether the message allows folding, i.e. does not
            terminate when the CRLF is followed by either a space or a tab character.
            The default is not to allow folding.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MailBodyBlobFragment.TerminationType">
            <summary>
            This is the fragment termination type.
            </summary>
        </member>
        <member name="T:Ximura.Communication.BasicRealmAuthHandler">
            <summary>
            This is the digest MD5 authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.BasicRealmAuthHandler.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.BasicRealmAuthHandler.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="P:Ximura.Communication.BasicRealmAuthHandler.CommandName">
            <summary>
            This is the command name for the Basic Realm Auth Handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.Initialize(Ximura.Communication.TransportContext)">
            <summary>
            This method currently does nothing.
            </summary>
            <param name="context">The current transport context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The data.</param>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.ConnectionRequest(Ximura.Communication.TransportContext)">
            <summary>
            This method swaps to the open state and calls the corresponding method.
            </summary>
            <param name="context">The current context.</param>
            <returns>Returns true if the server accepted the connection request.</returns>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.OpenRequest(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method swaps to the open state and calls the corresponding method.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.StartTransportState.ListenRequest(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method changes the context to the listen state.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_TRACE">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerbServerState">
            <summary>
            This is the base state for the POP3 protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerbServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerbServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_TRACE.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_TRACE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTPServerCommand">
            <summary>
            The FTP Server command us responsible for processing all incoming messages.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPServerCommand.startState">
            <summary>
            This is the start state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPServerCommand.awaitVerbState">
            <summary>
            This is the await state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPServerCommand.awaitDataVerbFTP">
            <summary>
            This is the await data state for the FTP protocol
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPServerCommand.closeState">
            <summary>
            This is the close state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPServerCommand.plainAuth">
            <summary>
            This is the plain text authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTPServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="M:Ximura.Communication.FTPServerCommand.CallbackRegister">
            <summary>
            This method adds the protocol data command as a permitted callback.
            </summary>
        </member>
        <member name="T:Ximura.Communication.FTPMessage">
            <summary>
            This is the base class for FTP control mesages.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPMessage.CompletionCheck">
            <summary>
            The default behaviour is to have a single fragment. 
            Once it has completed we complete the message.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Ximura.Communication.XRPServerCommand">
            <summary>
            The SIP Protocol is the root command for communication between 
            applications within the Ximura framework.
            </summary>
        </member>
        <member name="M:Ximura.Communication.XRPServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.XRPServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.XRPServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="T:Ximura.Communication.Telnet_AwaitRequest_State">
            <summary>
            This is the telnet state for processing a request once the user is logged in.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_AwaitRequest_State.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_AwaitRequest_State.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.Command_Enable_TelnetState">
            <summary>
            This is the Exit command state.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetCommandState">
            <summary>
            This is the Exit command state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetCommandState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetCommandState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="P:Ximura.Communication.TelnetCommandState.CommandVerbs">
            <summary>
            This property determines the verbs used to identify the commands.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Command_Enable_TelnetState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Command_Enable_TelnetState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_SIZE.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_SIZE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_AUTH.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_AUTH.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.SMTPClientState">
            <summary>
            This is the base state for the SMTP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPClientState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPClientState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="P:Ximura.Communication.SMTPClientState.Direction">
            <summary>
            This method specifies the direction of the verb.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPServerSettings">
            <summary>
            This class provides settings for the SMTP server and context.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerSettings.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerSettings.ConstructResponseMessageCache">
            <summary>
            This overriden method constructs the SMTP response message cache.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPRequestInternetMessage">
            <summary>
            The SIPInternetMessage contains specific headers for SIP based internet messaging.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessageRequest.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetMessageRequest.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRequestInternetMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPResponseInternetMessage">
            <summary>
            The SIPInternetMessage contains specific headers for SIP based internet messaging.
            </summary>
        </member>
        <member name="M:Ximura.Communication.InternetMessageResponse.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="P:Ximura.Communication.InternetMessageResponse.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPResponseInternetMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.FTPAccessLevel">
            <summary>
            The access level determines when the commands will be accessible for the particular user.
            </summary>
        </member>
        <member name="T:CommunicationResourcePlaceholder">
            <summary>
            The CommunicationResourcePlaceholder class is used to set the base for resource namespaces. 
            This is a bug with .NET, but it's something we have to live with.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportBufferUnavailableException">
            <summary>
            The Protocol Exception is thrown by a protocol should an error occur.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolException">
            <summary>
            The Protocol Exception is thrown by a protocol should an error occur.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception</param>
        </member>
        <member name="M:Ximura.Communication.TransportBufferUnavailableException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBufferUnavailableException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.TransportBufferUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception</param>
        </member>
        <member name="T:Ximura.Communication.ProtocolClosedException">
            <summary>
            The Protocol Exception is thrown by a protocol should an error occur.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolClosedException.#ctor">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolClosedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolClosedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProtocolException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception</param>
        </member>
        <member name="M:Ximura.Communication.ProtocolClosedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_USER.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_USER.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Ximura.Communication.MimeMessage.mEncoding" -->
        <member name="M:Ximura.Communication.MimeMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMessage.FragmentSetNext">
            <summary>
            This method sets the next fragment in the message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMessage.InitializeFragment``1(System.String,System.String)">
            <summary>
            This generic method loads the particular fragment.
            </summary>
            <typeparam name="FRAG"></typeparam>
            <param name="cType"></param>
        </member>
        <member name="M:Ximura.Communication.MimeMessage.CompletionCheck">
            <summary>
            This method is used to check whether the message has completed.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.MimeMessage.ContentType">
            <summary>
            This property returns the body length of the message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MimeMessage.IsTerminator">
            <summary>
            This method returns true if the fragment has completed and is exactly equal to the termination string.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MimeMessage.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.MimeMessage.FragmentHeaderType">
            <summary>
            This method returns the generic fragment header type.
            </summary>
        </member>
        <member name="T:Ximura.Communication.RequestMessage">
            <summary>
            This is the request message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.RequestMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RequestMessage.CompletionCheck">
            <summary>
            The default behaviour is to have a single fragment. 
            Once it has completed we complete the message.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.RequestMessage.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RequestMessage.Verb">
            <summary>
            The request verb.
            </summary>
        </member>
        <member name="P:Ximura.Communication.RequestMessage.Data">
            <summary>
            The request data.
            </summary>
        </member>
        <member name="T:Ximura.Communication.FTPServerContext">
            <summary>
            This is the default context for the HTTP server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.Reset">
            <summary>
            This override returns the context to its original value
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.AppendPath(System.String)">
            <summary>
            This method appends the folder path when an absolute path is not specified.
            </summary>
            <param name="Filename"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.AppendFilePath(System.String)">
            <summary>
            This method appends the directory when an absolute patch is not specified.
            </summary>
            <param name="Filename"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.GetFTPDataResponseMessage(Ximura.Data.IXimuraMessageStream@)">
            <summary>
            This is the message awaiting transmission to the remote party.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.UriFTPDataListenList">
            <summary>
            This is the listening URI broken down in to the constituent parts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.FTPServerContext.SendResponse(System.Boolean,Ximura.Communication.FTPStatusCodes,System.Object[])">
            <summary>
            This method sets the server response message
            </summary>
            <param name="context"></param>
            <param name="Data"></param>
            <param name="status"></param>
            <param name="list"></param>
        </member>
        <member name="P:Ximura.Communication.FTPServerContext.FTPPath">
            <summary>
            This is the current path that the user is logged in to.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPServerContext.HasFTPDataResponseMessage">
            <summary>
            This is the message awaiting transmission to the remote party.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPServerContext.FTPDataResponseMessage">
            <summary>
            This is the message awaiting transmission to the remote party.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPServerContext.ProtocolConnectionFTPData">
            <summary>
            This internal class holds the connection details of the default protocol.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPServerContext.DefaultRequestMessageType">
            <summary>
            This is the default request message type.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetStartState">
            <summary>
            This is the telnet start state for a session.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetStartState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetStartState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELO.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELO.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELO.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELO.SMTPGreeting(Ximura.Communication.SMTPServerContext)">
            <summary>
            This is the default greeting for the server.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Ximura.Communication.SMTP.Verb_EHLO.mEHLOMessage">
            <summary>
            This is the string compiled from the various states in the container.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_EHLO.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_EHLO.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_EHLO.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_EHLO.EHLOVerbs(Ximura.Communication.SMTPServerContext)">
            <summary>
            This method compiles the list of EHLO extensions for the protocol.
            </summary>
            <param name="sContext">The SMTP Server Context.</param>
            <returns>Returns a string array with the extensions and EHLO data.</returns>
        </member>
        <member name="T:Ximura.Communication.SMTPEnvelopeMessage">
            <summary>
            This message holds the message request details.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPEnvelopeMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPEnvelopeMessage.Reset">
            <summary>
            This method resets the message envelope to its default state.
            </summary>
        </member>
        <member name="T:Ximura.Communication.RegisterVerbState">
            <summary>
            This state processes the register verb for the SIP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RegisterVerbState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RegisterVerbState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.SIPMessageResolverExtender">
            <summary>
            This class will resolve the connection string from the incoming SIP message to the specific context.
            </summary>
        </member>
        <member name="T:Ximura.Communication.MessageResolverExtender">
            <summary>
            This extender class is used to interact with the various protocol authentication handlers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageResolverExtender.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageResolverExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Communication.MessageResolverExtender.Resolve(Ximura.Data.IXimuraMessageStream)">
            <summary>
            This method attempts to resolve the relevant context based on the message contents.
            </summary>
            <param name="Message">The message to resolve.</param>
            <returns>Returns the Guid of the context, or null if the context cannot be resolved.</returns>
        </member>
        <member name="P:Ximura.Communication.MessageResolverExtender.Enabled">
            <summary>
            This property determines whether the message resolver is active. 
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPMessageResolverExtender.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPMessageResolverExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.ProtocolConnectionIdentifiers">
            <summary>
            This class is used to identify a protocol connection.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolConnectionIdentifiers.syncObj">
            <summary>
            This is the syncronization object used for ensuring that only one value is changed at a time.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolConnectionIdentifiers.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolConnectionIdentifiers.Reset">
            <summary>
            This method resets the connection to its default parameters.
            </summary>
        </member>
        <member name="T:Ximura.Communication.DigestMD5AuthHandler">
            <summary>
            This is the digest MD5 authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DigestMD5AuthHandler.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DigestMD5AuthHandler.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="P:Ximura.Communication.DigestMD5AuthHandler.CommandName">
            <summary>
            This is the command name for the Digest MD5 Auth Handler
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportCommandResponse">
            <summary>
            This is the response folder for the transport command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandResponse.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandResponse.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandResponse.Reset">
            <summary>
            This override resets the class parameters
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandResponse.TransportContextID">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandResponse.ConnectionType">
            <summary>
            This property is used to specify a specific context.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandResponse.TransportUri">
            <summary>
            This is the Uri that the command will listen on.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportCommand`1">
            <summary>
            This command provides the base functionality for all transport providers.
            </summary>
            <typeparam name="CNTX">The transport context. This is customized for the specific type of transport.</typeparam>
        </member>
        <member name="F:Ximura.Communication.TransportCommand`1.startState">
            <summary>
            This is the start state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.ProcessRequest(Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method processes the requests from the protocol servers.
            </summary>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming data.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.ContextReset(`0)">
            <summary>
            This method resets the session with the settings and the base command session.
            </summary>
            <param name="context">The context to reset.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.ContextReturn(`0)">
            <summary>
            This method unregisters a context and returns it to the pool.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommand`1.OnTimerEvent(System.Boolean)">
            <summary>
            This timer method closes the expired connections.
            </summary>
            <param name="state">The timer state.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandUDP.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandIPBase`1.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandIPBase`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ListenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ListenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.CfulListenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.CfulListenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.CfulListenProtocolState`2.ConnectionProcess(Ximura.Communication.IXimuraProtocolContext{`0,`1},System.Guid,System.Uri)">
            <summary>
            Ok, weuse this method to get a new protocol context
            </summary>
            <param name="context"></param>
            <param name="ID"></param>
            <param name="remoteID"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_APOP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_APOP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.VerbScope">
            <summary>
            The verb scope is used to determine at what stage the command can be executed.
            </summary>
        </member>
        <member name="F:Ximura.Communication.VerbScope.NotApplicable">
            <summary>
            This is the default state. These verbs cannot be executed.
            </summary>
        </member>
        <member name="F:Ximura.Communication.VerbScope.Any">
            <summary>
            Any POP3 state. Commands such as QUIT and NOOP use this value.
            </summary>
        </member>
        <member name="F:Ximura.Communication.VerbScope.Authorization">
            <summary>
            The POP3 Authorization state.
            </summary>
        </member>
        <member name="F:Ximura.Communication.VerbScope.Transaction">
            <summary>
            The POP3 Transaction state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.MimeMessageTerminator">
            <summary>
            This class is used to terminate a mime based message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMessageTerminator.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeMessageTerminator.Initialize(System.String)">
            <summary>
            This method initializes the message terminator with the boundary string.
            </summary>
            <param name="boundary">The boundary data within the mime seperator.</param>
        </member>
        <member name="M:Ximura.Communication.MultipartFormDataMimeMessageBody.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_OPTIONS">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_OPTIONS.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_OPTIONS.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_SYST.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_SYST.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTPRequestMessage">
            <summary>
            This is the message type used to process incoming FTP requests.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPRequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPRequestMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPRequestMessage.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPRequestMessage.Verb">
            <summary>
            The request verb.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPRequestMessage.Data">
            <summary>
            The request data.
            </summary>
        </member>
        <member name="T:Ximura.Communication.DNSServerState">
            <summary>
            This is the base server state for the FTP Server
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSServerState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSServerState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.Command_Exit_TelnetState">
            <summary>
            This is the Exit command state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Command_Exit_TelnetState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Command_Exit_TelnetState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_NOOP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_NOOP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_NOOP.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="T:Ximura.Communication.MessageResolver">
            <summary>
            This is the base class for the authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageResolver.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageResolver.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TransportConnectionType">
            <summary>
            This enumeration defines the type of transport, namely connection orientated or
            connectionless.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportConnectionType.Undefined">
            <summary>
            The transport type is not defined.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportConnectionType.Connectionless">
            <summary>
            The transport type is connectionless.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportConnectionType.Connectionful">
            <summary>
            The transport type is connection full.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TCPIPTransportBuffer">
            <summary>
            This is the transport buffer used by the TCPIP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Reset">
            <summary>
            This method resets the object in to a null state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Listen(System.Uri,Ximura.Communication.IXimuraTransportContext,System.Nullable{System.Int32})">
            <summary>
            This method opens a listening socket for the Uri Location, which should map to an IP on
            this machine.
            </summary>
            <param name="Location">The location to listen on.</param>
            <param name="context">The context to manage the listening connection.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Listen(System.Uri,Ximura.Communication.IXimuraTransportContext,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            This method opens a listening socket for the Uri Location, which should map to an IP on
            this machine.
            </summary>
            <param name="Location">The location to listen on.</param>
            <param name="context">The context to manage the listening connection.</param>
            <param name="TLSEnabled">Set this to true if you require a secure TLS connection.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.StartSocketAccept(System.Guid,System.Net.Sockets.Socket,System.Nullable{System.Int32})">
            <summary>
            This method processes connection requests  by 
            sending a async call to the AcceptCallback method
            </summary>
            <param name="listener">The listening socket</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.AcceptCallback(System.IAsyncResult)">
            <summary>
            This method receives async connection requests on the listening socket
            and processes them.
            </summary>
            <param name="ar">The async call back object containing the connection request</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Open(System.Uri,Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method opens a TCP/IP connection at the location specified for the context.
            </summary>
            <param name="Location">The Uri location to connect to.</param>
            <param name="context">The context to handle the connection.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Open(System.Uri,Ximura.Communication.IXimuraTransportContext,System.Boolean)">
            <summary>
            This method opens a TCP/IP connection at the location specified for the context.
            </summary>
            <param name="Location">The Uri location to connect to.</param>
            <param name="context">The context to handle the connection.</param>
            <param name="TLSEnabled">This property should be set to true if you require
            the transport buffer to negotiate a secure TLS connection.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Initialize(System.Net.Sockets.Socket,System.Uri,Ximura.Communication.TransportBufferStatus)">
            <summary>
            This method initializrs the buffer.
            </summary>
            <param name="handler">The socket.</param>
            <param name="incomingUri">The uri for the buffer.</param>
            <param name="status">The buffer status.</param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Accept(Ximura.Communication.IXimuraTransportContext)">
            <summary>
            This method accepts the connection and proceeds based on the data presented in the context.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.TrackerValidate(Ximura.Communication.IPBasedTransportBuffer.SocketHolder)">
            <summary>
            This method validates that the tracker is for the same instance of this current buffer. If the tracker 
            cannot be validated, the method will attempt to close the socket in the tracker.
            </summary>
            <param name="tracker">The tracker to validate.</param>
            <returns>Returns true if this is the same.</returns>
        </member>
        <member name="M:Ximura.Communication.TCPIPTransportBuffer.Write">
            <summary>
            This method triggers a write on the transport buffer.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TCPIPTransportBuffer.ConnectionType">
            <summary>
            This override sets the connection type to connectionful.
            </summary>
        </member>
        <member name="T:Ximura.Communication.IPEndPointExtended">
            <summary>
            The IPEndPointExtended is used by the define
            to identify which IP addresses and ports to listen on, and adds an 
            additional parameter "SocketOptions" which can be used for the 
            listener to set specific options such as TLS.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPEndPointExtended.#ctor(System.String)">
            <summary>
            This is the default constructor.
            </summary>
            <param name="location">The location of the IPEndPoint in the form of
            location:port</param>
        </member>
        <member name="M:Ximura.Communication.IPEndPointExtended.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initializes a new instance of the TCPIPListenerIPEndPoint class with the specified 
            address and port number, which is an overriden class of the IPEndPoint class.
            </summary>
            <param name="address">The IP address of the Internet host.</param>
            <param name="port">The listening port required.</param>
        </member>
        <member name="M:Ximura.Communication.IPEndPointExtended.#ctor(System.Int64,System.Int32)">
            <summary>
            Initializes a new instance of the TCPIPListenerIPEndPoint class with the specified 
            address and port number, which is an overriden class of the IPEndPoint class.
            </summary>
            <param name="address">The IP address of the Internet host.</param>
            <param name="port">The listening port required.</param>
        </member>
        <member name="T:Ximura.Communication.TransportCommandCBRequest">
            <summary>
            This is the callback request for the transport command. Currently this class is not used, but is defined for completeness.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBRequest.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBRequest.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.IXimuraProtocolCommandConfigSH">
            <summary>
            This interface is implemented by the protocol to allow transports to retrieve their settings.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraProtocolCommandConfigSH.getTransportSettings(System.String)">
            <summary>
            This method is used to retrieve the transport settings.
            </summary>
            <param name="transport">The transport.</param>
            <returns>The settings object, or null if the settings cannot be found.</returns>
        </member>
        <member name="T:Ximura.Communication.RQCallbackProtocol">
            <summary>
            This is the protocol callback request folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQCallbackProtocol.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RQCallbackProtocol.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RQCallbackProtocol.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.RSCallbackProtocol">
            <summary>
            This is the protocol callback response folder.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSCallbackProtocol.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.RSCallbackProtocol.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.RSCallbackProtocol.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.POP3.AwaitVerbTransactionPOP3.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.AwaitVerbTransactionPOP3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_GET">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_GET.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_GET.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTPServerSettings">
            <summary>
            THis class provides settings for the FTP server and context.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerSettings.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPServerSettings.ConstructResponseMessageCache">
            <summary>
            This method constructs the message response cache.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPResponseMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="P:Ximura.Communication.FTPResponseMessage.FragmentHeaderInitialType">
            <summary>
            This is the fragment type for the outgoing message.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetProtocolCommand">
            <summary>
            The Telnet Protocol is used for text based communication.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TelnetProtocolCommand.tcp">
            <summary>
            This is the tcp transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TelnetProtocolSettings">
            <summary>
            This is the protocol context settings class.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPProtocolCommand">
            <summary>
            This command manages the SMTP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedProtocolCommand`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.IPBasedProtocolCommand`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="F:Ximura.Communication.SMTPProtocolCommand.smtp">
            <summary>
            This is the http transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.SIPProtocolCommand">
            <summary>
            The SIP Protocol is the root command for communication between 
            applications within the Ximura framework.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TransportMetadataContainer">
            <summary>
            This is the protocol metadata container used for the ProtocolExtender.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportMetadataContainer.Scheme">
            <summary>
            This property specifies the transport scheme used to resolve 
            specific transports when initiating connections or listeners.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportBufferPool`1">
            <summary>
            The transport buffer pool provides a pool of transport buffer objects based on the 
            transport settings.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.#ctor(System.String,Ximura.Communication.IXimuraTransportConfigSH,Ximura.Communication.BufferPoolAccess)">
            <summary>
            This is the default constructor.
            </summary>
            <param name="ipSettings">The transport settings.</param>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.ResetPoolObject(`0)">
            <summary>
            This overriden method specifically resets the pool to it default settings.
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.Get">
            <summary>
            This method returns a transport buffer object.
            </summary>
            <returns>Returns a new buffer object or null if the pool has reached its capacity.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.Return(`0)">
            <summary>
            This overriden method deletes off the reference to the connection.
            </summary>
            <param name="value">The Transport buffer to return.</param>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.Connections(Ximura.Communication.TransportBufferStatus)">
            <summary>
            This enumeration retuns the connections by their type.
            </summary>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.GetConnections(System.Boolean)">
            <summary>
            This method copies the current connections in to a list.
            </summary>
            <param name="inactive">Set this to true if you only want inactive connections.</param>
            <returns>Returns a list of connections with 0 or more connections.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportBufferPool`1.GetConnection(System.Guid)">
            <summary>
            This method retrieves the specific transport buffer based on the connection ID.
            </summary>
            <param name="ConnectionID">The connection ID.</param>
            <returns>Return the transport buffer or null if the connection is no longer active.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportCommandNamedPipes.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SimplexOutgoingOpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SimplexOutgoingOpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.POP3RequestMessage">
            <summary>
            This message type is used to process incoming POP3 requests.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3RequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.FTPProtocolCommand">
            <summary>
            This is the FTP Protocol command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.FTPProtocolCommand.ftp">
            <summary>
            This is the http transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.TelnetCloseState">
            <summary>
            This is the telnet close state for a session.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetCloseState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetCloseState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.TelnetProtocolContext">
            <summary>
            The telnet protocol context is used to hold connection information.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTP.Verb_VRFY">
            <summary>
            This is the verify command. This will be disabled by default. If you wish to implement
            this command, please disable this state and create a new state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_VRFY.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_VRFY.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_VRFY.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="P:Ximura.Communication.SMTP.Verb_VRFY.EHLOMethods">
            <summary>
            This override adds the VRFY string to the EHLO extended headers.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RSET.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RSET.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_RSET.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="T:Ximura.Communication.SMTPProtocolContext">
            <summary>
            This command handles the SMTP protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Communication.UDPTransportPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportCommandRequest">
            <summary>
            This is the request folder for the transport command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandRequest.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandRequest.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandRequest.Reset">
            <summary>
            This override resets the class parameters
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.TransportContextID">
            <summary>
            This property specifies the context on the Transport.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.ServerContextID">
            <summary>
            This property specifies the context on the Server.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.TransportUri">
            <summary>
            This property specifies the uri for the transport
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.TransportUriConnectionLimit">
            <summary>
            This property specifies the maximum number of connections permitted while in listening mode.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.ServerAddress">
            <summary>
            This property specifies the address of the server command responsible for the transport connection.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.MessageType">
            <summary>
            This property specifies the message type for new data.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.Message">
            <summary>
            This property contains the message to be transmitted to the remote party.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportCommandRequest.SignalClose">
            <summary>
            This property signals that the connection should be closed.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportContextUDP.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="P:Ximura.Communication.TransportContextUDP.DefaultScheme">
            <summary>
            This override sets 'tcp' as the default scheme 
            </summary>
        </member>
        <member name="T:Ximura.Communication.MimeHeaderFragment">
            <summary>
            This header extension conforms to RFC2047 and allows folding.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MimeHeaderFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.MessageTemplate">
            <summary>
            This structure contains the message string.
            </summary>
        </member>
        <member name="M:Ximura.Communication.MessageTemplate.FormatMessage(System.Int32,System.Object[])">
            <summary>
            This message formats the parameters
            </summary>
            <param name="code"></param>
            <param name="list"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.MessageTemplate.ExtendedFormat(System.Int32,System.String[])">
            <summary>
            This method prepares the extended string format.
            </summary>
            <param name="code"></param>
            <param name="items"></param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Communication.HTTPProtocolCommand">
            <summary>
            This command handles the HTTP Protocol command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPProtocolCommand.http">
            <summary>
            This is the http transport provider.
            </summary>
        </member>
        <member name="F:Ximura.Communication.HTTPProtocolCommand.https">
            <summary>
            This is the https transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.HTMLBodyFragment">
            <summary>
            This call contains a HTML body.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTMLBodyFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_STOR.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_STOR.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PASV.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PASV.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PASV.ServerConnectionRequestAddress(Ximura.Communication.FTPServerContext)">
            <summary>
            This is the address of this command. This value is passed as a parameter to
            the protocol when initiating a listening connection to allow the protocol to
            call back the server when new connection requests are received.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="T:Ximura.Communication.Telnet_Password_State">
            <summary>
            This is the telnet start state for a session.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_Password_State.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.Telnet_Password_State.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.TelnetResponseMessage">
            <summary>
            This is the default message type for the internet message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.TelnetRequestPasswordMessage">
            <summary>
            This is the default message type for the internet message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TelnetRequestPasswordMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_QUIT.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_QUIT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_QUIT.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.Verb_HELP.Receive(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method processes the incoming command.
            </summary>
            <param name="context">The current context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns true if the context should be reset, false if the context should persist.</returns>
        </member>
        <member name="P:Ximura.Communication.SMTP.Verb_HELP.EHLOMethods">
            <summary>
            This override adds the HELP string to the EHLO extended headers.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPDataRequestMessage">
            <summary>
            This message is responsible for receiving and storing the incoming SMTP message to a file
            based message store.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPDataRequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPDataRequestMessage.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPDataRequestMessage.FragmentHeaderInitialType">
            <summary>
            This method returns the initial fragment type for the class.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ClosingProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ClosingProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.ProtocolRequestException">
            <summary>
            This exception is thrown during general request exceptions.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolRequestException.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
        </member>
        <member name="M:Ximura.Communication.ProtocolRequestException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="status"></param>
            <param name="subStatus"></param>
            <param name="ex"></param>
        </member>
        <member name="M:Ximura.Communication.ProtocolRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Communication.ProtocolFlowControl">
            <summary>
            This setting determines the protocol duplex state.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolFlowControl.HalfDuplex">
            <summary>
            A half-duplex protocol connection can receive and transmit information, but
            not at the same time. This is used by standard Request/Response
            protocols.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolFlowControl.FullDuplex">
            <summary>
            Full-duplex protocol connection can receive requests and send responses at 
            the same time.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolFlowControl.SimplexOutgoing">
            <summary>
            The protocol connection is a straight broadcast connection and does
            not receive any response to the information broadcast.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolFlowControl.SimplexIncoming">
            <summary>
            The protocol connection is a straight listening connection and does
            not require any response to the information broadcast.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolFlowControl.Custom">
            <summary>
            No specific format can be defined for this protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_DELE.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_DELE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.HTTPProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataCfulListenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTPDataCfulListenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.SMTP.StartSMTP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.StartSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.SMTPRequestMessage">
            <summary>
            This is the SMTP request message.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPRequestMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPRequestMessage.Verb">
            <summary>
            The request verb
            </summary>
        </member>
        <member name="P:Ximura.Communication.SMTPRequestMessage.Data">
            <summary>
            The request data
            </summary>
        </member>
        <member name="T:Ximura.Communication.AuthHandlerMetadataContainer">
            <summary>
            This is the authorization handler metadata container used for the AuthHandlerExtender.
            </summary>
        </member>
        <member name="M:Ximura.Communication.AuthHandlerMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="P:Ximura.Communication.AuthHandlerMetadataContainer.Priority">
            <summary>
            This is the priority property used to specify the order in which 
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportBufferStatus">
            <summary>
            This transport buffer status. 
            </summary>
        </member>
        <member name="M:Ximura.Communication.SimplexIncomingOpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SimplexIncomingOpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.MimeMessageFragmentBody.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_POST">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_POST.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_POST.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_MODE.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_MODE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTP.AwaitVerbWithDataFTP">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.AwaitVerbWithDataFTP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.AwaitVerbWithDataFTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.AwaitVerbWithDataFTP.Close(Ximura.Communication.IXimuraServerContext{Ximura.Communication.RQServer,Ximura.Communication.RSServer,Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer,Ximura.Communication.ServerConfiguration,Ximura.Communication.ServerPerformance},Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.RQCallbackServer,Ximura.Communication.RSCallbackServer})">
            <summary>
            This method manages the close requests.
            </summary>
            <param name="context"></param>
            <param name="job"></param>
            <param name="Data"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Communication.TransportSettings.#ctor">
            <summary>
            This constructor is called by the FSM when initiating the settings.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.CloseSMTP.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTP.CloseSMTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.SIPRSServer">
            <summary>
            This is the root request folder for the Purchase Process Command
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRSServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRSServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.SIPRSServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.SIPRQCallbackServer">
            <summary>
            This is the root request folder for the Purchase Process Command
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRQCallbackServer.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPRQCallbackServer.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.SIPRQCallbackServer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.IXimuraTransportConfigSH">
            <summary>
            This interface aupplies the setting for a specific protocol
            </summary>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransportConfigSH.GetListenerSetting(System.String)">
            <summary>
            Get Listener Setting of specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransportConfigSH.GetSenderSetting(System.String)">
            <summary>
            Get Sender Setting of specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="M:Ximura.Communication.IXimuraTransportConfigSH.GetPoolSetting(System.String,System.Int32)">
            <summary>
            This method returns listener specific settings.
            </summary>
            <param name="Type">The setting name.</param>
            <returns>The string containing the setting or null if the setting cannot be found.</returns>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.Name">
            <summary>
            This is the public name.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.Description">
            <summary>
            This is the public description.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.UsePerformanceCounters">
            <summary>
            This boolean value is used to indicate whether to use 
            preformance counters.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.ListenerEnabled">
            <summary>
            This boolean value indicates whether the listener should be enabled.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.SenderEnabled">
            <summary>
            This boolean value indicates whether the sender should be enabled.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.PoolMin">
            <summary>
            The pool minimum size.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.PoolMax">
            <summary>
            The pool maximum size.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.PoolPrefer">
            <summary>
            The pool prefered size.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.PoolBufferIncoming">
            <summary>
            The pool incoming byte buffer size.
            </summary>
        </member>
        <member name="P:Ximura.Communication.IXimuraTransportConfigSH.PoolBufferOutgoing">
            <summary>
            The pool outgoing byte buffer size.
            </summary>
        </member>
        <member name="M:Ximura.Communication.OpenTCPIPTransportState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.OpenTCPIPTransportState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.ClosedProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ClosedProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerSettings.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PASS.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PASS.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_NOOP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_NOOP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTPStatusCodes">
            <summary>
            This class provides shortcuts to the FTP codes.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPStart">
            <summary>
            This is the initial state for the SIP based protocol.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPStart.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPStart.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.ServerAwaitVerbState`6">
            <summary>
            This is the base class for all verb filter based states.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerAwaitVerbState`6.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ServerAwaitVerbState`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.TransportExtender">
            <summary>
            The protocol extender is used to contain the collection of protocols.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.SetEnabled(Ximura.Communication.IXimuraTransport,System.Boolean)">
            <summary>
            This property sets the enabled state for the protocol.
            </summary>
            <param name="item">The transport.</param>
            <param name="value">The enabled value.</param>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.TransportResolve(System.String)">
            <summary>
            This method resolves the transport based on the protocol scheme.
            </summary>
            <param name="Scheme">The scheme for the protocol, i.e. tcp://</param>
            <returns>Returns the transport, or null if the scheme cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.GetScheme(Ximura.Communication.IXimuraTransport)">
            <summary>
            This property is used to return the enabled object settings.
            </summary>
            <param name="state">The object.</param>
            <returns>The enabled boolean value of the object.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.SetScheme(Ximura.Communication.IXimuraTransport,System.String)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The object.</param>
            <param name="value">The enabled value.</param>
        </member>
        <member name="M:Ximura.Communication.TransportExtender.ItemGet(Ximura.Communication.IXimuraTransport)">
            <summary>
            This method gets an object from the collection.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Communication.TransportExtender.DefaultTransport">
            <summary>
            This is the default transport used for outgoing connections where a protocol 
            is not specified.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ListenTCPIPTransportState.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ListenTCPIPTransportState.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.ListenTCPIPTransportState.ListenRequest(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method sets the transport context server connection parameters.
            </summary>
            <param name="context">The transport context.</param>
            <param name="job">The current job.</param>
            <param name="Data">The data.</param>
            <returns>Returns false as this context should be accepted.</returns>
        </member>
        <member name="M:Ximura.Communication.ListenTCPIPTransportState.ListenConfirm(Ximura.Communication.TransportContext,Ximura.Server.SecurityManagerJob,Ximura.Command.RQRSContract{Ximura.Communication.TransportCommandRequest,Ximura.Communication.TransportCommandResponse})">
            <summary>
            This method is called after the transport-server handshake is confirmed. This method starts the listening process.
            </summary>
            <param name="context">The transport context.</param>
            <param name="job">The job.</param>
            <param name="Data">The request/response data.</param>
            <returns>Returns false is the listening process has started successfully.</returns>
        </member>
        <member name="M:Ximura.Communication.TransportCommandTLS.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SocketHolder">
            <summary>
            This struct is used to hold the async data for accepting connections.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HalfDuplexOpenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HalfDuplexOpenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.IXimuraProtocolStream">
            <summary>
            This is the stream based interface implmented by protocol contextes.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_STAT.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_STAT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.POP3StatusCodes">
            <summary>
            These are the specific service codes for the POP3 system, these specific codes are used 
            so that the particular template can be used.
            </summary>
        </member>
        <member name="M:Ximura.Communication.PreambleMimeMessageBodyFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_HEAD">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_HEAD.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_HEAD.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_DELETE">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_DELETE.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_DELETE.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.HTTPServerRequest.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTPServerRequest.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.HTTPServerRequest.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Communication.HTMLErrorBodyFragment">
            <summary>
            This method contains a fragment
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTMLErrorBodyFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTMLErrorBodyFragment.Reset">
            <summary>
            This override resets the error code.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTMLErrorBodyFragment.HasContentType">
            <summary>
            This property identifies that the body has a content type.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTMLErrorBodyFragment.ContentType">
            <summary>
            This is the content type for the HTML error file.
            </summary>
        </member>
        <member name="P:Ximura.Communication.HTMLErrorBodyFragment.ErrorTransform">
            <summary>
            This is the base compiled error transform.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PORT.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_PORT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.DNSServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.DNSServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.StartAccept`1">
            <summary>
            This delegate is used to accept a new connection.
            </summary>
            <param name="listener"></param>
        </member>
        <member name="T:Ximura.Communication.SyncQueue`1">
            <summary>
            This class provides a simplyfied queue that provides basic queue functionality that is thread safe.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.Communication.POP3ProtocolCommand">
            <summary>
            This is the protocol for the POP3 protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.POP3ProtocolCommand.pop3">
            <summary>
            This is the tcp transport provider.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ProtocolCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ProtocolCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPVerb_PUT">
            <summary>
            The is the HTTP Get verb.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_PUT.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPVerb_PUT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPAwaitVerb">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPAwaitVerb.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPAwaitVerb.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.DNSServerContext.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolShortcuts">
            <summary>
            The Helper class is used to receoncile command address.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.TelnetProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.TelnetProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.XRPProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.XRPProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.SIPProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.SIPProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.HTTPProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.HTTPProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.POP3Protocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.POP3ProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.SMTPProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.SMTPProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.FTPProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.FTPProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.FTPDataProtocol">
            <summary>
            This is the terminal and site reconciliation command
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolShortcuts.FTPDataProtocolAddress">
            <summary>
            This is the address for the receonciliation command.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ProtocolShortcuts.#cctor">
            <summary>
            This is the static constructor.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ConnectionInfo">
            <summary>
            This structure is used to hold protocol/server information.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ConnectionInfo.ServerAddress(System.Object)">
            <summary>
            This shortcut method allows an envelope address to be easily created for
            the sub-command.
            </summary>
            <param name="subCommand">The subcommand object.</param>
            <returns>Returns an envelope address. If the server ID is empty, then this 
            method will return a null destination.</returns>
        </member>
        <member name="P:Ximura.Communication.ConnectionInfo.ServerID">
            <summary>
            This is the command ID of the server.
            </summary>
        </member>
        <member name="P:Ximura.Communication.ConnectionInfo.ConnectionID">
            <summary>
            This is the connection ID shared between the protocol and the server.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ServerAction">
            <summary>
            This enumeration defines the standard interaction from the protocol to the server.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerAction.ConnectionRequest">
            <summary>
            This action type is sent when a new connection request is received by the protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerAction.ConnectionClosed">
            <summary>
            This action type is used when a connection close event is initiated by the protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerAction.MessageReceived">
            <summary>
            This action type is used when a message is received for the particular connection.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ServerAction.Custom">
            <summary>
            This action type is reserved for custom messages between the protocol and the server.
            </summary>
        </member>
        <member name="T:Ximura.Communication.ProtocolAction">
            <summary>
            This enumeration defines the type of action that server can request from the protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.Listen">
            <summary>
            This action type is used by the server when attempting to 
            initiate a listening connection.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.OpenPassive">
            <summary>
            This action type is used by the server when attemption to 
            initiate a remote connection in passive mode.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.OpenActive">
            <summary>
            This action type is used by the server when attemption to 
            initiate a remote connection in active mode.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.CloseConnection">
            <summary>
            This action type is used by the server to attempt to close an active connection.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.Transmit">
            <summary>
            This action type is used by the server when transmitting a message to an active connection.
            </summary>
        </member>
        <member name="F:Ximura.Communication.ProtocolAction.Custom">
            <summary>
            This action type is reserved for custom messages between the server and the protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.SMTPServerCommand">
            <summary>
            This command processes SMTP messages sent from the SMTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.startState">
            <summary>
            This is the start state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.awaitVerbState">
            <summary>
            This is the await state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.awaitVerbMailState">
            <summary>
            This is the await mail state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.awaitVerbRcptState">
            <summary>
            This is the await rcpt state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.awaitVerbDataState">
            <summary>
            This is the await rcpt state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.closeState">
            <summary>
            This is the close state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.SMTPServerCommand.plainAuth">
            <summary>
            This is the plain text authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SMTPServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.SMTPServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="M:Ximura.Communication.SMTPDataResponseMessage.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="T:Ximura.Communication.SIPProtocolSettings">
            <summary>
            This is the base protocol command context settings.
            </summary>
        </member>
        <member name="M:Ximura.Communication.SIPProtocolSettings.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportFlowControl">
            <summary>
            This setting determines the transport duplex state.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportFlowControl.FullDuplex">
            <summary>
            Full-duplex protocol connection can receive requests and send responses at 
            the same time.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportFlowControl.HalfDuplex">
            <summary>
            A half-duplex protocol connection can receive and transmit information, but
            not at the same time. This is used by standard Request/Response
            protocols.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportFlowControl.SimplexOutgoing">
            <summary>
            The protocol connection is a straight broadcast connection and does
            not receive any response to the information broadcast.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportFlowControl.SimplexIncoming">
            <summary>
            The protocol connection is a straight listening connection and does
            not require any response to the information broadcast.
            </summary>
        </member>
        <member name="F:Ximura.Communication.TransportFlowControl.Custom">
            <summary>
            No specific format can be defined for this protocol.
            </summary>
        </member>
        <member name="T:Ximura.Communication.TransportCommandCBResponse">
            <summary>
            This is the callback response for the transport command. Currently this class is not used, but is defined for completeness.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBResponse.#ctor">
            <summary>
            This is the default constuctor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBResponse.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The base container.</param>
        </member>
        <member name="M:Ximura.Communication.TransportCommandCBResponse.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="F:Ximura.Communication.TransportCommandTCPIP.listenState">
            <summary>
            This is the start state.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandTCPIP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.TransportCommandTCPIP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.ClessListenProtocolState`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.ClessListenProtocolState`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_PASS.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3.Verb_PASS.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="T:Ximura.Communication.POP3ServerCommand">
            <summary>
            This is the command for the POP3 server.
            </summary>
        </member>
        <member name="F:Ximura.Communication.POP3ServerCommand.startState">
            <summary>
            This is the start state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.POP3ServerCommand.awaitVerbState">
            <summary>
            This is the await state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.POP3ServerCommand.closeState">
            <summary>
            This is the close state for the FTP protocol.
            </summary>
        </member>
        <member name="F:Ximura.Communication.POP3ServerCommand.plainAuth">
            <summary>
            This is the plain text authentication handler.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerCommand.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.POP3ServerCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.POP3ServerCommand.ProtocolCommandID">
            <summary>
            This override provides the GUID of the protocol command.
            </summary>
            <returns>Return a GUID.</returns>
        </member>
        <member name="M:Ximura.Communication.POP3ProtocolContext.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.BodyFragment.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Communication.BodyFragment.Reset">
            <summary>
            This is the reset method to set the content.
            </summary>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPStart">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPStart.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPStart.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.HTTP.HTTPAuthenticate">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPAuthenticate.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.HTTP.HTTPAuthenticate.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_QUIT.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.Verb_QUIT.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="T:Ximura.Communication.FTP.StartFTP">
            <summary>
            This is the start state fro the server.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.StartFTP.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Communication.FTP.StartFTP.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
    </members>
</doc>
