<?xml version="1.0"?>
<doc>
    <assembly>
        <name>XimuraFramework</name>
    </assembly>
    <members>
        <member name="T:Ximura.Framework.JobContext`6">
            <summary>
            This context is used by finite state machines that require application support.
            </summary>
        </member>
        <member name="T:Ximura.Framework.Context`4">
            <summary>
            Context is the base object for the Finite State Machine.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMContext">
            <summary>
            This interface is implemented by all contexts in the FSM architecture.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraApplicationDefinition">
            <summary>
            This interface is used to provide application based configuration settings.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraApplication">
            <summary>
            Summary description for IXimuraApplication.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraApplication.ApplicationID">
            <summary>
            This is the application ID.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraApplicationDefinition.ApplicationName">
            <summary>
            This is the application name.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommand">
            <summary>
            IXimuraCommand is the base interface for the command object.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommand.CommandID">
            <summary>
            The command unique identifier.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommand.CommandName">
            <summary>
            The command name. This is used in to the config file to retrieve the
            settings.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommand.CommandDescription">
            <summary>
            The command friendly description
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMContext.UserName">
            <summary>
            This property contains the session username.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMContext.Domain">
            <summary>
            This property contains the session domain.
            </summary>
        </member>
        <member name="F:Ximura.Framework.Context`4.mState">
            <summary>
            This is the current state.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.CheckChangeState(System.String)">
            <summary>
            This method checks and then changes the state. If the state is not valid an exception is thrown.
            </summary>
            <param name="stateName">The state name to check.</param>
            <exception cref="!:Ximura.InvalidStateNameFSMException">This exception is thrown if the stateName cannot be resolved.</exception>
        </member>
        <member name="M:Ximura.Framework.Context`4.ChangeState">
            <summary>
            This method changes the states to the initial state.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.ChangeState(System.String)">
            <summary>
            This method changes the state.
            </summary>
            <param name="stateName">The state. If this is set to null the initial state will be set.</param>
        </member>
        <member name="M:Ximura.Framework.Context`4.CheckState(System.String)">
            <summary>
            This method returns true if the state exists in the FSM.
            </summary>
            <param name="stateName">The state.</param>
        </member>
        <member name="M:Ximura.Framework.Context`4.StateCollection">
            <summary>
            This method returs a collection of states.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Ximura.Framework.Context`4.mContextSession">
            <summary>
            This is the internal session which can be used to make requests to the rest of the 
            Ximura application.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.ContextSessionInitialize(System.String)">
            <summary>
            This method creates a context session if one doesn't exist already.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.ContextSessionInitialize(System.String,System.String)">
            <summary>
            This method creates a context session if one doesn't exist already.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.GetObjectPool(System.Type)">
            <summary>
            This method retrieves the object pool for the particular object type.
            </summary>
            <param name="objectType">The object type.</param>
            <returns>Returns the object pool.</returns>
        </member>
        <member name="M:Ximura.Framework.Context`4.GetObjectPool``1">
            <summary>
            This generic method retrieves a pool manager for the type specified.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <returns>Returns the pool manager.</returns>
        </member>
        <member name="M:Ximura.Framework.Context`4.GetObject``1">
            <summary>
            This generic method retrieves an object from the pool manager for the type specified.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <returns>Returns the pool manager object.</returns>
        </member>
        <member name="M:Ximura.Framework.Context`4.GetObject``1(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This generic method retrieves an object from the pool and deserializes the data in the info object in to the 
            new pool object.
            </summary>
            <typeparam name="T">The type specified.</typeparam>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
            <returns>An object of the type defined in the pool definition, with the serialization data.</returns>
        </member>
        <member name="M:Ximura.Framework.Context`4.ObjectPoolReturn">
            <summary>
            This method returns the object ot the pool.
            </summary>
        </member>
        <member name="F:Ximura.Framework.Context`4.mContextPool">
            <summary>
            The context pool.
            </summary>
        </member>
        <member name="F:Ximura.Framework.Context`4.mContextSettings">
            <summary>
            This is the Finite State Machine.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.Reset">
            <summary>
            This is the default reset method as implemented by the IXimuraPoolableObject interface.
            </summary>
        </member>
        <member name="M:Ximura.Framework.Context`4.Reset(Ximura.Framework.IXimuraFSMSettingsBase,Ximura.IXimuraSessionRQ,Ximura.Framework.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the context to the default start state..
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="contextSession">This is the context session.</param>
        </member>
        <member name="M:Ximura.Framework.Context`4.SenderIdentityConfirm(Ximura.CommandRSEventArgs)">
            <summary>
            This method is used to validate that a callback is actually for this current instance.
            We need to do this as we recycle the contexts and it is possible that the callback is for a
            previous session.
            </summary>
            <param name="args">The callback arguments.</param>
            <returns>Returns true if the callback is for this specific instance.</returns>
        </member>
        <member name="M:Ximura.Framework.Context`4.SenderIdentitySet(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            This method sets the context sender identity in the Envelope.
            </summary>
            <param name="Env">The envelope to set the identity.</param>
        </member>
        <member name="P:Ximura.Framework.Context`4.CurrentState">
            <summary>
            This is the current purchase state.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.UserName">
            <summary>
            This property contains the session username.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.Domain">
            <summary>
            This property contains the session domain.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ContextSession">
            <summary>
            This is the context session.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ContextSessionNegotiate">
            <summary>
            This protected property is used for authentication services within the context.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ContextPoolAccess">
            <summary>
            This method allows access the context pool
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.CanPool">
            <summary>
            This method returns true if the object can be pooled.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.TrackID">
            <summary>
            This is the object pool tracking ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ObjectPool">
            <summary>
            This property sets a reference to the object pool on the object
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ObjectPoolCanReturn">
            <summary>
            This boolean property determines whether the object can return to the pool.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.EnvelopeHelper">
            <summary>
            This is the envelope helper for the context.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ContextSettings">
            <summary>
            This is the connection to the FSM settings and services.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.SignatureID">
            <summary>
            This is the unique id for the context. 
            This will change each time the object is reset.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ContextPoolAccessGranted">
            <summary>
            This propery determines whether the context can get other contexts.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ApplicationName">
            <summary>
            The application name.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ApplicationID">
            <summary>
            The application ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.ApplicationDescription">
            <summary>
            The application description.
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.CommandID">
            <summary>
            The command ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.CommandName">
            <summary>
            Te command name
            </summary>
        </member>
        <member name="P:Ximura.Framework.Context`4.CommandDescription">
            <summary>
            The command description
            </summary>
        </member>
        <member name="F:Ximura.Framework.JobContext`6.mJob">
            <summary>
            The job for the request.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobContext`6.#ctor">
            <summary>
            This is the default context for the PPC.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobContext`6.Reset">
            <summary>
            This method rests the context
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobContext`6.Reset(Ximura.Framework.IXimuraFSMSettingsBase,Ximura.Framework.SecurityManagerJob,Ximura.Framework.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the connection state to ClosedRBPState.
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="job">The job request.</param>
        </member>
        <member name="M:Ximura.Framework.JobContext`6.Reset(Ximura.Framework.IXimuraFSMSettingsBase,Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`2,`3},Ximura.Framework.IXimuraFSMContextPoolAccess)">
            <summary>
            This method resets a connection and sets the connection state to ClosedRBPState.
            </summary>
            <param name="fsm">A reference to the finite state machine.</param>
            <param name="job">The job request.</param>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.Job">
            <summary>
            The job.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.Destination">
            <summary>
            The envelope data destination.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.Data">
            <summary>
            This is the job envelope.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.Request">
            <summary>
            This is the job request.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.Response">
            <summary>
            This is the job response.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobContext`6.ChildJobPriority">
            <summary>
            This property determines the child job priorities
            </summary>
        </member>
        <member name="T:Ximura.Framework.SecurityManagerJob">
            <summary>
            This is the Security Manager job object.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CompletionJobWrapperBase">
            <summary>
            Summary description for CompletionJobWrapperBase.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobWrapperBase.jobRequests">
            <summary>
            The job requests.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobWrapperBase.mParentJob">
            <summary>
            The parent job.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.Reset">
            <summary>
            This private method reset the Completion job.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.ProcessRequestAsync(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This protected method is used to add a job to the collection.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The guid of the job queued.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJobWrapperBase.RemoveJob(System.Guid,System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This method will remove a child job and call any delegate.
            </summary>
            <param name="jobID">The job ID</param>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Framework.CompletionJobWrapperBase.WorkTable">
            <summary>
            This is the worktable that contains the jobs.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CompletionJobWrapperBase.ParentJob">
            <summary>
            This is the parent security manager job
            </summary>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.#ctor">
            <summary>
            This is the job pool constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.Initialize(Ximura.JobBase,Ximura.Framework.SessionToken,Ximura.Framework.SecurityManagerJob,Ximura.CommandRSCallback,Ximura.CommandProgressCallback)">
            <summary>
            This method initializes the session.
            </summary>
            <param name="secMan">The security manager.</param>
            <param name="jobRQ">The job request.</param>
            <param name="token">The session token.</param>
            <param name="parentJob">The parent job. This should be left null if this is not a child job.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.Reset">
            <summary>
            This method resets the object to its initial state.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.IncrementChildJobCount">
            <summary>
            This method increments the total job count.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="priority">The request priority.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ProcessRequest(Ximura.IXimuraRQRSEnvelope,Ximura.JobPriority,Ximura.CommandProgressCallback)">
            <summary>
            Process a synchronous request.
            </summary>
            <param name="data">The data.</param>
            <param name="priority">The request priority.</param>
            <param name="ProgressCallback">The progress calback delegate. 
            This can be used to report progress during long running processes.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This protected method is used to add a job to the collection.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgessCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.CreateCompletionJob(Ximura.Framework.CompletionJobCallBack)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.CreateCompletionJob(Ximura.Framework.CompletionJobCallBack,System.Boolean,System.Int32)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="AutoExecute">The boolean property indicates whether the job request should execute immediately.</param>
            <param name="throttleThreshold">This parameter specifies the maximum number of jobs that will be processed in parallel. If this is
            set to 0 or below throttling will not be implemented.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.CreateCompletionJob(Ximura.Framework.CompletionJobCallBack,System.Object)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="state">The callback state.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.CreateCompletionJob(Ximura.Framework.CompletionJobCallBack,System.Object,System.Boolean,System.Int32)">
            <summary>
            This method is used to create a completion job.
            </summary>
            <param name="callback">The callback to use when the job is complete.</param>
            <param name="state">The callback state.</param>
            <param name="AutoExecute">The boolean property indicates whether the job request should execute immediately.</param>
            <param name="throttlingThreshold">This parameter specifies the maximum number of jobs that will be processed in parallel. If this is
            set to 0 or below throttling will not be implemented.</param>
            <returns>A completion job.</returns>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.SignalComplete">
            <summary>
            This method is used to signal that the job is complete.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.ChildJobComplete(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This method is used to signal that a child job is complete.
            </summary>
            <param name="childJob"></param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.SetCompletionType(Ximura.SCMJobCompletionType)">
            <summary>
            This method sets the job completion time out.
            </summary>
            <param name="completionType">The completion type.</param>
        </member>
        <member name="M:Ximura.Framework.SecurityManagerJob.SetCompletionType(Ximura.SCMJobCompletionType,System.Int32)">
            <summary>
            This method sets the job completion time out.
            </summary>
            <param name="completionType">The completion type.</param>
            <param name="Timeout">The time out.</param>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.ParentID">
            <summary>
            The parent Job ID or Guid empty if there isn't a parent job.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.UserID">
            <summary>
            This is the user ID of the user that made the request.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.Command">
            <summary>
            The command
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.BaseJob">
            <summary>
            This is the base job for the request.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.ActiveThread">
            <summary>
            This property is the active thread for the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.JobType">
            <summary>
            This property is the Dispatcher Job type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.JobCallback">
            <summary>
            This property is the job callback to the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.IsChildJob">
            <summary>
            This boolean property identifies whether the job is a child job.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.ChildJobDepth">
            <summary>
            This integer property identifies the depth from the original parent. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.HasChildren">
            <summary>
            This boolean property identifies whether the job has child jobs.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.TotalChildJobCount">
            <summary>
            This property is the total number of child job that have 
            been executed (but not necessarily completed). This is a recursive value.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SecurityManagerJob.JobCompletionType">
            <summary>
            This is the completion job type.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CompletionJob">
            <summary>
            The CompletionJob object is used to run multiple parallel jobs within a 
            command and then to signal using a single callback when all the jobs
            have completed, or when the job has timed out.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.InitializeJob">
            <summary>
            This overriden method is used to initialize any variables before the initial
            Reset() is called.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Reset">
            <summary>
            This private method reset the Completion job.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Initialize(Ximura.Framework.SecurityManagerJob,Ximura.Framework.CompletionJobCallBack,System.Object)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Initialize(Ximura.Framework.SecurityManagerJob,Ximura.Framework.CompletionJobCallBack,System.Object,System.Boolean,System.Int32)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
            <param name="AutoExecute">This method identifies whether the jobs will execute automatically and only signal after the complete method has been set.</param>
            <param name="throttleThreshold">The throttle threshold is the amount of queued jobs that 
            will trigger the throttle flag to be set.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Initialize(Ximura.Framework.SecurityManagerJob,Ximura.Framework.CompletionJobCallBack,System.Object,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            This private method initializes the completion job.
            </summary>
            <param name="job">The parent job.</param>
            <param name="callback">The completion callback.</param>
            <param name="state">The object state.</param>
            <param name="AutoExecute">This method identifies whether the jobs will execute automatically and only signal after the complete method has been set.</param>
            <param name="throttleThreshold">The throttle threshold is the amount of queued jobs that 
            will trigger the throttle flag to be set.</param>
            <param name="trace">The trace flag determines whether the completion job should submit trace
            data during the job processing.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.OnTimeOut(System.Object)">
            <summary>
            This method is called when the job times out.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.SubmitComplete">
            <summary>
            This method can be called to signal that a completion job is complete.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Abort">
            <summary>
            This method aborts the completion job.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Execute">
            <summary>
            This method executes all the containing jobs.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Execute(System.Int32)">
            <summary>
            This method executes all the containing jobs.
            </summary>
            <param name="Timeout">The timeout period in which the job should execute in its entirity.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Execute(System.Int32,System.Boolean)">
            <summary>
            This method executes all the containing jobs.
            </summary>
            <param name="Timeout">The timeout period in which the job should execute in its entirity.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.SubmitJob(System.Guid)">
            <summary>
            This method submits the job.
            </summary>
            <param name="jobID"></param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.HasErrors">
            <summary>
            This method returns true if the completion job has errors.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.DependencyIDHasErrors(System.String)">
            <summary>
            This method returns true if the dependency ID has been set in an error state.
            </summary>
            <param name="dependencyID"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ResetDependencyID(System.String)">
            <summary>
            This method will reset the dependency.
            </summary>
            <param name="dependencyID"></param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ThrottleSet">
            <summary>
            This method sets the throttle ManualResetEven and allows any threads held in the Throttle 
            method to proceed.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ThrottleReset">
            <summary>
            This method reset the throttle and holds any threads which call the Throttle method.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.IsThrottling">
            <summary>
            This method returns true if 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Throttle">
            <summary>
            This method will suspend the entry thread until the throttling queue has reached 0.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessTimeOuts">
            <summary>
            This method is used to identify any jobs that have timed out and are blocking the queue.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.Throttle(System.Int32)">
            <summary>
            This method will suspend the entry thread until 
            the completion job is no longer throttling.
            </summary>
            <param name="timeOut">The time out in milliseconds specifying 
            the maximum amount of time that the thread should wait.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsync(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsyncWithDependency(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsyncWithDependency(Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.ProcessRequestAsyncWithDependency(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String,Ximura.DependencyValidateRSCallback)">
            <summary>
            Process an asychronous request.
            </summary>
            <param name="jobID">The job ID. This should be set to a new Guid.</param>
            <param name="data">The data</param>
            <param name="RSCallback">The call back completion delegate.</param>
            <param name="ProgressCallback">The request progress delegate. Set this to null if not needed.</param>
            <param name="priority">The request priority.</param>
            <param name="dependencyKey">The dependency key, if this is set to null the key is ignored.</param>
            <param name="ValidateRSCallBack">The delegate should contain the code to validate the callback.</param>
            <returns>The job guid.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority,System.String,Ximura.DependencyValidateRSCallback)">
            <summary>
            This overriden method adds a job to the collection. Jobs with a dependency ID will be
            queued behind earlier jobs with the same ID.
            </summary>
            <param name="newJobID">The job identifier.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The callback.</param>
            <param name="ProgressCallback">The progress callback.</param>
            <param name="priority">The job priority.</param>
            <param name="dependencyID">The dependency identifier.</param>
            <param name="ValidateRSCallBack"></param>
            <returns>The job ID.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.AddJob(System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobPriority)">
            <summary>
            This method redirects any job requests without a dependency ID to this code with this callback.
            </summary>
            <param name="jobID">The job identifier.</param>
            <param name="data">The data.</param>
            <param name="RSCallback">The callback.</param>
            <param name="ProgessCallback">The progress callback.</param>
            <param name="priority">The job priority.</param>
            <returns>The job ID.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.RegisterLinkedJob(System.String,System.Guid)">
            <summary>
            This method links the dependency job in the dependency tree.
            </summary>
            <param name="dependencyID">The dependency ID.</param>
            <param name="newJobID">The new job.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.RQCallback(System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This is the internal callback point for the associated jobs.
            </summary>
            <param name="sender">The sender. This is usually null.</param>
            <param name="args">The job arguments.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.RemoveJob(System.Guid,System.Object,Ximura.CommandRSEventArgs)">
            <summary>
            This method removes a job from the completion job.
            </summary>
            <param name="oldJobID">The old job to remove.</param>
            <param name="sender">The sender.</param>
            <param name="args">The sender arguments.</param>
            <returns>Returns true if the job was successfully removed.</returns>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.RemoveErrorJob(Ximura.Framework.JobHolder)">
            <summary>
            This method will remove a job from the collection and flag it as an error.
            </summary>
            <param name="errorJob">THe job to remove.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.PurgeJob(Ximura.Framework.JobHolder)">
            <summary>
            This method will purge the job from the queue.
            </summary>
            <param name="job"></param>
        </member>
        <member name="M:Ximura.Framework.CompletionJob.CheckCompletionJobComplete">
            <summary>
            This method completes the job if it is not already completed.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CompletionJob.Status">
            <summary>
            This is the completion job status.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CompletionJob.State">
            <summary>
            This is the job object state.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CompletionJob.EnvelopeHelper">
            <summary>
            The completion job EnvelopeHelper is copied from the ParentJob helper.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CompletionJob.JobBreakdown">
            <summary>
            This method returns a text breakdown of the job process.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraPerformanceCounterCollection">
            <summary>
            This interface is used by classes that provide performance counter consolidation.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraPerformance">
            <summary>
            THis is the base interface for the performance architecture.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformance.PCID">
            <summary>
            The unique performance counter ID.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformance.AppID">
            <summary>
            This is the application ID for the counter.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformance.ID">
            <summary>
            The container id.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformance.Name">
            <summary>
            The friendly name.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformance.Category">
            <summary>
            The category.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SCMCapacityException">
            <summary>
            Summary description for SCMCapacityException.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SCMBaseException">
            <summary>
            This is the abstract Security Manager Base Exception.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SCMBaseException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SCMBaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Framework.SCMBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Framework.SCMBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Framework.SCMBaseException.ResponseCode">
            <summary>
            This is the HTTP Response code.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SCMCapacityException.#ctor">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SCMCapacityException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Framework.SCMCapacityException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the SCMCapacityException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Framework.SCMCapacityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Framework.SCMCapacityException.ResponseCode">
            <summary>
            This is the default response code for the exception.
            </summary>
        </member>
        <member name="T:Ximura.Security.Realm">
            <summary>
            This class contains the security information for a particular user role.
            </summary>
        </member>
        <member name="M:Ximura.Security.Realm.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="P:Ximura.Security.Realm.Active">
            <summary>
            This is a boolean value indicating whether the role is active.
            </summary>
        </member>
        <member name="T:Ximura.Framework.StateExtenderService">
            <summary>
            The state extender service object is the intermediary between a Finite State Machine and the FSM extender commands. 
            This object allows an extender to register external states with the FSM.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraStateExtenderService">
            <summary>
            This interface is used to register remote states with a FSM that allows this functionality.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtenderService.Register(System.Guid,System.Type,Ximura.Framework.IXimuraStateExtender)">
            <summary>
            This method registers a new extender for a particular class.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state stype.</param>
            <param name="mStateExtender">The extender class.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtenderService.Unregister(System.Guid,System.Type)">
            <summary>
            This method removes the extender for the particular command and state type.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state stype.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtenderService.Resolve(System.Guid,System.Type)">
            <summary>
            This method returns the extender to allow a remote service to register new states.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state type.</param>
            <returns>Returns the state extender.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">This exception will be thrown if the extender cannot be found.</exception>
        </member>
        <member name="M:Ximura.Framework.StateExtenderService.#ctor">
            <summary>
            This is the default constructor for the StateExtenderService.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtenderService.Register(System.Guid,System.Type,Ximura.Framework.IXimuraStateExtender)">
            <summary>
            This method registers a new extender for a particular class.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state stype.</param>
            <param name="mStateExtender">The extender class.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtenderService.Unregister(System.Guid,System.Type)">
            <summary>
            This method removes the extender for the particular command and state type.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state stype.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtenderService.Resolve(System.Guid,System.Type)">
            <summary>
            This method returns the extender to allow a remote service to register new states.
            </summary>
            <param name="CommandID">The command ID.</param>
            <param name="stateType">The state type.</param>
            <returns>Returns the state extender.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">This exception will be thrown if the extender cannot be found.</exception>
        </member>
        <member name="T:Ximura.IXimuraSessionClient">
            <summary>
            This interface is used to identify a session.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSessionClient.SessionID">
            <summary>
            This is the session ID
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSessionClient.SessionCulture">
            <summary>
            The session culture.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSessionClient.State">
            <summary>
            this is the current session state
            </summary>
        </member>
        <member name="T:Ximura.Framework.CommandConfiguration">
            <summary>
            This is the base class that holds the command configuration.
            </summary>
        </member>
        <member name="T:Ximura.Framework.ConfigurationBase">
            <summary>
            This class is the base class for the configuration functionality.
            </summary>
        </member>
        <member name="M:Ximura.Framework.ConfigurationBase.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.ConfigurationBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="F:Ximura.Framework.CommandConfiguration.mPollJobs">
            <summary>
            This list contains the TimerPoll jobs for the configuration.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CommandConfiguration.syncTimerPollJobs">
            <summary>
            This object is used to syncronize access to the mPollJobs collection.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.Reset">
            <summary>
            This override resets cached and calculated values.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.NamespaceManagerAdd(System.Xml.XmlNamespaceManager)">
            <summary>
            This override adds the ximura namespace to the default Namespace manager.
            </summary>
            <param name="nsm">The system default namespace manager.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.ProcessSessionHash(System.Byte[])">
            <summary>
            This method returns the process session hash.
            </summary>
            <param name="seed"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.TimerPollJobsCreate(System.Collections.Generic.List{Ximura.Framework.TimerPollJob}@)">
            <summary>
            This method creates the Poll job collection. This method will only be called once and will be wrapped around the 
            lock(syncTimerPollJobs) statement. If you wish to remove this lock, you should override the TimerPollJobs property.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Framework.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.ValidateStartTime(System.DateTime)">
            <summary>
            This method validates the start time.
            </summary>
            <param name="nextTime">The time to check.</param>
            <returns>Returns true if the time is valid.</returns>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.ValidateEndTime(System.DateTime)">
            <summary>
            This method validates the end time.
            </summary>
            <param name="nextTime">The time to check.</param>
            <returns>Returns true if the time is valid.</returns>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.TimerNotSet">
            <summary>
            This method sets the timer to a not set state.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.TimerRecalculate">
            <summary>
            This method recalculates the timer next call.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.SettingGet(System.String)">
            <summary>
            This method gets the specific setting.
            </summary>
            <param name="id">The setting id.</param>
            <returns>Returns the setting value, or null if the setting cannot be found or is undefined.</returns>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.SettingSet(System.String,System.String)">
            <summary>
            This protected method sets the specific setting.
            </summary>
            <param name="id">The setting id.</param>
            <param name="value">The value for the setting. Set this to null if you want the setting to be undefined.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration.Load(Ximura.IXimuraApplicationDefinition,Ximura.IXimuraCommand,System.IO.Stream,Ximura.IXimuraConfigSH)">
            <summary>
            This method loads the confiuration data from the command.
            </summary>
            <param name="appDef"></param>
            <param name="commDef"></param>
            <param name="data"></param>
            <param name="sh"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.NamespaceDefaultShortName">
            <summary>
            This is the short name used in the namespace manager to refer to the root namespace.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.CommandEnabled">
            <summary>
            Returns true if the command is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.CommandPriority">
            <summary>
            The command thread priority.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionRequired">
            <summary>
            This property specifies whether a process session is required.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionUseSystemCredentials">
            <summary>
            This property specifies whether a process session is required.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionUserName">
            <summary>
            This property returns the process session username.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionRealmDomain">
            <summary>
            This method returns the process session realm and domain.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionAuthType">
            <summary>
            This property returns the process session authentication type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionSecurityData">
            <summary>
            this property is the session security data.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.ProcessSessionUserRealm">
            <summary>
            This method returns the user session realm.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerEnabled">
            <summary>
            Returns true if the timer function is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerAutoStart">
            <summary>
            Returns true if the timer should call the OnTimerEvent on initialization.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollEnabled">
            <summary>
            Returns true if the timer is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollValue">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollValueType">
            <summary>
            This is the timer type for the timer value, i.e. hours(h), minutes(m), days(d) etc.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollInterval">
            <summary>
            This is the time span interval between timer polls.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollJobs">
            <summary>
            This is the collection of timer poll jobs. You should override this method and provide a collection
            of jobs if you wish to use the self-poll functionality.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollStartTime">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerPollEndTime">
            <summary>
            This is the retry interval for the timer.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerFirstCall">
            <summary>
            This is the timer first call.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerNextCall">
            <summary>
            This is the next time the timer should run.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.TimerDueTime">
            <summary>
            This is the due time in milliseconds to the next timer call.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandConfiguration.SupportsConfigInitialization">
            <summary>
            This property determines whether the configuration class supports config section handler initiialization.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration`1.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Framework.CommandConfiguration`1.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Framework.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="T:Ximura.Framework.TimerPollJob">
            <summary>
            The Poll job class contains the information for processing regular poll jobs.
            </summary>
        </member>
        <member name="F:Ximura.Framework.TimerPollJob.mValues">
            <summary>
            This dictionary contains the configuration values.
            </summary>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.#ctor">
            <summary>
            This is the default constructor for the timer poll job.
            </summary>
            <param name="data">The XmlElement containing the data.</param>
            <param name="NSM">The namespace manager.</param>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.Configure(System.Xml.XmlElement,System.Xml.XmlNamespaceManager,System.Object)">
            <summary>
            This method sets the time poll data from the Xml configuration node.
            </summary>
            <param name="element">The xml element containing the time poll data.</param>
            <param name="NSM">The namespace manager.</param>
            <param name="subCommand">The subcommand object.</param>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.ValueSet(System.Xml.XmlElement,System.Xml.XmlNamespaceManager)">
            <summary>
            This method adds the specific values for the extender properties.
            </summary>
            <param name="node">the value node.</param>
            <param name="NSM">The namespace manager.</param>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.TimerRecalculate(System.Boolean)">
            <summary>
            This method calculates the next time for the job.
            </summary>
            <param name="autoStart">A boolean value indicating whether this is the first time the method has been called.</param>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.DateTimeCalculate(System.Double,System.String)">
            <summary>
            This method calculates the DateTime value from the time value and time type.
            </summary>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.DateTimeCalculate(System.DateTime,System.Double,System.String)">
            <summary>
            This method calculates the DateTime value from the time value and time type.
            </summary>
            <param name="baseTime">The base time to calculate from.</param>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.TimerPollJob.TimeSpanCalculate(System.Double,System.String)">
            <summary>
            This method calculates the TimeSpan from the time value and time type.
            </summary>
            <param name="timeValue">The time value.</param>
            <param name="timeType">
            The time type: 
                ms = milliseconds
                 s = seconds
                 m = minutes
                 h = hours
                 d = days
            </param>
            <returns>Returns a TimeSpan corresponding to the specified time value, or null if the timetype cannot be resolved.</returns>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.Enabled">
            <summary>
            A boolean property that indicates whether the poll job is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.AutoStart">
            <summary>
            A boolean value indicating whether the command should autostart, i.e. call the command, when it first starts.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.PollValue">
            <summary>
            The numeric poll value.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.PollType">
            <summary>
            The poll value type, i.e. s,m,h,d etc
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.PollInterval">
            <summary>
            The Timespan interval for the job.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.Active">
            <summary>
            This property determines whether the job is currently active. This property is set when the command is currently 
            processing and stops multiple calls being initiated.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.ID">
            <summary>
            The job id.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.IDType">
            <summary>
            The job id type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.Subcommand">
            <summary>
            The subcommand object that is passed in the Envelope request.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.NextPollTime">
            <summary>
            The next poll time, or null if no time is set.
            </summary>
        </member>
        <member name="P:Ximura.Framework.TimerPollJob.RequestFormat">
            <summary>
            This action can be overriden to provide formating support for the timer poll request.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraCommandRQ">
            <summary>
            This is the default command processing interface.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraCommandRQ.ProcessRequestSCM(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This is the default entry point for the job request.
            </summary>
            <param name="job">The security manager job.</param>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.SupportsCallbacks">
            <summary>
            This boolean property identifies whether the command will support callback.s
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.RequestType">
            <summary>
            This is the command request type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.ResponseType">
            <summary>
            This is the command response type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.CallbackRequestType">
            <summary>
            This is the callback request type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.CallbackResponseType">
            <summary>
            This is the callback request type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.EnvelopeContractType">
            <summary>
            This is the envelope contract type. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandRQ.EnvelopeCallbackContractType">
            <summary>
            This is the envelope callback contract type.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SessionProfileLevel">
            <summary>
            This enumeration is used by the security manager to identify the authorization
            level of a session. 
            </summary>
        </member>
        <member name="F:Ximura.Framework.SessionProfileLevel.Unauthorized">
            <summary>
            The session is unathorized and will only have the default security rights
            </summary>
        </member>
        <member name="F:Ximura.Framework.SessionProfileLevel.Authorized">
            <summary>
            The session is authorized based on the user ID.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SessionActionType">
            <summary>
            The session action type enumeration is used to mediate communication between the session managers and the security manager.
            </summary>
        </member>
        <member name="F:Ximura.Framework.SessionActionType.Register">
            <summary>
            A new session has been created.
            </summary>
        </member>
        <member name="F:Ximura.Framework.SessionActionType.Release">
            <summary>
            A session is being released.
            </summary>
        </member>
        <member name="F:Ximura.Framework.SessionActionType.ProfileChanged">
            <summary>
            A session profile has changed, i.e. they have logged in or logged out.
            </summary>
        </member>
        <member name="T:Ximura.Framework.PerformanceBase">
            <summary>
            This is the base class for the performance counter architecture.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceBase.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceBase.PCID">
            <summary>
            The performance counter id.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceBase.AppID">
            <summary>
            The command id.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceBase.ID">
            <summary>
            The command id.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceBase.Name">
            <summary>
            The counter name.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceBase.Category">
            <summary>
            The category name.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMContextExtender`5">
            <summary>
            IXimuraFSMContextExtender generic interface.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMContextExtender`5.ContextAvailable">
            <summary>
            This boolean value indicates whether there are contexts available
            in the pool for the default context type.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMContextExtender`5.ContextsCurrent">
            <summary>
            This property returns the number of contexts currently active for the default type.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMContextExtender`5.ContextGet">
            <summary>
            This method returns a new context of the default type.
            </summary>
            <returns>A Context object or null if there are no 
            objects available.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMContextExtender`5.ContextReturn(`0)">
            <summary>
            This method returns a context back to the pool.
            </summary>
            <param name="conn">The context to return.</param>
        </member>
        <member name="T:Ximura.Framework.JobCollection">
            <summary>
            This class is thread synchronized and holds a collection of jobs currently being processed.
            </summary>
        </member>
        <member name="F:Ximura.Framework.JobCollection.jobCollection">
            <summary>
            This collection holds the job object along with it's unique trace id.
            </summary>
        </member>
        <member name="F:Ximura.Framework.JobCollection.jobCollectionID">
            <summary>
            This object holds the job id as a value
            </summary>
        </member>
        <member name="F:Ximura.Framework.JobCollection.jobCollectionTrackID">
            <summary>
            This object holds the track id as a value.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobCollection.#ctor">
            <summary>
            This is the default constructor. There will be no limit to the number of jobs that can be registered.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobCollection.#ctor(System.Int32,Ximura.JobPriority,System.Boolean)">
            <summary>
            This is main constructor.
            </summary>
            <param name="maxCapacity">The maximum number of jobs that the class can contain.</param>
            <param name="PriorityOverride">The priority override level. Jobs that have the same or greater priority will be allowed
            to submit jobs regardless of the collection status.</param>
            <param name="useDependency">This method will track jobs having the same dependency.</param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Add(System.Object)">
            <summary>
            This method adds a job to the collection.
            </summary>
            <param name="value">The JobBase object to add.</param>
            <returns>Returns 0.</returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Add(Ximura.JobBase)">
            <summary>
            This method adds a job to the collection.
            </summary>
            <param name="jobRQ">The JobBase object to add.</param>
            <returns>Returns 0.</returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Remove(System.Object)">
            <summary>
            Removes the job from the collection.
            </summary>
            <param name="value">A jobbase object.</param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Remove(System.Guid)">
            <summary>
            This method removes the job from the collection.
            </summary>
            <param name="jobID">The job ID.</param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Remove(Ximura.JobBase)">
            <summary>
            Removes the job from the collection.
            </summary>
            <param name="job">The job to remove.</param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Clear">
            <summary>
            This method clears the collection of all jobs.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Contains(System.Object)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="value">A Guid to identify the job.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Contains(Ximura.JobBase)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="job">A object that derives from JobBase.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Contains(System.Guid)">
            <summary>
            Returns true if the job is in the collection.
            </summary>
            <param name="jobID">A Guid to identify the job.</param>
            <returns>Returns true for success.</returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.RemoveAt(System.Int32)">
            <summary>
            Not supported.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Insert(System.Int32,System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.IndexOf(System.Object)">
            <summary>
            Not supported.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Not supported.
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.GetEnumerator">
            <summary>
            Not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Dispose">
            <summary>
            This method disposes of the collection.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobCollection.Dispose(System.Boolean)">
            <summary>
            This method provides specific dispose code for the collection.
            </summary>
            <param name="disposing">Set to true if this is the first time this is called.</param>
        </member>
        <member name="M:Ximura.Framework.JobCollection.DisposeCheck">
            <summary>
            This method checks whether the collection has been disposed, and if so throws an exception.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.Item(System.Guid)">
            <summary>
            This returns a job from the collection based on the job ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.JobIDs">
            <summary>
            This is a collection of JobIDs for the current jobs.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.IsFixedSize">
            <summary>
            Returns true if the job collection has a maximum size.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.Capacity">
            <summary>
            The number of jobs currently in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.Count">
            <summary>
            The number of jobs currently in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.SyncRoot">
            <summary>
            Always returns itself, as this is a synchronized class.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.IsSynchronized">
            <summary>
            Always returns true as this is a synchronized class.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.IsReadOnly">
            <summary>
            Returns true if the collection has reached its capacity.
            </summary>
        </member>
        <member name="P:Ximura.Framework.JobCollection.Item(System.Int32)">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSessionNegotiate">
            <summary>
            This interface is used to negotiate an authenticated session.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiate.PasswordChangeSupported">
            <summary>
            This method specifies whether the user is able to change their password.
            </summary>
            <returns>Returns true is the user is able to change their password.</returns>
        </member>
        <member name="P:Ximura.IXimuraSessionNegotiate.Realm">
            <summary>
            The session realm.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraPerformanceCounter">
            <summary>
            This interface is used by performance counter classes.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraPerformanceCounter.Increment">
            <summary>
            This method increments the counter by 1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.IXimuraPerformanceCounter.IncrementBy(System.Int64)">
            <summary>
            This method increments or decrements the counter by the value specified.
            </summary>
            <param name="value"></param>
            <returns>Returns the new value of the counter.</returns>
        </member>
        <member name="M:Ximura.IXimuraPerformanceCounter.Decrement">
            <summary>
            This method decrements the counter by 1.
            </summary>
            <returns>Returns the new value of the counter.</returns>
        </member>
        <member name="P:Ximura.IXimuraPerformanceCounter.CounterType">
            <summary>
            This is the system counter type.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformanceCounter.RawValue">
            <summary>
            This property gets or sets the raw value of the counter directly.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformanceCounter.Active">
            <summary>
            This property indicates whether the counter is active.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraPerformanceCounter.Dirty">
            <summary>
            This readonly property determines whether the counter has been read since it was last changed.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraGatewayAgent">
            <summary>
            This interface is implemented by system gateway agents.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraServerAgent">
            <summary>
            This is the base interface implemented by all server agents.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CompletionJobPrerequisiteFailureException">
            <summary>
            This exception is thrown by the completion job when an earlier dependency ID has thrown as exception.
            </summary>
        </member>
        <member name="T:Ximura.Framework.JobException">
            <summary>
            Summary description for JobException.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.JobException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Framework.JobException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Framework.JobException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Framework.JobException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobPrerequisiteFailureException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobPrerequisiteFailureException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJobPrerequisiteFailureException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJobPrerequisiteFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="P:Ximura.Framework.CompletionJobPrerequisiteFailureException.ResponseCode">
            <summary>
            The 401 HTTP response code.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CompletionJobDependencyException">
            <summary>
            This class is used by a parent module to signal to a completion job that the job returned has failed
            and that the completion job should cancel all current and future child jobs, depending on the settings
            passed in this exception class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobDependencyException.#ctor">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CompletionJobDependencyException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJobDependencyException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the LogonException class.
            </summary>
            <param name="message">The message that should be passed with the exception</param>
            <param name="ex">The base exception that should be passed through.</param>
        </member>
        <member name="M:Ximura.Framework.CompletionJobDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Ximura.Framework.AppCommandBase`2">
            <summary>
            AppCommandBase is the base object for an Application command.
            </summary>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppCommandBase`3">
            <summary>
            AppCommandBase is the base object for an Application command.
            </summary>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external command object that contains a set of user configurable settings.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppBase`3">
            <summary>
            This is the base class for both command and application objects.
            </summary>
            <typeparam name="CONF">The configuration class.</typeparam>
            <typeparam name="PERF">The performance class.</typeparam>
            <typeparam name="EXTCONF">The external configuration class.</typeparam>
        </member>
        <member name="T:Ximura.Framework.FrameworkComponentBase">
            <summary>
            This class is used by components that have commands as child elements.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FrameworkComponentBase.CommandExtender">
            <summary>
            This is the AppServerCommandDataExtender used to set the command start priority.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.CommandExtenderInitialize">
            <summary>
            This method initializes the 
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.PoolManagerStart">
            <summary>
            This protected method creates the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.PoolManagerStop">
            <summary>
            This protected method disposes of the default pool manager for the application.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.CommandsStart">
            <summary>
            This protected method initializes the commands
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.CommandsStop">
            <summary>
            This protected method initializes the commands
            </summary>
        </member>
        <member name="M:Ximura.Framework.FrameworkComponentBase.ComponentsStatusBeforeChange(Ximura.XimuraServiceStatusAction,Ximura.IXimuraService)">
            <summary>
            This overriden method checks on start whether the command has a priority set, 
            if it does has a priority set, the command is not started.
            </summary>
            <param name="action">The service action.</param>
            <param name="service">The service.</param>
            <returns>Returns true if the service can start.</returns>
        </member>
        <member name="P:Ximura.Framework.FrameworkComponentBase.PoolManager">
            <summary>
            This is the pool manager.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppBase`3.mPerformanceManager">
            <summary>
            This is the performance manager.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppBase`3.mConfigurationManager">
            <summary>
            This is the configuration manager.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppBase`3.mApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.InternalStart">
            <summary>
            This method starts the AppServerProcess and registers any services
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.InternalStop">
            <summary>
            The method stops the AppServerProcess and unregisters and services
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.ConfigurationStart">
            <summary>
            This method creates and registers the configuration data object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.ConfigurationLoad(`0)">
            <summary>
            This method loads the command configuration.
            </summary>
            <param name="commandConfiguration"></param>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.ConfigurationStop">
            <summary>
            This method unregisters and destpys the configuration data object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.PerformanceCreate">
            <summary>
            This method creates the performance object and calls the extended PerformanceInitialize method before setting 
            the component performance property object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.PerformanceInitialize(`1)">
            <summary>
            This method should be used to set the specific performance properties before the 
            performance object is registered with the component.
            </summary>
            <param name="perf">The performance object.</param>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.PerformanceDispose">
            <summary>
            This method removes all references to the performance object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.PerformanceStart">
            <summary>
            This method starts the performance counters.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`3.PerformanceStop">
            <summary>
            This method stops the performance counters.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.Configuration">
            <summary>
            This is the command configuration.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.ConfigurationExternal">
            <summary>
            This is the external configuration that contains the settings for the main configuration.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.ConfigurationManager">
            <summary>
            This is the application configuration manager for the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.Performance">
            <summary>
            This is the performance counter for the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.PerformanceManager">
            <summary>
            This is the application performance manager for the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.ApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppBase`3.EnvelopeHelper">
            <summary>
            This property comtains the envelope helper for the framework object.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandNotification">
            <summary>
            This interface is implemented by commands that support notification.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraCommandNotification.Notify(System.Type,System.Object)">
            <summary>
            This method is called when there is a system notification.
            </summary>
            <param name="notificationType">The notification object type.</param>
            <param name="notification">The notification object.</param>
        </member>
        <member name="P:Ximura.IXimuraCommandNotification.SupportsNotifications">
            <summary>
            This boolean property specifies that the object supports system notification.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandPermissions">
            <summary>
            This interface determines the specific permissions that the command presents to the application.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandBase`3.mCommandBridge">
            <summary>
            The dispatcherCollection is the command gateway to the dispatcher. 
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandBase`3.mDebugName">
            <summary>
            The debug name is used to accurately identify the command within the application.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandBase`3.mName">
            <summary>
            This is the command name
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandBase`3.mDescription">
            <summary>
            This is the command description
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandBase`3.settingsProvider">
            <summary>
            The settings provider for the base command container.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.Dispose(System.Boolean)">
            <summary>
            This overriden Dispose method removes any services or service references
            </summary>
            <param name="disposing">True is the method is disposing</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.GetSettings(System.String)">
            <summary>
            This protected member returns the settings for the command
            </summary>
            <param name="key">The key that specifies the specific settings object</param>
            <returns>The settings object</returns>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.GetSettingsProvider">
            <summary>
            This method gets the settings for the command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.ConfigurationLoad(`0)">
            <summary>
            This method loads the command configuration.
            </summary>
            <param name="commandConfiguration"></param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.PerformanceStart">
            <summary>
            This method creates and registers the command performance object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.PerformanceStop">
            <summary>
            This method unregisters the command performance object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.PoolManagerStart">
            <summary>
            This override gets a reference to the pool manager.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.Notify(System.Type,System.Object)">
            <summary>
            This method is called when there is a system notification.
            </summary>
            <param name="notificationType">The notification object type.</param>
            <param name="notification">The notification object.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.CommandBridgeStart">
            <summary>
            This method gets a reference to the command bridge and registers the command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.CommandBridgeRegister(System.Boolean)">
            <summary>
            This method determines whether the command is registered or unregistered with the command bridge.
            </summary>
            <param name="register">A boolean value indicating whether this command should be registered or unregistered.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`3.CommandBridgeStop">
            <summary>
            This method unregisters the command and removes the reference to the command bridge.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.AppCommandAttribute">
            <summary>
            This property is the XimuraAppCommandAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.AppConfigurationAttribute">
            <summary>
            This property is the XimuraAppCommandAttribute applied to the application.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.CommandID">
            <summary>
            This is the command ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.CommandName">
            <summary>
            This is command name used to route requests to it in an application.
            </summary>
            		
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.CommandDescription">
            <summary>
            This is the command friendly description
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.ConfigClass">
            <summary>
            This property contains the prefered config class type. If this property is set
            the config class must inherit from this class.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.ConfigClassForce">
            <summary>
            This property determines whether the config class should be forced to a specific type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.BaseSettings">
            <summary>
            This is the base settings class. It is primarily used when loading the configuration in hybrid mode. 
            This default method returns null;
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.ConfigurationManager">
            <summary>
            This override gets the ConfigurationManager from the IXimuraConfigurationManager service.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.PerformanceManager">
            <summary>
            This override gets the performance manager object form the IXimuraPerformanceManager service
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.ApplicationDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.CommandDefinition">
            <summary>
            This private method contains the unique application identifiers.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.DebugName">
            <summary>
            The debug name can be used to accurately determine the unique name for the 
            application and the command.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.ParentCommandName">
            <summary>
            This method is used by nested commands to get their command settings.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.SupportsNotifications">
            <summary>
            This base method always returns false, as notifications are not supported. Override this method and return true if you wish 
            to support notifications.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandBase`3.CommandBridge">
            <summary>
            The command bridge is the bridge to the security manager and the dispatcher.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandBase`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSM">
            <summary>
            This interface defines public methods for the finite state machine.
            </summary>
        </member>
        <member name="T:Ximura.Framework.ContextSettings`3">
            <summary>
            The context settings class hold a collection of the settings that the context will use.
            </summary>
            <typeparam name="ST">The state type.</typeparam>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMSettingsBase">
            <summary>
            This is the settings base interface.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettingsBase.PoolManager">
            <summary>
            The pool manager.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettingsBase.SessionManager">
            <summary>
            The session manager.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettingsBase.DomainDefault">
            <summary>
            This is the default domian user for creating context sessions.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettingsBase.EnvelopeHelper">
            <summary>
            This is the envelope helper.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMSettings`3.StateCollection">
            <summary>
            This method returns a collection of active states.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMSettings`3.GetInitialState">
            <summary>
            This method returns the initial state, or null if no initial state has been set.
            </summary>
            <returns>The state requested or null.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMSettings`3.GetState(System.String)">
            <summary>
            This method returns the state object based on the name.
            </summary>
            <param name="State">The state name.</param>
            <returns>Returns the state object or null if the name cannot be resolved.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMSettings`3.GetStateName(`0)">
            <summary>
            This method returns the state identifier for the state object.
            </summary>
            <param name="CurrentState">The current that you wish to resolve.</param>
            <returns>Return the name of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMSettings`3.InitializeSettings(Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Framework.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.IXimuraEnvelopeHelper,Ximura.Framework.IXimuraSessionManager,Ximura.IXimuraSession,`1,`2)">
            <summary>
            This method is used to initialize the FSM settings object.
            </summary>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The session mamanger.</param>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettings`3.Configuration">
            <summary>
            The command configuration.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMSettings`3.Performance">
            <summary>
            The FSM performance counter.
            </summary>
        </member>
        <member name="F:Ximura.Framework.ContextSettings`3.mStateExtender">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="F:Ximura.Framework.ContextSettings`3.mProcessSession">
            <summary>
            This is the process session that the base FSM command operates under.
            </summary>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.#ctor">
            <summary>
            This constructor is called by the FSM when initiating the settings.
            </summary>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.GetInitialState">
            <summary>
            This method returns the initial state.
            </summary>
            <returns>The initial state, or null if no initial state has been set.</returns>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.GetState(System.String)">
            <summary>
            This method returns the state for the string based identifier that is passed as a parameter.
            </summary>
            <param name="State">The state identifier.</param>
            <returns>The state or null if the identifier is not recognised.</returns>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.GetStateName(`0)">
            <summary>
            This method returns the state string identifier.
            </summary>
            <param name="CurrentState">The state object.</param>
            <returns>The state identifier.</returns>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.SignalCompletion(Ximura.Framework.IXimuraFSMContext)">
            <summary>
            This method is used to signal completion. This method is not currently used.
            </summary>
            <param name="context">The context to signal.</param>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.InitializeSettings(Ximura.IXimuraCommand,Ximura.IXimuraApplicationDefinition,Ximura.Framework.StateExtender{`0},Ximura.IXimuraPoolManager,Ximura.IXimuraEnvelopeHelper,Ximura.Framework.IXimuraSessionManager,Ximura.IXimuraSession,`1,`2)">
            <summary>
            This method is used to initialize the FSM settings object.
            </summary>
            <param name="baseCommand">The base command information.</param>
            <param name="baseApplication">The base application information.</param>
            <param name="extender">The state extender.</param>
            <param name="poolManager">The pool manager.</param>
            <param name="sessionManager">The seesion manager.</param>
            <param name="processSession">The current process session that the command is running under.</param>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.StateCollection">
            <summary>
            This method returs a collection of states.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.ContextSettings`3.ResolveConnectionString(System.String)">
            <summary>
            This method resolves the SQL connection string.
            </summary>
            <param name="connID"></param>
            <returns></returns>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.CommandID">
            <summary>
            This is the base command ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.CommandName">
            <summary>
            This is the base command name.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.CommandDescription">
            <summary>
            This is the base command description.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.PoolManager">
            <summary>
            This is the pool manager for the application.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.EnvelopeHelper">
            <summary>
            This is the envelope helper for the application.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.SessionManager">
            <summary>
            This is the session manager for the FSM application.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.ApplicationName">
            <summary>
            The base application name.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.ApplicationID">
            <summary>
            The base application ID.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.ApplicationDescription">
            <summary>
            The application description.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.DomainDefault">
            <summary>
            This string is the default domin used for context sessions when a specific domain is not specified.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.ProcessSession">
            <summary>
            This is the process session used by the base command. This session may be used to submit requests for
            commands that do not use user sessions.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.Configuration">
            <summary>
            This is the configuration object.
            </summary>
        </member>
        <member name="P:Ximura.Framework.ContextSettings`3.Performance">
            <summary>
            This is the performance object.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraLoggingAudit">
            <summary>
            This 
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraConnectionToFSM`5">
            <summary>
            This interface is a bridge between the command and the context.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraConnectionToFSM`5.GetState(System.String)">
            <summary>
            This method returns the initial state.
            </summary>
            <param name="State">The type parameter for the state required.</param>
            <returns>The state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraConnectionToFSM`5.GetInitialState">
            <summary>
            This is the initial state.
            </summary>
            <returns>The initial state. If there is no initial state set 
            this will return null;</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraConnectionToFSM`5.GetStateName(`1)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraConnectionToFSM`5.SignalCompletion(`0)">
            <summary>
            This method allows a context to signal to the FSM that it has completed its tasks.
            </summary>
            <param name="signaller">The context object which is signalling that it is now in a completed state.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraConnectionToFSM`5.GetFSMCompletionJob(`0)">
            <summary>
            This method is used to create a FSM callback for the context.
            </summary>
            <param name="context">The context to process.</param>
            <returns>Returns a new completion job.</returns>
        </member>
        <member name="T:Ximura.Framework.FSMCompletionJobContract`9">
            <summary>
            This overriden FSM is for processes that require Completion job support.
            </summary>
            <typeparam name="RQ">The incoming request type.</typeparam>
            <typeparam name="RS">The outgoing response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The context type.</typeparam>
            <typeparam name="ST">The FSM state type.</typeparam>
            <typeparam name="SET">The FSM Context Settings.</typeparam>
        </member>
        <member name="T:Ximura.Framework.FiniteStateMachine`9">
            <summary>
            The FiniteStateMachine is one of the root command objects. 
            It is used to implement system that operate using a well defined system of states.
            </summary>
            <typeparam name="RQ">The request type.</typeparam>
            <typeparam name="RS">The response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The FSM context type.</typeparam>
            <typeparam name="ST">The FSM base state type.</typeparam>
            <typeparam name="SET">The FSM base settings.</typeparam>
        </member>
        <member name="T:Ximura.Framework.FiniteStateMachine`10">
            <summary>
            The FiniteStateMachine is one of the root command objects. 
            It is used to implement system that operate using a well defined system of states.
            </summary>
            <typeparam name="RQ">The request type.</typeparam>
            <typeparam name="RS">The response type.</typeparam>
            <typeparam name="CBRQ">The callback request type.</typeparam>
            <typeparam name="CBRS">The callback response type.</typeparam>
            <typeparam name="CNTX">The FSM context type.</typeparam>
            <typeparam name="ST">The FSM base state type.</typeparam>
            <typeparam name="SET">The FSM base settings.</typeparam>
            <typeparam name="EXTCONF">The external configuration object type which contains the settings for the internal commands.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppCommandProcess`7">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external configuration object type which contains the settings for the internal commands.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppCommandStandard`7">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
            <typeparam name="EXTCONF">The external command object that contains a set of user configurable settings.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The command container to be added to.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ServicesProvide">
            <summary>
            This override registers the command with the dispatcher commands collection
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ServicesRemove">
            <summary>
            This overriden method removes the dispatcherCollection services
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ServicesReference">
            <summary>
            This overriden method reference the scheduled services.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ServicesDereference">
            <summary>
            This overriden method unregisters the scheduled services.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.Start">
            <summary>
            This method starts the service based on the default async settings
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.Stop">
            <summary>
            This override removes the performance and configuration.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.GetSettings">
            <summary>
            This protected member returns the default settings for the command
            </summary>
            <returns>The settings object</returns>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ProcessRequestSCM(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This is the default entry point for the job request from the security manager. By default
            the command will track job processes and update statistics for each job.
            </summary>
            <param name="job">The job to process.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ProcessRequest(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This is the default command process logic. You should override this method to implement your
            specific business logic.
            </summary>
            <param name="job">The job to process.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ProcessRequest(Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`0,`1})">
            <summary>
            This is the default generic process point. This will call the non-generic method for backwards
            compatibility.
            </summary>
            <param name="job"></param>
            <param name="Data"></param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.ProcessCallback(Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`2,`3})">
            <summary>
            This is the standard method for processing callbacks.
            </summary>
            <param name="job">The job to process.</param>
            <param name="Data">The callback data.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.IsCallback(Ximura.IXimuraRQRSEnvelope)">
            <summary>
            The method returns true if the Data is a callback type.
            </summary>
            <param name="Data">The envelope to check.</param>
            <returns>Return true if this is a callback.</returns>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackRegister">
            <summary>
            This method will be called when the command starts and should
            be overriden and permitted callback commands should be registered.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackRegister(System.Guid)">
            <summary>
            This method registers the callback.
            </summary>
            <param name="jobID">The command ID to be registered.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackUnregister">
            <summary>
            This method will be called when the command stops and will automatically unregister any callback commands.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackUnregister(System.Guid)">
            <summary>
            This method unregisters the callback.
            </summary>
            <param name="commandID">The commandID to unregister.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackValidate(System.Guid)">
            <summary>
            This method validates a callback for a command ID.
            </summary>
            <param name="commandID">The command ID to validate</param>
            <returns>Returns true of the command is registered.</returns>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CallbackValidate(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This method validates a callback for a job request.
            </summary>
            <param name="job">The callback job to validate</param>
            <returns>Returns true if the job is validated.</returns>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.CommandBridgeRegister(System.Boolean)">
            <summary>
            This method determines whether the command is registered or unregistered with the command bridge.
            </summary>
            <param name="register">A boolean value indicating whether this command should be registered or unregistered.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.SchedulerRegister">
            <summary>
            Use this method registers scheduler callbacks.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.SchedulerRegisterSubCommands">
            <summary>
            This method registers specific subcommands for the scheduler. By default this method will
            register the blank subcommand. 
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.SchedulerUnregister">
            <summary>
            Use this method to unregister scheduler callbacks.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.SchedulerStart">
            <summary>
            This method gets a reference to the scheduler service.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.SchedulerStop">
            <summary>
            THis method removes and scheduler notifications and removes the scheduler reference.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.Notify(System.Type,System.Object)">
            <summary>
            This method starts and stops the timer based on the system start/stop notification.
            </summary>
            <param name="notificationType">The notification type.</param>
            <param name="notification">The notification.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerChange(System.TimeSpan)">
            <summary>
            This method is used to change the timer settings.
            </summary>
            <param name="span">The due time.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerChange(System.Int64)">
            <summary>
            This method is used to change the timer settings.
            </summary>
            <param name="dueTime">The due time.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerStart">
            <summary>
            This method initializes the timer used for pick up polling.
            The default settings for this command is to wait indefintely, so
            you should override this method if you require different polling.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerStop">
            <summary>
            This method stops the timer.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerPause">
            <summary>
            This method will pause the timer.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerResume">
            <summary>
            This method will resume the timer based on the settings.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.InternalTimerCallback(System.Object)">
            <summary>
            This internal method ensures that a unhandled exception in a ontimer method called 
            does not result in the system crashing out.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.OnTimerEvent(System.Boolean)">
            <summary>
            This method will be called when a timer is called.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`7.TimerPollJobExecute(Ximura.Framework.TimerPollJob)">
            <summary>
            This method executes a timer poll job and handles the response. You should override this method to provide
            your own logic.
            </summary>
            <param name="job">The timer poll job.</param>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.SupportsCallbacks">
            <summary>
            This property identifies whether the command supports callbacks.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.Scheduler">
            <summary>
            This is the scheduler.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.SchedulerAutoRegister">
            <summary>
            This property determines whether the command will automatically register with the
            scheduler on start up.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.RequestType">
            <summary>
            This is the command request type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.ResponseType">
            <summary>
            This is the command response type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.CallbackRequestType">
            <summary>
            This is the command callback request type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.CallbackResponseType">
            <summary>
            This is the command callback response type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.EnvelopeContractType">
            <summary>
            This is the envelope contract type. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.EnvelopeCallbackContractType">
            <summary>
            This is the envelope callback contract type. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.SupportsNotifications">
            <summary>
            This method returns true as the command uses notification to enable and disable the timer poll.
            </summary>
        </member>
        <member name="P:Ximura.Framework.AppCommandStandard`7.TimerEnabled">
            <summary>
            This method is used to override the default auto start for the timer in the base command.
            You can override this method if you need more fine-grained timer start
            functionality.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraCommandProcess">
            <summary>
            This interface is used by a command process and is not currently used.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandProcess`7.mProcessSession">
            <summary>
            This is the session that the process command will run under.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandProcess`7.mSessionMan">
            <summary>
            This is a reference to the application session manager.
            </summary>
        </member>
        <member name="F:Ximura.Framework.AppCommandProcess`7.mSettings">
            <summary>
            The Command Process Settings
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.InternalStart">
            <summary>
            This overrides the Internal start and negotiates a session for the process
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.InternalStop">
            <summary>
            This overrides the stop process and closes the process session.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.ServicesReference">
            <summary>
            Creates a reference to the IXimuraSessionManager
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.ServicesDereference">
            <summary>
            Removes a reference to IXimuraSessionManager
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.ProcessSessionNegotiate">
            <summary>
            This method negotiates a session for the process.
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.ProcessSessionClose">
            <summary>
            This method closes a sessions for the process
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.PrepareJob(Ximura.Framework.SecurityManagerJob,`0@,`1@)">
            <summary>
            This method prepares the parameters for the job request.
            </summary>
            <param name="job">The job.</param>
            <param name="Request">The request.</param>
            <param name="Response">The response.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.PrepareJob(Ximura.Framework.SecurityManagerJob)">
            <summary>
            This helper method is provides for methods that do not want to reference the Request
            and Response methods directly.
            </summary>
            <param name="job">The job to prepare.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.TimerPollJobExecute(Ximura.Framework.TimerPollJob)">
            <summary>
            This method initiates a timer poll job and handles the response.
            </summary>
            <param name="job">The time poll job.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.TimerHelperAsyncSelfCall(Ximura.Framework.TimerPollJob,Ximura.CommandRSCallback)">
            <summary>
            This method can be used to initiate a callback.
            </summary>
            <param name="job">The timer poll job.</param>
            <param name="callback">The callback delegate.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`7.TimerHelperAsyncSelfCall(Ximura.Framework.TimerPollJob,Ximura.CommandRSCallback,Ximura.JobPriority,System.Action{Ximura.RQRSFolder})">
            <summary>
            This method can be used to initiate a callback.
            </summary>
            <param name="job">The timer poll job.</param>
            <param name="callback">The callback delegate.</param>
            <param name="priority">The request priority.</param>
            <param name="rqFormat">The delegate used to format the request. This parameter can be null.</param>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.DEFAULTTHROTTLELIMIT">
            <summary>
            This is the default throttle limit for the context completion job.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.mExtenderService">
            <summary>
            This is the state extender service.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.mPool">
            <summary>
            This is the context pool.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.mContextSettings">
            <summary>
            This is the context connection class that hold context connection settings and services.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.mStateExtender">
            <summary>
            This is the base state extender.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FiniteStateMachine`10.mRemoteContextPoolAccess">
            <summary>
            This class allows contexts to create additional contexts. This is primarily used for 
            connection based FSM services.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeExtenders(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeBaseStates(System.ComponentModel.IContainer)">
            <summary>
            This method can be overriden to add additional extenders to the
            protocol, or to remove existing extenders.
            </summary>
            <param name="baseContainer">This is the base container in the FSM.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InternalStart">
            <summary>
            This method initializes the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InternalStop">
            <summary>
            This
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.StatesStart">
            <summary>
            This method will start any states that implement IXimuraService
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.StatesStop">
            <summary>
            This method will stop any states that have been started.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ServicesProvide">
            <summary>
            This override creates the state extender service.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ServicesRemove">
            <summary>
            This override removes the state extender service.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.CreateSystemRequest(Ximura.EnvelopeAddress)">
            <summary>
            This method creates the system request.
            </summary>
            <returns>A new envelope with the correct destination address.</returns>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ProcessRequest(Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`0,`1})">
            <summary>
            This override is the main entry point for the incoming FSM request.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The request data.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ProcessRequestFailed(System.String,System.String,Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`0,`1})">
            <summary>
            This method allow customization to the response should there not be any contexts available 
            to process the request.
            </summary>
            <param name="job">The job.</param>
            <param name="Data">The data containing the request and the response.</param>
            <returns>Return true if you do not wish the command to set the standard response properties to the response.</returns>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ProcessRequest(`4)">
            <summary>
            This is the entry point for Finite State Machines that require a context.
            </summary>
            <param name="jobContext">The job context that contains the requested parameters.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeContextPool(System.ComponentModel.IContainer)">
            <summary>
            This method initializes the context pool. Override this method if you need
            additional pool creation logic.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeContextConnection(System.ComponentModel.IContainer)">
            <summary>
            This method should be overriden to provide extended Context collection settings.
            </summary>
            <param name="baseContainer">The base container for the collection.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeContextConnectionSettings(System.ComponentModel.IContainer)">
            <summary>
            This method should be overriden to provide extended Context collection settings.
            </summary>
            <param name="baseContainer">The base container for the collection.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ContextInitialize(`4,Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`0,`1})">
            <summary>
            This method allows generic operations to be performed on the new context.
            </summary>
            <param name="newContext"></param>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming generic data.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ClearContextPool">
            <summary>
            This method empties the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.InitializeContextPoolAccess">
            <summary>
            This command initializes the context pool.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ContextGetContext">
            <summary>
            This method retrieves a context from the pool.
            </summary>
            <returns>Returns a context object.</returns>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`10.ContextReturnContext(`4)">
            <summary>
            This method returns a context to the pool.
            </summary>
            <param name="context">The context to return.</param>
        </member>
        <member name="P:Ximura.Framework.FiniteStateMachine`10.ContextPool">
            <summary>
            This is the context pool for the FSM.
            </summary>
        </member>
        <member name="P:Ximura.Framework.FiniteStateMachine`10.ContextConnection">
            <summary>
            This is the default context connection.
            </summary>
        </member>
        <member name="P:Ximura.Framework.FiniteStateMachine`10.GatekeeperEnabled">
            <summary>
            This protected property determines whether the context gatekeeper is enabled. If you wish 
            to enable the gatekeeper, you should override this property and return true.
            </summary>
        </member>
        <member name="P:Ximura.Framework.FiniteStateMachine`10.ExternalStatesAllow">
            <summary>
            This property determines whether the FSM will allow external states contained in a FSMExtenderCommand object to register
            with this command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Framework.FiniteStateMachine`9.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="F:Ximura.Framework.FSMCompletionJobContract`9.jobFSMCompleteCallBack">
            <summary>
            This is the job completion callback delegate.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.#ctor">
            <summary>
            Empty constructor for use by the component model.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Default constructor for use by the component model.
            </summary>
            <param name="container">The container that the transport should be added to.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.ContextInitialize(`4,Ximura.Framework.SecurityManagerJob,Ximura.RQRSContract{`0,`1})">
            <summary>
            This method allows generic operations to be performed on the new context.
            </summary>
            <param name="newContext">The new context for the incoming request.</param>
            <param name="job">The incoming job.</param>
            <param name="Data">The incoming generic data.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.internalOnFSMCompletionJobComplete(Ximura.Framework.SecurityManagerJob,Ximura.Framework.CompletionJobStatus,System.Object)">
            <summary>
            This method is called when the job is complete.
            </summary>
            <param name="parentJob">The parentJob.</param>
            <param name="status">The completion status.</param>
            <param name="state">The object state.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCompletionJobContract`9.OnFSMCompletionJobComplete(`4,Ximura.Framework.SecurityManagerJob,Ximura.Framework.CompletionJobStatus)">
            <summary>
            This virtual method should be overriden to capture callback responses.
            </summary>
            <param name="context">The job context.</param>
            <param name="status">The status of the completion job.</param>
        </member>
        <member name="T:Ximura.SessionState">
            <summary>
            The XimuraSessionState enumeration identifies the current state of a session.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Undefined">
            <summary>
            The session is undefined.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.NotInitialized">
            <summary>
            The session is not initialized.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Initialized">
            <summary>
            The session is initialized.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Authenticating">
            <summary>
            The session is currently authenticating.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Authenticated">
            <summary>
            The session is authenticated with the security manager.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Closing">
            <summary>
            The session is closing.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Closed">
            <summary>
            The session is closed.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.NotAuthorized">
            <summary>
            The session is not authorized.
            </summary>
        </member>
        <member name="F:Ximura.SessionState.Rejected">
            <summary>
            The session was rejected by the security manager.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SessionCreateRemote">
            <summary>
            The session create remote delegate.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraSessionManager">
            <summary>
            The IXimuraSessionManager interface is the public face of the session manager and is registered
            in the components collection of the Application.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManager.SessionCreate">
            <summary>
            This method creates a blank session.
            </summary>
            <returns>A IXimuraSession object is returned.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManager.SessionCreate(System.String)">
            <summary>
            This method creates a session object for the named user.
            </summary>
            <param name="username">The user ID of the user.</param>
            <returns>A IXimuraSession object is returned.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManager.SessionCreate(System.String,System.String)">
            <summary>
            This method creates a session object for the named user.
            </summary>
            <param name="domain">The domain for the session or null if the default is to be used.</param>
            <param name="username">The user ID of the user.</param>
            <returns>A IXimuraSession object is returned.</returns>
        </member>
        <member name="T:Ximura.Framework.IXimuraPerformanceAgent">
            <summary>
            The IXimuraPerformanceAgent interface is implemented by class that recieve 
            performance information from the performance counters.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraSessionManagerService">
            <summary>
            This interface is implemented by storage manager.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraAppServerAgentService">
            <summary>
            THis interface is implemented by application server components that need the ability to register specific agents, 
            such as logging providers, session managers etc.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraAppServerAgentService.AgentAdd(Ximura.Framework.XimuraServerAgentHolder)">
            <summary>
            This method adds an agent to the service.
            </summary>
            <param name="holder">The agent identifying information.</param>
        </member>
        <member name="T:Ximura.Security.Role">
            <summary>
            This class contains the security information for a particular user role.
            </summary>
        </member>
        <member name="M:Ximura.Security.Role.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="P:Ximura.Security.Role.Active">
            <summary>
            This is a boolean value indicating whether the role is active.
            </summary>
        </member>
        <member name="P:Ximura.Security.Role.Permissions">
            <summary>
            This collection holds the permission.
            </summary>
        </member>
        <member name="T:Ximura.Security.RolePermission">
            <summary>
            This class holds the role permission information.
            </summary>
        </member>
        <member name="M:Ximura.Security.RolePermission.#ctor">
            <summary>
            This is the default empty constructor.
            </summary>
        </member>
        <member name="M:Ximura.Security.RolePermission.#ctor(System.Guid,System.Int64,System.String)">
            <summary>
            This is the default constructor.
            </summary>
            <param name="PermissionID">The permission id.</param>
            <param name="PermissionValue">The specific bitmap permission.</param>
            <param name="Description">An optional description for the permissions.</param>
        </member>
        <member name="P:Ximura.Security.RolePermission.PermissionID">
            <summary>
            This is the permission IDContent.
            </summary>
        </member>
        <member name="P:Ximura.Security.RolePermission.PermissionValue">
            <summary>
            This is the permission value which is a combination of the specific permission bits.
            </summary>
        </member>
        <member name="P:Ximura.Security.RolePermission.Description">
            <summary>
            This is a description for the role permission.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraCommandPerformance">
            <summary>
            This is the base interface for performance counters for the command architecture.
            </summary>
        </member>
        <member name="T:Ximura.XimuraAppConfigurationExternalAttribute">
            <summary>
            This attribute is used to define command properties for the external configuration.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppConfigurationExternalAttribute.#ctor(Ximura.ConfigurationLocation,System.String)">
            <summary>
            This attribute is used to specify where a command should get their settings from.
            </summary>
            <param name="configType">The configuration type.</param>
            <param name="configLocation">The configuration location.</param>
        </member>
        <member name="P:Ximura.XimuraAppConfigurationExternalAttribute.ConfigType">
            <summary>
            This is the configuration type.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppConfigurationExternalAttribute.ConfigLocation">
            <summary>
            The configuration location.
            </summary>
        </member>
        <member name="T:Ximura.Framework.PerformanceCounterCollection">
            <summary>
            The PerformanceCounterCollection class provides group functionality
            for related performance counters.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounterCollection.mPerformanceCounters">
            <summary>
            This is the base performance counter collection.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounterCollection.syncObject">
            <summary>
            This is the base synchronization object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.PerformanceCountersCreate">
            <summary>
            This method creates the performance counters for the collection. You should override this method to add your own counters.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.Add(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method adds a counter to the collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.Clear">
            <summary>
            This method clears the collection.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.Contains(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method returns true if the item in in the collection.
            </summary>
            <param name="item">The item to check.</param>
            <returns>Returns true if the item is in the collection.</returns>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.CopyTo(Ximura.IXimuraPerformanceCounter[],System.Int32)">
            <summary>
            This method copies the collection to the array passed.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">The position in the index to begin copying.</param>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.Remove(Ximura.IXimuraPerformanceCounter)">
            <summary>
            This method removes an item from the collection.
            </summary>
            <param name="item">The item to remove.</param>
            <returns>Return true if the item is successfully removed.</returns>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.GetEnumerator">
            <summary>
            This is the generic enumerator for the collection.
            </summary>
            <returns>Returns an lock-free enumerator for the collection.</returns>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounterCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            This is the standard enumerator.
            </summary>
            <returns>Returns an lock-free enumerator for the collection.</returns>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounterCollection.Count">
            <summary>
            This is the collection length.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounterCollection.IsReadOnly">
            <summary>
            This method returns false as the performance counter collection is not locked.
            </summary>
        </member>
        <member name="T:Ximura.Framework.XimuraServerAgentHolder">
            <summary>
            The agent holder class is used by the agent based attributes to pass common information to the 
            server processes.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraStorage">
            <summary>
            This interface is implemented by storage manager.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraConfigurationManager">
            <summary>
            This is the configuration manager.
            </summary>
        </member>
        <member name="T:Ximura.Framework.FSMExtenderStateMetadataContainer">
            <summary>
            This is the Protocol state meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FSMExtenderStateMetadataContainer.Enabled">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderStateMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderStateMetadataContainer.#ctor(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theState">The state object.</param>
        </member>
        <member name="P:Ximura.Framework.FSMExtenderStateMetadataContainer.StateID">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMExtenderStateMetadataContainer.State">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMExtenderStateMetadataContainer.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CommandMetadataExtender">
            <summary>
            AppServerCommandExtender is used to start commands in the order specified within a command container.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.GetPriority(Ximura.Framework.IXimuraCommandBase)">
            <summary>
            This property is used to return the start priority.
            </summary>
            <param name="item">The command object.</param>
            <returns>The command start priority.</returns>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.SetPriority(Ximura.Framework.IXimuraCommandBase,System.Int32)">
            <summary>
            This property is used to set the command start priority.
            </summary>
            <param name="item">The command object.</param>
            <param name="value">The command start priority.</param>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.CommandHasPriority(System.Object)">
            <summary>
            This method determines whether the command has a priority set.
            </summary>
            <param name="service">The command service</param>
            <returns>returns true if the command has a priority set.</returns>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.InternalStart">
            <summary>
            This override does not implement any logic.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.InternalStop">
            <summary>
            This override does not implement any logic.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.StartCommandsInOrder">
            <summary>
            This method starts the commands in the order specified.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.StopCommandsInReverseOrder">
            <summary>
            This method starts the commands in the order specified.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.CommandsNotify(System.Type,System.Object)">
            <summary>
            This method notifies commands of specific system events in the same order that they were started.
            </summary>
            <param name="notificationType">The notification type.</param>
            <param name="notification">The notification object.</param>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.ItemGetNew(Ximura.Framework.IXimuraCommandBase)">
            <summary>
            This overriden method creates the new meta data container.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:Ximura.Framework.CommandMetadataExtender.CommandPriorityExtender">
            <summary>
            This class is used to set the command priority.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.CommandPriorityExtender.#ctor">
            <summary>
            This is the default constructor. Objects without a priority will go top. 
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.CommandPriorityExtender.#ctor(System.Boolean)">
            <summary>
            This is the comparer.
            </summary>
            <param name="nullGoesBottom">Set this to true if you wish objects 
            without a priority to be started last.</param>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataExtender.CommandPriorityExtender.Compare(Ximura.Framework.CommandMetadataContainer,Ximura.Framework.CommandMetadataContainer)">
            <summary>
            This object compares two AppServerCommandMetadataContainer objects. The highest
            priority will bubble to the top of the sorted list.
            Null objects will also be set to the highest priority.
            </summary>
            <param name="aX">The first object.</param>
            <param name="aY">The second object.</param>
            <returns>Returns a positive integer if the first object is greater than the second.</returns>
        </member>
        <member name="T:Ximura.Framework.CommandMetadataContainer">
            <summary>
            This is the command meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CommandMetadataContainer.Priority">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataContainer.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandMetadataContainer.#ctor(Ximura.Framework.IXimuraCommandBase)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theCommand">The command object.</param>
        </member>
        <member name="P:Ximura.Framework.CommandMetadataContainer.Command">
            <summary>
            This is the internal command stored in the metadata container.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandMetadataContainer.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.ConfigurationLocation">
            <summary>
            This enumeration specifies the action the command should take to load the configuration.
            </summary>
        </member>
        <member name="F:Ximura.ConfigurationLocation.None">
            <summary>
            The command uses the legacy config setting handler system.
            </summary>
        </member>
        <member name="F:Ximura.ConfigurationLocation.Resource">
            <summary>
            The configuration file is a resource embedded in the application.
            </summary>
        </member>
        <member name="F:Ximura.ConfigurationLocation.ConfigurationManager">
            <summary>
            The configuration should be retrieved from the configuration manager.
            </summary>
        </member>
        <member name="F:Ximura.ConfigurationLocation.Hybrid">
            <summary>
            The configuration file is a resource embedded by the system, but should be updated using the settings class.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraLoggingProvider">
            <summary>
            The logging provider interface is used by implemented by loggers and is used 
            by the logging manager to initialize logger in preperation for being inserted
            in the application logging collection.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraLoggingProvider.Initialize(Ximura.IXimuraLoggerSettings)">
            <summary>
            This method initializes a logger
            </summary>
            <param name="settings">The logger settings.</param>
        </member>
        <member name="M:Ximura.IXimuraLoggingProvider.Deinitialize">
            <summary>
            This method should be used to free up any resources used by the logger.
            </summary>
        </member>
        <member name="T:Ximura.Framework.InvalidStateNameFSMException">
            <summary>
            Summary description for FSMException.
            </summary>
        </member>
        <member name="T:Ximura.Framework.FSMException">
            <summary>
            Summary description for FSMException.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Framework.FSMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Framework.FSMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Framework.InvalidStateNameFSMException.#ctor">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
        </member>
        <member name="M:Ximura.Framework.InvalidStateNameFSMException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
        </member>
        <member name="M:Ximura.Framework.InvalidStateNameFSMException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the XimuraException class.
            </summary>
            <param name="message">The error message.</param>
            <param name="ex">The base exception.</param>
        </member>
        <member name="M:Ximura.Framework.InvalidStateNameFSMException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This exception is used for deserialization.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="T:Ximura.Framework.LoggerAgentBase">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="F:Ximura.Framework.LoggerAgentBase.mSettings">
            <summary>
            The logger settings.
            </summary>
        </member>
        <member name="F:Ximura.Framework.LoggerAgentBase.mAutoFlush">
            <summary>
            The autoflush parameter
            </summary>
        </member>
        <member name="F:Ximura.Framework.LoggerAgentBase.mLoglevel">
            <summary>
            The log level
            </summary>
        </member>
        <member name="F:Ximura.Framework.LoggerAgentBase.LogMachine">
            <summary>
            The log machine name
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Initialize(Ximura.IXimuraLoggerSettings)">
            <summary>
            This property initializes the logger.
            </summary>
            <param name="settings">The logger settings</param>
            <exception cref="T:System.ArgumentNullException">The settings parameter cannot be null.</exception>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Deinitialize">
            <summary>
            This method should be used to release any resources held by the logger.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.AcceptCategory(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            This method inform the Logging Manager whether it will accept the 
            category for logging.
            </summary>
            <param name="category">The logging category.</param>
            <param name="type">The envent log entry type category.</param>
            <returns>A boolean value. True indicates the category is accepted.</returns>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.ConvertType(System.Diagnostics.EventLogEntryType)">
            <summary>
            This is a bit messy, but I require a fine grained resolution on the type and cannot depend on .NET implicit conversions.
            </summary>
            <param name="type">The type to convert.</param>
            <returns>Returns an integer specifying the debug type.</returns>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Indent">
            <summary>
            This method indents the logger input.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Unindent">
            <summary>
            This method unindents the logger input.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Ximura#IXimuraLogging#get_IndentLevel">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Ximura#IXimuraLogging#set_IndentLevel(System.Int32)">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Ximura#IXimuraLogging#get_IndentSize">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="M:Ximura.Framework.LoggerAgentBase.Ximura#IXimuraLogging#set_IndentSize(System.Int32)">
            <summary>
            Summary description for BaseLogger.
            </summary>
        </member>
        <member name="P:Ximura.Framework.LoggerAgentBase.AutoFlush">
            <summary>
            The auto-flush property.
            </summary>
        </member>
        <member name="T:Ximura.Security.UserRole">
            <summary>
            The SearchResult class is the base class for returning lists of data
            based on a set of search parameters.
            </summary>
        </member>
        <member name="M:Ximura.Security.UserRole.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserRole.Active">
            <summary>
            This property specifies whether the user role is active.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserRole.UserRoles">
            <summary>
            This is the a list of user roles.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraStateExtender">
            <summary>
            This interface is used to extend a finite machine.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtender.GetStateID(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This property is used to return the state ID.
            </summary>
            <param name="state">The state.</param>
            <returns>The ID of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtender.SetStateID(Ximura.Framework.IXimuraFSMState,System.String)">
            <summary>
            This property is used to set the state id
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state ID.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtender.GetEnabled(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This property is used to return the enabled state.
            </summary>
            <param name="state">The state.</param>
            <returns>The enabled boolean value of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraStateExtender.SetEnabled(Ximura.Framework.IXimuraFSMState,System.Boolean)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state enabled value.</param>
        </member>
        <member name="T:Ximura.Framework.IXimuraStateExtender`1">
            <summary>
            This is the generic extender for the finite state machine.
            </summary>
            <typeparam name="ST">The finite state machine state.</typeparam>
        </member>
        <member name="T:Ximura.Framework.FSMCommandContainer`2">
            <summary>
            This is the standard container for hosting a Application command that has a standard constructor.
            </summary>
            <typeparam name="COMM">The FSM command type.</typeparam>
            <typeparam name="STAT">The FSM command state type.</typeparam>
        </member>
        <member name="T:Ximura.Framework.CommandContainer`1">
            <summary>
            This is the standard container for hosting a Application command that has a standard constructor.
            </summary>
            <typeparam name="COMM">The command type.</typeparam>
        </member>
        <member name="T:Ximura.Framework.CommandContainerBase`1">
            <summary>
            This class is used to hold command objects and run them without the need for the server environment.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CommandContainerBase`1.mCommand">
            <summary>
            This is the instance of the command.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CommandContainerBase`1.mPoolSecurityManagerJob">
            <summary>
            This pool contains the collection of security manager jobs used by the command container.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CommandContainerBase`1.mPoolJob">
            <summary>
            This pool contains the actual job information.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainerBase`1.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainerBase`1.CommandCreate">
            <summary>
            This virtual method creates the command and sets the mCommand property. You should override this method
            if you wish to use a different constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainerBase`1.ServerComponentsInitialize">
            <summary>
            This method is used to create the server components.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainerBase`1.PoolManagerCreate">
            <summary>
            This method creates the pool manager for the system.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandContainerBase`1.CommandID">
            <summary>
            This is command identifier.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandContainerBase`1.CommandName">
            <summary>
            This is the command name.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandContainerBase`1.CommandDescription">
            <summary>
            This is the command description.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainer`1.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandContainer`1.CommandCreate">
            <summary>
            This override creates the command.
            </summary>
        </member>
        <member name="F:Ximura.Framework.FSMCommandContainer`2.mExtensionStates">
            <summary>
            This is the list of extension states.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandContainer`2.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandContainer`2.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,`1}})">
            <summary>
            This is the state extension constructor.
            </summary>
            <param name="states">A collection of extension states.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCommandContainer`2.CommandCreate">
            <summary>
            This override creates the command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandContainer`2.InternalStart">
            <summary>
            This override mimics the steps taken when starting an application. This is to 
            enable the command to start in the correct environment,
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMCommandContainer`2.ExtensionStates">
            <summary>
            This virtual method can be overriden to add states the collection.
            </summary>
        </member>
        <member name="T:Ximura.Framework.XimuraAppTrace">
            <summary>
            XimuraAppTrace is the static trace object for the Ximura Application framework.
            </summary>
        </member>
        <member name="F:Ximura.Framework.XimuraAppTrace.categoryLogger">
            <summary>
            categoryLogger contains the collection of active loggers
            </summary>
        </member>
        <member name="F:Ximura.Framework.XimuraAppTrace.CategoryLog">
            <summary>
            CategoryLog contains a lookup table based on category with an array list stored
            against the value for each logger that accepts 
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Start">
            <summary>
            This method starts the logger. If the logger is active this method has no effect.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Close">
            <summary>
            This method closes the logger and flushes any messages from the buffer. If the logger is 
            not active this method has no effect.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.FlushInternal">
            <summary>
            This method flushes all the current loggers.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Flush">
            <summary>
            This method flushes all the current loggers.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.LogItem(Ximura.Framework.XimuraAppTrace.QueueItem)">
            <summary>
            This method logs the specific item.
            </summary>
            <param name="item">The item to log.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.LoggerAdd(Ximura.IXimuraLogging)">
            <summary>
            This method adds a logger to the logging collection.
            </summary>
            <param name="logger">The logger to add.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.LoggerRemove(Ximura.IXimuraLogging)">
            <summary>
            This method removes a logger from the logging collection.
            </summary>
            <param name="logger">The logger to remove.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.CategoryToLog(System.String)">
            <summary>
            This method returns true if there is a category to log.
            </summary>
            <param name="category">The category to check.</param>
            <returns>Returns true if the category is found.</returns>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Resolve(Ximura.Framework.XimuraAppTrace.QueueItem)">
            <summary>
            This method is used to resolve the application loggers for a particular logging
            event.
            </summary>
            <param name="item">The logging QueueItem.</param>
            <returns>Returns an array list containing the logger collection.</returns>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Write(System.Object,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message object specified.
            </summary>
            <param name="value">The message object.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Write(System.String,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message specified.
            </summary>
            <param name="message">The message.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.WriteLine(System.Object,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message object specified.
            For loggers that support multiline entry, this method will append a new line to the message.
            </summary>
            <param name="value">The message object.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.WriteLine(System.String,System.String,System.Diagnostics.EventLogEntryType,System.String)">
            <summary>
            This method writes to the selected loggers with the message specified. 
            For loggers that support multiline entry, this method will append a new line to the message.
            </summary>
            <param name="message">The message.</param>
            <param name="category">The message category.</param>
            <param name="type">The entry type.</param>
            <param name="DebugSwitch">The applicable debug switch.</param>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Indent">
            <summary>
            This method increase the indent
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraAppTrace.Unindent">
            <summary>
            This method decreases the indent
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.Active">
            <summary>
            This method identifies whether the logger is active.
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.AutoFlush">
            <summary>
            This method determines whether the logger will flush automatically
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.DefaultLogger">
            <summary>
            This property gets the default logger
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.IndentLevel">
            <summary>
            This property returns the current indent level
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.IndentSize">
            <summary>
            This property detemines the indent size in characters
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraAppTrace.Listeners">
            <summary>
            This method is not implemented.
            </summary>
        </member>
        <member name="T:Ximura.Framework.XimuraAppTrace.QueueItem">
            <summary>
            The QueueItem class holds a log item.
            </summary>
        </member>
        <member name="T:Ximura.Framework.FSMContextPoolAccess`1">
            <summary>
            This class is used by the Transport class to allow transport buffers access to the buffer pool 
            for listening connections that require a new buffer.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMContextPoolAccess">
            <summary>
            This interface is used to allow non-generic implementations of the class due to the .Net 2.0 generic limitations.
            </summary>
        </member>
        <member name="T:Ximura.Framework.StateMetadataContainer`1">
            <summary>
            This is the Protocol state meta data container.
            </summary>
        </member>
        <member name="F:Ximura.Framework.StateMetadataContainer`1.Enabled">
            <summary>
            This is the enabled status.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateMetadataContainer`1.#ctor">
            <summary>
            This is the primary constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateMetadataContainer`1.#ctor(`0)">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="theState">The state object.</param>
        </member>
        <member name="P:Ximura.Framework.StateMetadataContainer`1.StateID">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.StateMetadataContainer`1.State">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.StateMetadataContainer`1.StateIDNext">
            <summary>
            The is the state ID
            </summary>
        </member>
        <member name="P:Ximura.Framework.StateMetadataContainer`1.Item(System.Object)">
            <summary>
            This is the public accessor for the extended properties.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraSessionManagerAuth">
            <summary>
            IXimuraSessionManagerAuth
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManagerAuth.Logout(Ximura.IXimuraSessionSCM)">
            <summary>
            This method logs out a session and resets its permission to an
            unathorized user.
            </summary>
            <param name="theSession">The session to logout.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManagerAuth.Close(Ximura.IXimuraSessionSCM)">
            <summary>
            This method closes a session and removes it from the session collection.
            </summary>
            <param name="theSession">The session object to close.</param>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManagerAuth.GetSeed(Ximura.IXimuraSessionSCM)">
            <summary>
            This method gets the seed for the user.
            </summary>
            <param name="theSession">The session.</param>
            <returns>Returns a byte array containing the seed.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManagerAuth.GetNonce(Ximura.IXimuraSessionSCM)">
            <summary>
            This is the one time parameter used to prevent replay attacks. This method
            is not currently implemented.
            </summary>
            <param name="theSession">The session to generate the nonce for.</param>
            <returns>A byte array containing the nonce.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraSessionManagerAuth.Authenticate(Ximura.IXimuraSessionSCM,System.Byte[])">
            <summary>
            This method will authenticate the user.
            </summary>
            <param name="theSession">The session.</param>
            <param name="hash">The hash.</param>
            <returns>The session state after the authentication request.</returns>
        </member>
        <member name="T:Ximura.Framework.IXimuraPerformanceManagerService">
            <summary>
            This interface is implemented by performance manager service.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraConfigSH">
            <summary>
            This is the default interface for an application config section handler
            </summary>
        </member>
        <member name="M:Ximura.IXimuraConfigSH.GetSetting(System.String)">
            <summary>
            Get the config setting by specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="M:Ximura.IXimuraConfigSH.GetSettingExtended(System.String,System.String)">
            <summary>
            This method returns the extended setting object or null if the type 
            specified does not exist.
            </summary>
            <param name="Type">The name of the type.</param>
            <param name="subType">The name of the subtype.</param>
            <returns>The settings object containing the specific settings or null if the object can not be found.</returns>
        </member>
        <member name="P:Ximura.IXimuraConfigSH.Enabled">
            <summary>
            This property determines whether the command is enabled.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandProcessConfigSH">
            <summary>
            This is the default interface for an application config section handler
            </summary>
        </member>
        <member name="M:Ximura.IXimuraCommandProcessConfigSH.getPasswordHash(System.Byte[])">
            <summary>
            Returns the hash of the password based on the session seed value
            </summary>
            <param name="seed">The session seed.</param>
            <returns>The hash of the password.</returns>
        </member>
        <member name="P:Ximura.IXimuraCommandProcessConfigSH.UserName">
            <summary>
            The username of the process.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandProcessConfigSH.UserRealm">
            <summary>
            This is the realm for the user to connect to.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandProcessConfigSH.UserSessionRealm">
            <summary>
            This is the realm for the user to connect to.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandProcessConfigSH.RequiresProcessSession">
            <summary>
            This method determines whether the process command requires a process session.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraCommandProcessConfigSH.SecurityData">
            <summary>
            Returns the security data.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraCommandKnownService">
            <summary>
            This interface is used to identify known services.
            </summary>
        </member>
        <member name="T:Ximura.XimuraAppModuleConfigAttribute">
            <summary>
            This attribute is used to set the default command configurations setting.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppModuleConfigAttribute.#ctor(System.String,System.String)">
            <summary>
            This attribute is used to specify the default XML for the parent configuration settings.
            </summary>
            <param name="ResourceFile">The name of the resource file that contains the base XML fragment.</param>
            <param name="ConfigHelperType">This is the .NET type name of the command config section handler.</param>
        </member>
        <member name="P:Ximura.XimuraAppModuleConfigAttribute.ResourceFile">
            <summary>
            The name of the resource file that contains the base XML fragment.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppModuleConfigAttribute.ConfigHelperType">
            <summary>
            The >NET type name of the command config section handler.
            </summary>
        </member>
        <member name="T:Ximura.Framework.PerformanceCounterNotificationType">
            <summary>
            This method is used to determine the notification logic that the counter wishes to use.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounterNotificationType.EventDriven">
            <summary>
            The counter will fire an event when the value changes. Generally this should only
            be used for counters that change infrequently.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounterNotificationType.TimerPoll">
            <summary>
            The timer poll method should be used for counters that need to be updated at a regular
            interval.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMExtenderBridge`1">
            <summary>
            IXimuraFSMExtenderBridge is used to connect.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMExtenderBridge`1.StateEx">
            <summary>
            The state extender.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSessionNegotiateMD5Hash">
            <summary>
            This interface is used for MD5 authentication.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiateMD5Hash.GetSeed">
            <summary>
            This method returns the seed for the current username.
            </summary>
            <returns>The seed as a byte array</returns>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiateMD5Hash.GetSeed(System.String)">
            <summary>
            This method returns the seed for the specified username.
            </summary>
            <param name="Username">The username required</param>
            <returns>The seed as a byte array</returns>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiateMD5Hash.GetSeed(System.String,System.Globalization.CultureInfo)">
            <summary>
            This method returns the seed for the specified username.
            </summary>
            <param name="Username">The username required</param>
            <param name="newCulture">The culture for the session.</param>
            <returns>The seed as a byte array</returns>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiateMD5Hash.Authenticate(System.Byte[])">
            <summary>
            This method will attempt to authenticate the session.
            </summary>
            <param name="hash">The MD5 hash of the username and the seed</param>
            <returns>The session state after the authtication attempt</returns>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiateMD5Hash.Authenticate(System.Byte[],System.Globalization.CultureInfo)">
            <summary>
            This method will attempt to authenticate the session.
            </summary>
            <param name="hash">The MD5 hash of the username and the seed</param>
            <param name="sessionCulture">The session culture</param>
            <returns>The session state after the authtication attempt</returns>
        </member>
        <member name="T:Ximura.Framework.IXimuraConfigurationSystemExtended">
            <summary>
            This interface adds addition fucntionality to the configuration system to allow
            types to be specified for specific configuration sections.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraConfigurationSystemExtended.GetConfigExtended(System.String,System.Type)">
            <summary>
            Gets the specified configuration.
            </summary>
            <param name="configKey">The configuration key.</param>
            <param name="settingsType">The settings type. 
            The settings object must inherit from this type.</param>
            <returns>The object representing the configuration.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraConfigurationSystemExtended.GetConfigExtended(System.String,System.Type,System.Boolean)">
            <summary>
            Gets the specified configuration.
            </summary>
            <param name="configKey">The configuration key.</param>
            <param name="settingsType">The settings type. 
            The settings object must inherit from this type.</param>
            <param name="force">When this object is set to true, the settings object type 
            specified in the config file is ignored.</param>
            <returns>The object representing the configuration.</returns>
        </member>
        <member name="T:Ximura.Framework.FSMCommandPerformance">
            <summary>
            This is the base performance counter for the Finite State Machine.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CommandPerformance">
            <summary>
            This method holds the standard performance indicators the a command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandPerformance.#ctor">
            <summary>
            This is the default constructor for the Content object.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSessionSCM">
            <summary>
            The IXimuraSessionSM interface is the primary interface implemented
            by the session object, and is refernced by the Security Manager
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSession">
            <summary>
            The IXimuraSession interface is exposed to the user.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraSession.Close">
            <summary>
            This method closes the session and cancals any pending job requests.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSession.AuthenticationTypes">
            <summary>
            This enumeration returns the supported authentication interfaces.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSessionSCM.SetSCMPublicKey">
            <summary>
            This property allows the Security Manager to pass the session it's
            public key.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraSessionSCM.GetSessionPublicKey">
            <summary>
            This method allows the Session Token to get the session's
            public key.
            </summary>
        </member>
        <member name="T:Ximura.Framework.AppBase`2">
            <summary>
            This is the base class for both command and application objects.
            </summary>
            <typeparam name="CONF">The configuration class.</typeparam>
            <typeparam name="PERF">The performance class.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppBase`2.#ctor">
            <summary>
            This is the default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppBase`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.IXimuraLoggingManagerConfigSH">
            <summary>
            This interface is used by the logging config section handler.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraLoggingManagerConfigSH.Loggers">
            <summary>
            This method returns an ArrayList containing a collection of strings with the name of the 
            logging providers.
            </summary>
            <returns>An ArrayList containing a collection of strings.</returns>
        </member>
        <member name="M:Ximura.IXimuraLoggingManagerConfigSH.LoggerType(System.String)">
            <summary>
            This method returns the specific logger type.
            </summary>
            <param name="provider">The provider.</param>
            <returns>An ArrayList containing the list of loggers.</returns>
        </member>
        <member name="M:Ximura.IXimuraLoggingManagerConfigSH.getLoggerSettings(System.String)">
            <summary>
            This method returns the specific logger settings object.
            </summary>
            <param name="provider">The provider to return the settings for.</param>
            <returns>The logging object.</returns>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMState">
            <summary>
            This interface should be implemented by components that can be hosted as a state in a finite 
            state machine.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraFSMStateIdentifier">
            <summary>
            This is the default state property
            </summary>
        </member>
        <member name="P:Ximura.IXimuraFSMStateIdentifier.Identifier">
            <summary>
            This is the state identifier string.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMExtenderBase">
            <summary>
            IXimuraFSMExtenderBase is used to provide services for the base service.
            </summary>
        </member>
        <member name="T:Ximura.Framework.XimuraComponentPermissionCollection">
            <summary>
            The XimuraComponentPermissionCollection class contains a list of 
            security permissions for the class. Permissions are binary, i.e. a user
            can have a yes/no right to the permission set.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraComponentPermissionCollection.PermissionsAreSupported(System.Int64)">
            <summary>
            This method returns true if the permission is supported.
            </summary>
            <param name="permissionBitmap"></param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.XimuraComponentPermissionCollection.CalculatePermissions">
            <summary>
            This method is called to calculate the permissions.
            </summary>
        </member>
        <member name="M:Ximura.Framework.XimuraComponentPermissionCollection.SetPermission(Ximura.XimuraComponentPermissionAttribute)">
            <summary>
            This method sets the permissions
            </summary>
            <param name="attr">The permission attribute to process.</param>
        </member>
        <member name="P:Ximura.Framework.XimuraComponentPermissionCollection.SupportedPermissionBitmap">
            <summary>
            This property contains the supported permissions for the bitmap.
            </summary>
        </member>
        <member name="P:Ximura.Framework.XimuraComponentPermissionCollection.UnsupportedPermissionBitmap">
            <summary>
            These are the unsupported permissions. Denied permissions cannot be overriden.
            </summary>
        </member>
        <member name="T:Ximura.Framework.NullLoggerAgent">
            <summary>
            This is the empty logging provider. This class does nothing but is provided
            to allow logging code to be inserted in to a command, which can be executed when
            no provider is available.
            </summary>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.#ctor">
            <summary>
            We specify a private constructor as we only require a single instance
            of this class across a domain.
            </summary>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.NoLog">
            <summary>
            This static method is used to retrieve the single instance of the null
            logging provider.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.AcceptCategory(System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            This method informs the logging manager whether the logger will log for 
            this particular category. The null logger will always return false.
            </summary>
            <param name="category">The category to log.</param>
            <returns>The method always returns false.</returns>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.Initialize(Ximura.IXimuraLoggerSettings)">
            <summary>
            This method is used for initialization. For the null logger this
            does not do anything.
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.WriteLine(System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.Write(System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="M:Ximura.Framework.NullLoggerAgent.Write(System.String,System.String)">
            <summary>
            This method does nothing in the null logger.
            </summary>
            <param name="message">The message</param>
            <param name="category">The category</param>
        </member>
        <member name="T:Ximura.Security.UserAuth">
            <summary>
            This data holds the suthentication information for a particular user.
            </summary>
        </member>
        <member name="M:Ximura.Security.UserAuth.#ctor">
            <summary>
            This is the user authentication constructor.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuth.Type">
            <summary>
            This is the auth type.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuth.UserID">
            <summary>
            This is the user ID.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuth.DateExpiry">
            <summary>
            This is the expiry date.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuth.Enabled">
            <summary>
            This boolean value indicates whether the auth is enabled.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuth.AuthData">
            <summary>
            This collection holds the authorization data for the entity.
            </summary>
        </member>
        <member name="T:Ximura.Security.UserAuthData">
            <summary>
            This class holds the authorization data for a user auth collection.
            </summary>
        </member>
        <member name="M:Ximura.Security.UserAuthData.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Security.UserAuthData.#ctor(System.String,System.Byte[])">
            <summary>
            This is the primary constructor.
            </summary>
            <param name="key">The auth key.</param>
            <param name="value">The auth binary array.</param>
        </member>
        <member name="P:Ximura.Security.UserAuthData.Key">
            <summary>
            The authorization identifier.
            </summary>
        </member>
        <member name="P:Ximura.Security.UserAuthData.Value">
            <summary>
            The authorization byte value.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CommandRequestCallback">
            <summary>
            This delegate is used to call back commands with specific jobs.
            </summary>
        </member>
        <member name="T:Ximura.Framework.PerformanceCounter">
            <summary>
            This class is the default class for the performance counters.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounter.mInternalValue">
            <summary>
            The internal value.
            </summary>
        </member>
        <member name="F:Ximura.Framework.PerformanceCounter.mCatType">
            <summary>
            The performance counter type.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounter.#ctor">
            <summary>
            This is the default constructor for the performance counter.
            </summary>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounter.Increment">
            <summary>
            This method increments the internal counter by 1.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounter.IncrementBy(System.Int64)">
            <summary>
            This method increments or decrements the internal counter by the value specified.
            </summary>
            <param name="value">The positive or negative value.</param>
            <returns>Returns the new value of the counter.</returns>
        </member>
        <member name="M:Ximura.Framework.PerformanceCounter.Decrement">
            <summary>
            This method decrements the internal counter by 1.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounter.CounterType">
            <summary>
            This is the performance counter type.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounter.RawValue">
            <summary>
            This is the performance counter raw value.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounter.Active">
            <summary>
            This property identifies whether the counter is active.
            </summary>
        </member>
        <member name="P:Ximura.Framework.PerformanceCounter.Dirty">
            <summary>
            This property identifies whether the counter is dirty and needs updating.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraLoggingExtended">
            <summary>
            This interface provides extended functionality to enable the EventLogEntryType parameter
            to be passed to the write methods
            </summary>
        </member>
        <member name="M:Ximura.IXimuraLoggingExtended.Write(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes a category name and message to the trace listeners in the Listeners
             collection.
            </summary>
            <param name="message">A message to write. </param>
            <param name="category">A category name used to organize the output.</param>
            <param name="type">The event log type.</param>
        </member>
        <member name="M:Ximura.IXimuraLoggingExtended.WriteLine(System.String,System.String,System.Diagnostics.EventLogEntryType)">
            <summary>
            Writes a category name and message to the trace listeners in the Listeners collection.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
            <param name="type">The event log type.</param>
        </member>
        <member name="T:Ximura.IXimuraPerformanceManager">
            <summary>
            This interface should be used by all services providing performance services
            </summary>
        </member>
        <member name="M:Ximura.IXimuraPerformanceManager.PerformanceCounterCollectionRegister(Ximura.IXimuraPerformanceCounterCollection)">
            <summary>
            This method registers a performance counter will the application.
            </summary>
            <param name="collection">The counter collection to register.</param>
        </member>
        <member name="M:Ximura.IXimuraPerformanceManager.PerformanceCounterCollectionUnregister(Ximura.IXimuraPerformanceCounterCollection)">
            <summary>
            This method removes a performance counter collection from the application.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="T:Ximura.Framework.IXimuraStorageManagerService">
            <summary>
            This interface is implemented by storage manager.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraAppSettings">
            <summary>
            This interface is used by a control to retrieve his application settings
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraAppSettings.AppSettings">
            <summary>
            Name/Value Collection of AppSettings
            </summary>
        </member>
        <member name="T:Ximura.XimuraAppModuleAttribute">
            <summary>
            This attribute is used to define command properties.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppModuleAttribute.#ctor(System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify a command within the Ximura system.
            </summary>
            <param name="ID">A string representation of a GUID, i.e. in the form 6364755B-97B9-4799-B8BC-3D98EB786C92</param>
        </member>
        <member name="M:Ximura.XimuraAppModuleAttribute.#ctor(System.String,System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify a command within the Ximura system.
            </summary>
            <param name="ID">A string representation of a GUID, i.e. in the form 
            6364755B-97B9-4799-B8BC-3D98EB786C92</param>
            <param name="name">The friendly name of the command. 
            This will be used in the config file when parsing command set up paramters.</param>
        </member>
        <member name="M:Ximura.XimuraAppModuleAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify a command within the Ximura system.
            </summary>
            <param name="ID">A string representation of a GUID, i.e. in the form 
            6364755B-97B9-4799-B8BC-3D98EB786C92</param>
            <param name="name">The friendly name of the command. 
            This will be used in the config file when parsing command set up paramters.</param>
            <param name="configClass">The config class for the command.</param>
        </member>
        <member name="M:Ximura.XimuraAppModuleAttribute.#ctor(System.String,System.String,System.String,System.Boolean,System.String)">
            <summary>
            The XimuraAppCommandIDAttribute is used to uniquely identify a command within the Ximura system.
            </summary>
            <param name="ID">A string representation of a GUID, i.e. in the form 
            6364755B-97B9-4799-B8BC-3D98EB786C92</param>
            <param name="name">The friendly name of the command. 
            This will be used in the config file when parsing command set up paramters.</param>
            <param name="configClass">The config class for the command.</param>
            <param name="description">The description for the command.</param>
        </member>
        <member name="P:Ximura.XimuraAppModuleAttribute.ID">
            <summary>
            The Guid of the module
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppModuleAttribute.Name">
            <summary>
            The name of the module. This is used to retrieve app settings.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppModuleAttribute.ConfigClass">
            <summary>
            This class returns the class type for the config settings class for the command.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppModuleAttribute.ForceConfigClass">
            <summary>
            This class returns the class type for the config settings class for the command.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppModuleAttribute.Description">
            <summary>
            The friendly description of the module.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMStateMetadataExtender`1">
            <summary>
            Summary description for IXimuraFSMStateExtender.
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMStateMetadataExtender`1.GetState(System.String)">
            <summary>
            This method returns the initial state.
            </summary>
            <param name="State">The type parameter for the state required.</param>
            <returns>The state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMStateMetadataExtender`1.GetInitialState">
            <summary>
            This is the initial state.
            </summary>
            <returns>The initial state. If there is no initial state set 
            this will return null;</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMStateMetadataExtender`1.GetStateName(`0)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMStateMetadataExtender`1.HasNextState(System.String)">
            <summary>
            This method returns true if the user has set a next state for this state.
            </summary>
            <param name="State">The state to check.</param>
            <returns>Returns true if a next state has been set.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraFSMStateMetadataExtender`1.GetNextState(System.String)">
            <summary>
            This method returns the state identifier for the next state.
            </summary>
            <param name="State">The state to check.</param>
            <returns>Returns the state identifier of the next state if set. 
            If not set this method will return null.</returns>
        </member>
        <member name="T:Ximura.Framework.FSMExtenderBridge`1">
            <summary>
            FSMExtenderBridge is used to link the various components within the finite state machine.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderBridge`1.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderBridge`1.#ctor(Ximura.Framework.IXimuraFSMStateMetadataExtender{`0})">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMExtenderBridge`1.StateEx">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SessionJob">
            <summary>
            SessionJob is used to hold the job requests while they are being processed.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SessionJob.#ctor">
            <summary>
            This is the internal constructor used by the object pool.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SessionJob.Reset">
            <summary>
            This method is used to reset the session job to its initial state.
            </summary>
        </member>
        <member name="M:Ximura.Framework.SessionJob.Initialize(System.Guid,System.Guid,Ximura.IXimuraRQRSEnvelope,Ximura.CommandRSCallback,Ximura.CommandProgressCallback,Ximura.JobSignature,Ximura.JobPriority)">
            <summary>
            This method initializes the SessionJob.
            </summary>
            <param name="sessionid">The session id.</param>
            <param name="id">The job id.</param>
            <param name="data">The envelope data to process.</param>
            <param name="RSCallback">The response call back delegate. This will
            be used to respond after the job is complete.</param>
            <param name="ProgressCallback">The progress call back delegate. 
            This should be null if callbacks are not required.</param>
            <param name="signature">The job signature.</param>
            <param name="priority">The job priority.</param>
        </member>
        <member name="M:Ximura.Framework.SessionJob.WaitForCompletion">
            <summary>
            This method will hold the current thread until the job is complete
            or this request times out.
            </summary>
            <returns>True if the job has completed.</returns>
        </member>
        <member name="M:Ximura.Framework.SessionJob.WaitForCompletion(System.Int32)">
            <summary>
            This method will hold the current thread until the job is complete
            or this request times out.
            </summary>
            <param name="timeout">The time out.</param>
            <returns>True if the job has completed.</returns>
        </member>
        <member name="M:Ximura.Framework.SessionJob.SignalCompletion">
            <summary>
            This method will signal completion and allow the blocked thread to 
            continue.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SessionJob.SynchRQ">
            <summary>
            This property returns true if this is a synchronous request.
            </summary>
        </member>
        <member name="P:Ximura.Framework.SessionJob.RequiresProgressUpdates">
            <summary>
            This property returns true is the job requires Progress Updates
            </summary>
        </member>
        <member name="T:Ximura.IXimuraPerformanceItem">
            <summary>
            This method is 
            </summary>
        </member>
        <member name="T:Ximura.Framework.AppCommandStandard">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
        </member>
        <member name="T:Ximura.Framework.AppCommandStandard`3">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppCommandStandard`6">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`3.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Framework.AppCommandStandard`2">
            <summary>
            AppCommandStandard is the base command object that all standard commands should inherit from.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`2.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandStandard`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Framework.FSMExtenderCommand`6">
            <summary>
            The state extender command allows third parties to extend exisiting finite state machines through a modular architecture.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="T:Ximura.Framework.AppCommandProcess`6">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CBRQ">The callback request RQRSFolder type.</typeparam>
            <typeparam name="CBRS">The callback response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
            <typeparam name="PERF">The command performance monitor object.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="F:Ximura.Framework.FSMExtenderCommand`6.mStateExtender">
            <summary>
            This is the state extender.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand`6.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand`6.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand`6.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand`6.ServicesReference">
            <summary>
            This override retrieves a reference to the IXimuraStateExtenderService object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand`6.ServicesDereference">
            <summary>
            This override removes the reference to the IXimuraStateExtenderService object.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.FSMExtenderCommand.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.XimuraAppConfigurationAttribute">
            <summary>
            This attribute is used to define command properties.
            </summary>
        </member>
        <member name="M:Ximura.XimuraAppConfigurationAttribute.#ctor(Ximura.ConfigurationLocation,System.String)">
            <summary>
            This attribute is used to specify where a command should get their settings from.
            </summary>
            <param name="configType">The configuration type.</param>
            <param name="configLocation">The configuration location.</param>
        </member>
        <member name="P:Ximura.XimuraAppConfigurationAttribute.ConfigType">
            <summary>
            This is the configuration type.
            </summary>
        </member>
        <member name="P:Ximura.XimuraAppConfigurationAttribute.ConfigLocation">
            <summary>
            The configuration location.
            </summary>
        </member>
        <member name="T:Ximura.Framework.SessionToken">
            <summary>
            SessionToken is used to validate session requests.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Ximura.Framework.SessionToken.VerifyJobSignature(Ximura.JobBase)" -->
        <member name="T:XimuraResourcePlaceholder">
            <summary>
            The XimuraResourcePlaceholder class is used to set the base for resource namespaces. 
            This is a bug with .NET, but it's something we have to live with.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraFSMConfigSH">
            <summary>
            IXimuraFSMConfigSH is used to provide specific settings for the context pool.
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMConfigSH.PoolMin">
            <summary>
            This is the context pool minimum value. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMConfigSH.PoolMax">
            <summary>
            This is the context pool maximum value. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMConfigSH.PoolPrefer">
            <summary>
            This is the context pool preferred value. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.IXimuraFSMConfigSH.ContextTimeOutInMs">
            <summary>
            This is the timeout value for the context. Requests which exceed this value will be cancelled.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration.XPScAdd(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            This method adds the XPath shortcuts in to the collection. You should
            override this method to add your own shorcuts.
            </summary>
            <param name="mappingShortcuts">The mapping shorcut collection.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration.NamespaceManagerAdd(System.Xml.XmlNamespaceManager)">
            <summary>
            This override adds the ximura namespace to the default Namespace manager.
            </summary>
            <param name="nsm">The system default namespace manager.</param>
        </member>
        <member name="P:Ximura.Framework.FSMCommandConfiguration.PoolMin">
            <summary>
            The minimum number of contexts to be placed in the pool.
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMCommandConfiguration.PoolMax">
            <summary>
            The maximum number of context that will be allowed in the pool. 
            </summary>
        </member>
        <member name="P:Ximura.Framework.FSMCommandConfiguration.PoolPrefer">
            <summary>
            The preferred number of context for the pool.
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration`1.#ctor">
            <summary>
            The default constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            This is the deserialization constructor. 
            </summary>
            <param name="info">The Serialization info object that contains all the relevant data.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="M:Ximura.Framework.FSMCommandConfiguration`1.TimerPollJobCreate(System.Collections.Generic.List{Ximura.Framework.TimerPollJob},System.Xml.XmlElement)">
            <summary>
            This method creates a specific poll job and adds it to the poll job collection.
            </summary>
            <param name="jobs">The poll job collection.</param>
            <param name="node">The configuration node for the poll job.</param>
        </member>
        <member name="T:Ximura.IXimuraSessionThread">
            <summary>
            This interface is used by an app process to request a thread from the thread pool.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraLoggingManagerService">
            <summary>
            This interface is registered by the logging manager in the control container.
            </summary>
        </member>
        <member name="T:Ximura.Security.Permission">
            <summary>
            This class contains the security information for a particular system permission.
            </summary>
        </member>
        <member name="M:Ximura.Security.Permission.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="T:Ximura.Framework.State">
            <summary>
            State is part of the Finite State Machine.
            </summary>
        </member>
        <member name="M:Ximura.Framework.State.#ctor">
            <summary>
            This is the default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.State.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the component model constructor.
            </summary>
            <param name="container">The container</param>
        </member>
        <member name="M:Ximura.Framework.State.ToString">
            <summary>
            This override is primarily used in debugging to make the state easy to identify.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.State.InternalStart">
            <summary>
            This method starts the AppServerProcess and registers any services
            </summary>
        </member>
        <member name="M:Ximura.Framework.State.InternalStop">
            <summary>
            The method stops the AppServerProcess and unregisters and services
            </summary>
        </member>
        <member name="P:Ximura.Framework.State.Identifier">
            <summary>
            This is the state identifier string.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraGatewayManagerService">
            <summary>
            This interface is implemented by the Gateway service.
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraCommandBridge">
            <summary>
            This interface is registered as a service and is used by application 
            commands to communicate with the Application Dispatcher
            </summary>
        </member>
        <member name="M:Ximura.Framework.IXimuraCommandBridge.Register(Ximura.Framework.IXimuraCommandRQ)">
            <summary>
            This method is used to register a command in the command collection.
            </summary>
            <param name="command">The command to register.</param>
            <returns>Returns true if the command is registered successfully.</returns>
        </member>
        <member name="M:Ximura.Framework.IXimuraCommandBridge.Unregister(Ximura.Framework.IXimuraCommandRQ)">
            <summary>
            This method is used to unregister a command.
            </summary>
            <param name="command">The commands to remove.</param>
            <returns>Returns true if the command is successfully removed
            from the collection. Returns false if the command was not a member
            of the collection.</returns>
        </member>
        <member name="P:Ximura.Framework.IXimuraCommandBridge.EnvelopeHelper">
            <summary>
            This is the envelope helper.
            </summary>
        </member>
        <member name="T:Ximura.Framework.CompletionJobCallBack">
            <summary>
            This delegate is used to signal the completion of a set of jobs.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSchedulerCommandRegister">
            <summary>
            The IXimuraSchedulerCommandRegister interface provides an interaction between the scheduler and the 
            application commands.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraSchedulerCommandRegister.RegisterCommand(System.Guid)">
            <summary>
            This method is used by a command to register with the scheduler, a valid Guid identifies that the 
            scheduler is able to process the schedules.
            </summary>
            <param name="CommandID">Returns true if the command was registered successfully.</param>
        </member>
        <member name="M:Ximura.IXimuraSchedulerCommandRegister.RegisterSubCommand(System.Guid,System.String,System.String,System.String,System.Object,Ximura.JobPriority)">
            <summary>
            This method is used to register a subcommand. The scheduler will then call the command based
            on the schedule set in entity.
            </summary>
            <param name="registerID">The register ID.</param>
            <param name="subCommandID">The sub command id, this can be null if it is the default command.</param>
            <param name="description">The sub command description.</param>
            <param name="subCommand">The subcommand object that will be sent to the command as a subcommand parameter.</param>
            <param name="priority">The priority set for the request.</param>
            <returns>Returns true if the command is registered correctly.</returns>
        </member>
        <member name="M:Ximura.IXimuraSchedulerCommandRegister.RegisterSubCommand(System.Guid,System.String,System.String,System.String,System.Object,Ximura.JobPriority,System.Boolean)">
            <summary>
            This method is used to register a subcommand. The scheduler will then call the command based
            on the schedule set in entity.
            </summary>
            <param name="registerID">The register ID.</param>
            <param name="subCommandID">The sub command id, this can be null if it is the default command.</param>
            <param name="description">The sub command description.</param>
            <param name="subCommand">The subcommand object that will be sent to the command as a subcommand parameter.</param>
            <param name="priority">The priority set for the request.</param>
            <param name="active">This method specifies whether the subcommand is active. This property can be used to remove a subcommand
            that has been depreciated in a new version of a command. If this is set to false
            the Scheduler will remove all references to this command if they exist in the schedule.</param>
            <returns>Returns true if the command is registered correctly.</returns>
        </member>
        <member name="M:Ximura.IXimuraSchedulerCommandRegister.UnregisterSubCommand(System.Guid,System.String)">
            <summary>
            This method is used to specifically disable/unregister a subcommand that has already been registered.
            </summary>
            <param name="registerID">The registerID previously passed back from the scheduler.</param>
            <param name="subCommandID">The subcommand id.</param>
            <returns>Returns true if the command was successfully unregistered.</returns>
        </member>
        <member name="M:Ximura.IXimuraSchedulerCommandRegister.UnregisterCommand(System.Guid)">
            <summary>
            This method is used by the command to signal that it is completed/stopped and no longer wishes
            to receive shedule requests.
            </summary>
            <param name="schedulerID"></param>
        </member>
        <member name="T:Ximura.Framework.CJobSignature`7">
            <summary>
            The job signature class is used to hold metadata for a JobContext completion job request.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CJobSignature`7.#ctor(`0)">
            <summary>
            This is the default constructor for the signature.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Ximura.Framework.CJobSignature`7.JobLength">
            <summary>
            The job execution length.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.CJobSignature`7.ValidateContext">
            <summary>
            This method validates that the context has not been returned to the pool and used for 
            another job while this has been executing.
            </summary>
            <returns>Returns true if the signature IDs match.</returns>
        </member>
        <member name="P:Ximura.Framework.CJobSignature`7.SignatureID">
            <summary>
            The job signature.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CJobSignature`7.Context">
            <summary>
            The context
            </summary>
        </member>
        <member name="P:Ximura.Framework.CJobSignature`7.CreateTime">
            <summary>
            The job create time.
            </summary>
        </member>
        <member name="T:Ximura.Framework.StateExtender`1">
            <summary>
            StateExtender contains the collection of states for the finite state machine.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.#ctor(System.ComponentModel.IContainer)">
            <summary>
            The component model constructor.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.ServicesProvide">
            <summary>
            This overriden method registers the ContextExtender with the Extender Bridge
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.ServicesRemove">
            <summary>
            This overriden method unregisters the ContextExtender with the Extender Bridge if it is already registered.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetStateID(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This property is used to return the state ID.
            </summary>
            <param name="state">The state.</param>
            <returns>The ID of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.SetStateID(Ximura.Framework.IXimuraFSMState,System.String)">
            <summary>
            This property is used to set the state id
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state ID.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetEnabled(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This property is used to return the enabled state.
            </summary>
            <param name="state">The state.</param>
            <returns>The enabled boolean value of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.SetEnabled(Ximura.Framework.IXimuraFSMState,System.Boolean)">
            <summary>
            This property is used to set the enabled state.
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state enabled value.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetNextStateID(Ximura.Framework.IXimuraFSMState)">
            <summary>
            This property is used to return the state ID.
            </summary>
            <param name="state">The state.</param>
            <returns>The ID of the state.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.SetNextStateID(Ximura.Framework.IXimuraFSMState,System.String)">
            <summary>
            This property is used to set the state id
            </summary>
            <param name="state">The state object.</param>
            <param name="value">The state ID.</param>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetStateIDList">
            <summary>
            This method returns a collection of the available state ids in the collection.
            </summary>
            <returns>Returns a string array containing a string is for each of the states.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetItemByType(System.Type)">
            <summary>
            This method returns the object based on its type.
            </summary>
            <param name="dataContentType">The type to find.</param>
            <returns></returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetState(System.String)">
            <summary>
            This method returns the state for the name passed to the connection.
            </summary>
            <param name="State">The state ID to return.</param>
            <returns>Null if the state cannot be found, or the state 
            object requested.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetInitialState">
            <summary>
            This is the initial state for all new connections.
            </summary>
            <returns>The initial state for the protocol.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.GetStateName(`0)">
            <summary>
            This method returns the string identifier for the specified state.
            </summary>
            <param name="CurrentState">The state to identify.</param>
            <returns>Returns a string identifying the state.</returns>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.InternalStart">
            <summary>
            This method starts the states registered in the collection.
            </summary>
        </member>
        <member name="M:Ximura.Framework.StateExtender`1.InternalStop">
            <summary>
            This method stops the states registered in the collection.
            </summary>
        </member>
        <member name="P:Ximura.Framework.StateExtender`1.InitialState">
            <summary>
            This is the ID of the initial state.
            </summary>
        </member>
        <member name="P:Ximura.Framework.StateExtender`1.ExtenderBridge">
            <summary>
            This read only property is the service bridge object from
            the protocol to the extenders.
            </summary>
        </member>
        <member name="T:Ximura.Framework.ContextPool`1">
            <summary>
            The context pool holds the collection of context objects.
            </summary>
            <typeparam name="CNTX">The context type.</typeparam>
        </member>
        <member name="M:Ximura.Framework.ContextPool`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Ximura.Framework.ContextPool`1.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            This is the pool constructor with default arguments.
            </summary>
            <param name="min">This is the minimum size.</param>
            <param name="max">This is the maximum size.</param>
            <param name="prefer">This is the prefered size.</param>
        </member>
        <member name="T:Ximura.IXimuraCommandScheduleProcessConfigSH">
            <summary>
            This is the default interface for a scheduler config section handler
            </summary>
        </member>
        <member name="M:Ximura.IXimuraCommandScheduleProcessConfigSH.GetNextSchedules(System.Double)">
            <summary>
            Get Next Schedules within interval(in minutes)
            </summary>
            <param name="interval">interval in minutes</param>
            <returns>return all upcoming schedules in time/schedule pairs</returns>
        </member>
        <member name="T:Ximura.Framework.CompletionJobStatus">
            <summary>
            This enumeration is used to indicate the completion job status.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Unset">
            <summary>
            The job is unset.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Submitting">
            <summary>
            This property is used when manual signaling is required for the completion job.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Complete">
            <summary>
            The job is complete.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Processing">
            <summary>
            The job is currently processing.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.TimeOut">
            <summary>
            The job has timed out.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Cancelled">
            <summary>
            The parent job has been cancelled.
            </summary>
        </member>
        <member name="F:Ximura.Framework.CompletionJobStatus.Aborted">
            <summary>
            The completion job has been aborted.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraLoggerConfigSH">
            <summary>
            This interface is used by the logging config section handlers
            </summary>
        </member>
        <member name="M:Ximura.IXimuraLoggerSettings.GetSwitchValue(System.String)">
            <summary>
            This method returns a specific switch value for the type of message.
            </summary>
            <param name="Type">The switch type.</param>
            <returns>An integer value with the switch value.</returns>
        </member>
        <member name="M:Ximura.IXimuraLoggerSettings.GetSetting(System.String)">
            <summary>
            Get the config setting by specific Type
            </summary>
            <param name="Type">setting type</param>
            <returns>setting value</returns>
        </member>
        <member name="P:Ximura.IXimuraLoggerSettings.LoggerID">
            <summary>
            This is the logger identifier.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraLoggerSettings.LoggerName">
            <summary>
            This is the logger public name.
            </summary>
        </member>
        <member name="P:Ximura.IXimuraLoggerSettings.LogLevel">
            <summary>
            This is the default log level
            </summary>
        </member>
        <member name="T:Ximura.Framework.IXimuraAppServer">
            <summary>
            Summary description for IXimuraAppServer.
            </summary>
        </member>
        <member name="T:Ximura.Security.User">
            <summary>
            The SearchResult class is the base class for returning lists of data
            based on a set of search parameters.
            </summary>
        </member>
        <member name="M:Ximura.Security.User.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Ximura.Security.User"/> class.
            </summary>
        </member>
        <member name="P:Ximura.Security.User.Name">
            <summary>
            Gets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Ximura.Security.User.JobTitle">
            <summary>
            Gets or sets the job title.
            </summary>
            <value>The job title.</value>
        </member>
        <member name="P:Ximura.Security.User.NameTitle">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title, eg. Mr, Ms, Dr.</value>
        </member>
        <member name="P:Ximura.Security.User.NameGiven">
            <summary>
            Gets or sets the given names.
            </summary>
            <value>The given names.</value>
        </member>
        <member name="P:Ximura.Security.User.NameFamily">
            <summary>
            Gets or sets the family name.
            </summary>
            <value>The family name.</value>
        </member>
        <member name="P:Ximura.Security.User.EmailAddress">
            <summary>
            Gets or sets the email.
            </summary>
            <value>The email.</value>
        </member>
        <member name="P:Ximura.Security.User.PhoneNumber">
            <summary>
            Gets or sets the phone number.
            </summary>
            <value>The phone number.</value>
        </member>
        <member name="P:Ximura.Security.User.MobileNumber">
            <summary>
            Gets or sets the mobile number.
            </summary>
            <value>The mobile number.</value>
        </member>
        <member name="T:Ximura.Framework.AppCommandProcess">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
        </member>
        <member name="T:Ximura.Framework.AppCommandProcess`3">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
            <typeparam name="CONF">The command configuration object.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`3.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`3.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`3.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Framework.AppCommandProcess`2">
            <summary>
            AppCommandProcess is the base class for Command that require a system session.
            </summary>
            <typeparam name="RQ">The main request RQRSFolder type.</typeparam>
            <typeparam name="RS">The main response RQRSFolder type.</typeparam>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`2.#ctor">
            <summary>
            This is the empty constructor
            </summary>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`2.#ctor(System.ComponentModel.IContainer)">
            <summary>
            This is the constrcutor used by the Ximura Application model.
            </summary>
            <param name="container">The command container.</param>
        </member>
        <member name="M:Ximura.Framework.AppCommandProcess`2.#ctor(System.Nullable{System.Guid},System.ComponentModel.IContainer)">
            <summary>
            This is the base constructor for a Ximura command
            </summary>
            <param name="commandID">This is the explicitly set command id, leave this as null if you want to use the default id.</param>
            <param name="container">The container to be added to</param>
        </member>
        <member name="T:Ximura.Framework.CommandDefinition">
            <summary>
            This helper class is used to pass the command definition without passing a reference to the command.
            </summary>
        </member>
        <member name="M:Ximura.Framework.CommandDefinition.#ctor(Ximura.IXimuraCommand)">
            <summary>
            This constructor copies the command properties in to the helper class.
            </summary>
            <param name="command">The command whose definition needs to be encapsulated.</param>
        </member>
        <member name="P:Ximura.Framework.CommandDefinition.CommandID">
            <summary>
            The command unique identifier.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandDefinition.CommandName">
            <summary>
            The command name. This is used in to the config file to retrieve the
            settings.
            </summary>
        </member>
        <member name="P:Ximura.Framework.CommandDefinition.CommandDescription">
            <summary>
            The command friendly description.
            </summary>
        </member>
        <member name="T:Ximura.IXimuraSessionNegotiatePlainText">
            <summary>
            This method is used to authenticate a user using plain text.
            </summary>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiatePlainText.Authenticate(System.String)">
            <summary>
            This method extends the basic session functionality and
            authenticates a user based on their plain text username and
            password.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Ximura.IXimuraSessionNegotiatePlainText.Authenticate(System.String,System.String)">
            <summary>
            This method extends the basic session functionality and
            authenticates a user based on their plain text username and
            password.
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
        </member>
    </members>
</doc>
